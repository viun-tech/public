/**
 * avis
 * VUE Autonomous Visual Inspection System (AVIS)
 *
 * The version of the OpenAPI document: 0.8.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";

/**
 * The PatchedProductRequest model module.
 * @module model/PatchedProductRequest
 * @version 0.8.0
 */
class PatchedProductRequest {
  /**
   * Constructs a new <code>PatchedProductRequest</code>.
   * @alias module:model/PatchedProductRequest
   */
  constructor() {
    PatchedProductRequest.initialize(this);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  static initialize(obj) {}

  /**
   * Constructs a <code>PatchedProductRequest</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/PatchedProductRequest} obj Optional instance to populate.
   * @return {module:model/PatchedProductRequest} The populated <code>PatchedProductRequest</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new PatchedProductRequest();

      if (data.hasOwnProperty("team")) {
        obj["team"] = ApiClient.convertToType(data["team"], "Number");
      }
      if (data.hasOwnProperty("category")) {
        obj["category"] = ApiClient.convertToType(data["category"], "Number");
      }
      if (data.hasOwnProperty("inspections")) {
        obj["inspections"] = ApiClient.convertToType(data["inspections"], [
          "Number",
        ]);
      }
      if (data.hasOwnProperty("identifier")) {
        obj["identifier"] = ApiClient.convertToType(
          data["identifier"],
          "String",
        );
      }
      if (data.hasOwnProperty("display_name")) {
        obj["display_name"] = ApiClient.convertToType(
          data["display_name"],
          "String",
        );
      }
      if (data.hasOwnProperty("description")) {
        obj["description"] = ApiClient.convertToType(
          data["description"],
          "String",
        );
      }
    }
    return obj;
  }

  /**
   * Validates the JSON data with respect to <code>PatchedProductRequest</code>.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PatchedProductRequest</code>.
   */
  static validateJSON(data) {
    // ensure the json data is an array
    if (!Array.isArray(data["inspections"])) {
      throw new Error(
        "Expected the field `inspections` to be an array in the JSON data but got " +
          data["inspections"],
      );
    }
    // ensure the json data is a string
    if (
      data["identifier"] &&
      !(
        typeof data["identifier"] === "string" ||
        data["identifier"] instanceof String
      )
    ) {
      throw new Error(
        "Expected the field `identifier` to be a primitive type in the JSON string but got " +
          data["identifier"],
      );
    }
    // ensure the json data is a string
    if (
      data["display_name"] &&
      !(
        typeof data["display_name"] === "string" ||
        data["display_name"] instanceof String
      )
    ) {
      throw new Error(
        "Expected the field `display_name` to be a primitive type in the JSON string but got " +
          data["display_name"],
      );
    }
    // ensure the json data is a string
    if (
      data["description"] &&
      !(
        typeof data["description"] === "string" ||
        data["description"] instanceof String
      )
    ) {
      throw new Error(
        "Expected the field `description` to be a primitive type in the JSON string but got " +
          data["description"],
      );
    }

    return true;
  }
}

/**
 * @member {Number} team
 */
PatchedProductRequest.prototype["team"] = undefined;

/**
 * @member {Number} category
 */
PatchedProductRequest.prototype["category"] = undefined;

/**
 * @member {Array.<Number>} inspections
 */
PatchedProductRequest.prototype["inspections"] = undefined;

/**
 * @member {String} identifier
 */
PatchedProductRequest.prototype["identifier"] = undefined;

/**
 * @member {String} display_name
 */
PatchedProductRequest.prototype["display_name"] = undefined;

/**
 * @member {String} description
 */
PatchedProductRequest.prototype["description"] = undefined;

export default PatchedProductRequest;
