/**
 * avis
 * VUE Autonomous Visual Inspection System (AVIS)
 *
 * The version of the OpenAPI document: 0.8.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";

/**
 * The MLModel model module.
 * @module model/MLModel
 * @version 0.8.0
 */
class MLModel {
  /**
   * Constructs a new <code>MLModel</code>.
   * @alias module:model/MLModel
   * @param id {Number}
   * @param model {Number}
   * @param createdAt {Date}
   * @param updatedAt {Date}
   * @param teams {Array.<Number>}
   */
  constructor(id, model, createdAt, updatedAt, teams) {
    MLModel.initialize(this, id, model, createdAt, updatedAt, teams);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  static initialize(obj, id, model, createdAt, updatedAt, teams) {
    obj["id"] = id;
    obj["model"] = model;
    obj["created_at"] = createdAt;
    obj["updated_at"] = updatedAt;
    obj["teams"] = teams;
  }

  /**
   * Constructs a <code>MLModel</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/MLModel} obj Optional instance to populate.
   * @return {module:model/MLModel} The populated <code>MLModel</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new MLModel();

      if (data.hasOwnProperty("id")) {
        obj["id"] = ApiClient.convertToType(data["id"], "Number");
      }
      if (data.hasOwnProperty("model")) {
        obj["model"] = ApiClient.convertToType(data["model"], "Number");
      }
      if (data.hasOwnProperty("created_at")) {
        obj["created_at"] = ApiClient.convertToType(data["created_at"], "Date");
      }
      if (data.hasOwnProperty("updated_at")) {
        obj["updated_at"] = ApiClient.convertToType(data["updated_at"], "Date");
      }
      if (data.hasOwnProperty("version")) {
        obj["version"] = ApiClient.convertToType(data["version"], "String");
      }
      if (data.hasOwnProperty("url")) {
        obj["url"] = ApiClient.convertToType(data["url"], "String");
      }
      if (data.hasOwnProperty("teams")) {
        obj["teams"] = ApiClient.convertToType(data["teams"], ["Number"]);
      }
    }
    return obj;
  }

  /**
   * Validates the JSON data with respect to <code>MLModel</code>.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MLModel</code>.
   */
  static validateJSON(data) {
    // check to make sure all required properties are present in the JSON string
    for (const property of MLModel.RequiredProperties) {
      if (!data[property]) {
        throw new Error(
          "The required field `" +
            property +
            "` is not found in the JSON data: " +
            JSON.stringify(data),
        );
      }
    }
    // ensure the json data is a string
    if (
      data["version"] &&
      !(
        typeof data["version"] === "string" || data["version"] instanceof String
      )
    ) {
      throw new Error(
        "Expected the field `version` to be a primitive type in the JSON string but got " +
          data["version"],
      );
    }
    // ensure the json data is a string
    if (
      data["url"] &&
      !(typeof data["url"] === "string" || data["url"] instanceof String)
    ) {
      throw new Error(
        "Expected the field `url` to be a primitive type in the JSON string but got " +
          data["url"],
      );
    }
    // ensure the json data is an array
    if (!Array.isArray(data["teams"])) {
      throw new Error(
        "Expected the field `teams` to be an array in the JSON data but got " +
          data["teams"],
      );
    }

    return true;
  }
}

MLModel.RequiredProperties = [
  "id",
  "model",
  "created_at",
  "updated_at",
  "teams",
];

/**
 * @member {Number} id
 */
MLModel.prototype["id"] = undefined;

/**
 * @member {Number} model
 */
MLModel.prototype["model"] = undefined;

/**
 * @member {Date} created_at
 */
MLModel.prototype["created_at"] = undefined;

/**
 * @member {Date} updated_at
 */
MLModel.prototype["updated_at"] = undefined;

/**
 * @member {String} version
 */
MLModel.prototype["version"] = undefined;

/**
 * @member {String} url
 */
MLModel.prototype["url"] = undefined;

/**
 * @member {Array.<Number>} teams
 */
MLModel.prototype["teams"] = undefined;

export default MLModel;
