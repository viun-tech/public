/**
 * avis
 * VUE Autonomous Visual Inspection System (AVIS)
 *
 * The version of the OpenAPI document: 0.8.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";

/**
 * The InspectionRequest model module.
 * @module model/InspectionRequest
 * @version 0.8.0
 */
class InspectionRequest {
  /**
   * Constructs a new <code>InspectionRequest</code>.
   * @alias module:model/InspectionRequest
   * @param team {Number}
   */
  constructor(team) {
    InspectionRequest.initialize(this, team);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  static initialize(obj, team) {
    obj["team"] = team;
  }

  /**
   * Constructs a <code>InspectionRequest</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/InspectionRequest} obj Optional instance to populate.
   * @return {module:model/InspectionRequest} The populated <code>InspectionRequest</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new InspectionRequest();

      if (data.hasOwnProperty("team")) {
        obj["team"] = ApiClient.convertToType(data["team"], "Number");
      }
      if (data.hasOwnProperty("product")) {
        obj["product"] = ApiClient.convertToType(data["product"], "Number");
      }
      if (data.hasOwnProperty("opened_by")) {
        obj["opened_by"] = ApiClient.convertToType(data["opened_by"], "Number");
      }
      if (data.hasOwnProperty("closed_by")) {
        obj["closed_by"] = ApiClient.convertToType(data["closed_by"], "Number");
      }
      if (data.hasOwnProperty("images")) {
        obj["images"] = ApiClient.convertToType(data["images"], ["Number"]);
      }
      if (data.hasOwnProperty("close_datetime")) {
        obj["close_datetime"] = ApiClient.convertToType(
          data["close_datetime"],
          "Date",
        );
      }
      if (data.hasOwnProperty("configuration")) {
        obj["configuration"] = ApiClient.convertToType(
          data["configuration"],
          "Number",
        );
      }
      if (data.hasOwnProperty("metadata")) {
        obj["metadata"] = ApiClient.convertToType(data["metadata"], "Number");
      }
    }
    return obj;
  }

  /**
   * Validates the JSON data with respect to <code>InspectionRequest</code>.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InspectionRequest</code>.
   */
  static validateJSON(data) {
    // check to make sure all required properties are present in the JSON string
    for (const property of InspectionRequest.RequiredProperties) {
      if (!data[property]) {
        throw new Error(
          "The required field `" +
            property +
            "` is not found in the JSON data: " +
            JSON.stringify(data),
        );
      }
    }
    // ensure the json data is an array
    if (!Array.isArray(data["images"])) {
      throw new Error(
        "Expected the field `images` to be an array in the JSON data but got " +
          data["images"],
      );
    }

    return true;
  }
}

InspectionRequest.RequiredProperties = ["team"];

/**
 * @member {Number} team
 */
InspectionRequest.prototype["team"] = undefined;

/**
 * @member {Number} product
 */
InspectionRequest.prototype["product"] = undefined;

/**
 * @member {Number} opened_by
 */
InspectionRequest.prototype["opened_by"] = undefined;

/**
 * @member {Number} closed_by
 */
InspectionRequest.prototype["closed_by"] = undefined;

/**
 * @member {Array.<Number>} images
 */
InspectionRequest.prototype["images"] = undefined;

/**
 * @member {Date} close_datetime
 */
InspectionRequest.prototype["close_datetime"] = undefined;

/**
 * @member {Number} configuration
 */
InspectionRequest.prototype["configuration"] = undefined;

/**
 * @member {Number} metadata
 */
InspectionRequest.prototype["metadata"] = undefined;

export default InspectionRequest;
