/**
 * avis
 * VUE Autonomous Visual Inspection System (AVIS)
 *
 * The version of the OpenAPI document: 0.8.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FormatEnum from './FormatEnum';
import ValidationStatusEnum from './ValidationStatusEnum';

/**
 * The ImageRequest model module.
 * @module model/ImageRequest
 * @version 0.8.0
 */
class ImageRequest {
    /**
     * Constructs a new <code>ImageRequest</code>.
     * @alias module:model/ImageRequest
     * @param team {Number} 
     * @param captureDatetime {Date} 
     * @param file {File} 
     */
    constructor(team, captureDatetime, file) { 
        
        ImageRequest.initialize(this, team, captureDatetime, file);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, team, captureDatetime, file) { 
        obj['team'] = team;
        obj['capture_datetime'] = captureDatetime;
        obj['file'] = file;
    }

    /**
     * Constructs a <code>ImageRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ImageRequest} obj Optional instance to populate.
     * @return {module:model/ImageRequest} The populated <code>ImageRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ImageRequest();

            if (data.hasOwnProperty('team')) {
                obj['team'] = ApiClient.convertToType(data['team'], 'Number');
            }
            if (data.hasOwnProperty('inspection')) {
                obj['inspection'] = ApiClient.convertToType(data['inspection'], 'Number');
            }
            if (data.hasOwnProperty('uploaded_by')) {
                obj['uploaded_by'] = ApiClient.convertToType(data['uploaded_by'], 'Number');
            }
            if (data.hasOwnProperty('results')) {
                obj['results'] = ApiClient.convertToType(data['results'], ['Number']);
            }
            if (data.hasOwnProperty('format')) {
                obj['format'] = FormatEnum.constructFromObject(data['format']);
            }
            if (data.hasOwnProperty('capture_datetime')) {
                obj['capture_datetime'] = ApiClient.convertToType(data['capture_datetime'], 'Date');
            }
            if (data.hasOwnProperty('file')) {
                obj['file'] = ApiClient.convertToType(data['file'], File);
            }
            if (data.hasOwnProperty('part_id')) {
                obj['part_id'] = ApiClient.convertToType(data['part_id'], 'String');
            }
            if (data.hasOwnProperty('validation_status')) {
                obj['validation_status'] = ValidationStatusEnum.constructFromObject(data['validation_status']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ImageRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ImageRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ImageRequest.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['results'])) {
            throw new Error("Expected the field `results` to be an array in the JSON data but got " + data['results']);
        }
        // ensure the json data is a string
        if (data['part_id'] && !(typeof data['part_id'] === 'string' || data['part_id'] instanceof String)) {
            throw new Error("Expected the field `part_id` to be a primitive type in the JSON string but got " + data['part_id']);
        }

        return true;
    }


}

ImageRequest.RequiredProperties = ["team", "capture_datetime", "file"];

/**
 * @member {Number} team
 */
ImageRequest.prototype['team'] = undefined;

/**
 * @member {Number} inspection
 */
ImageRequest.prototype['inspection'] = undefined;

/**
 * @member {Number} uploaded_by
 */
ImageRequest.prototype['uploaded_by'] = undefined;

/**
 * @member {Array.<Number>} results
 */
ImageRequest.prototype['results'] = undefined;

/**
 * @member {module:model/FormatEnum} format
 */
ImageRequest.prototype['format'] = undefined;

/**
 * @member {Date} capture_datetime
 */
ImageRequest.prototype['capture_datetime'] = undefined;

/**
 * @member {File} file
 */
ImageRequest.prototype['file'] = undefined;

/**
 * @member {String} part_id
 */
ImageRequest.prototype['part_id'] = undefined;

/**
 * @member {module:model/ValidationStatusEnum} validation_status
 */
ImageRequest.prototype['validation_status'] = undefined;






export default ImageRequest;

