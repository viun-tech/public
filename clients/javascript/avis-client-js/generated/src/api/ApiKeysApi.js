/**
 * avis
 * VUE Autonomous Visual Inspection System (AVIS)
 *
 * The version of the OpenAPI document: 0.8.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";
import UserAPIKeyCreate from "../model/UserAPIKeyCreate";
import UserAPIKeyCreateRequest from "../model/UserAPIKeyCreateRequest";

/**
 * ApiKeys service.
 * @module api/ApiKeysApi
 * @version 0.8.0
 */
export default class ApiKeysApi {
  /**
   * Constructs a new ApiKeysApi.
   * @alias module:api/ApiKeysApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  constructor(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;
  }

  /**
   * Callback function to receive the result of the keysCreate operation.
   * @callback module:api/ApiKeysApi~keysCreateCallback
   * @param {String} error Error message, if any.
   * @param {module:model/UserAPIKeyCreate} data The data returned by the service call.
   * @param {String} response The complete HTTP response.
   */

  /**
   * Create a new API key for the current user.
   * @param {Object} opts Optional parameters
   * @param {module:model/UserAPIKeyCreateRequest} [userAPIKeyCreateRequest]
   * @param {module:api/ApiKeysApi~keysCreateCallback} callback The callback function, accepting three arguments: error, data, response
   * data is of type: {@link module:model/UserAPIKeyCreate}
   */
  keysCreate(opts, callback) {
    opts = opts || {};
    let postBody = opts["userAPIKeyCreateRequest"];

    let pathParams = {};
    let queryParams = {};
    let headerParams = {};
    let formParams = {};

    let authNames = ["cookieAuth", "ApiKeyAuth"];
    let contentTypes = [
      "application/json",
      "application/x-www-form-urlencoded",
      "multipart/form-data",
    ];
    let accepts = ["application/json"];
    let returnType = UserAPIKeyCreate;
    return this.apiClient.callApi(
      "/api/keys/",
      "POST",
      pathParams,
      queryParams,
      headerParams,
      formParams,
      postBody,
      authNames,
      contentTypes,
      accepts,
      returnType,
      null,
      callback,
    );
  }

  /**
   * Callback function to receive the result of the keysRevokeCreate operation.
   * @callback module:api/ApiKeysApi~keysRevokeCreateCallback
   * @param {String} error Error message, if any.
   * @param {module:model/UserAPIKeyCreate} data The data returned by the service call.
   * @param {String} response The complete HTTP response.
   */

  /**
   * Revoke an API key for the current user. We use the name of the API Key to revoke it, not the ID or actual key to prevent information leakage.
   * @param {Object} opts Optional parameters
   * @param {module:model/UserAPIKeyCreateRequest} [userAPIKeyCreateRequest]
   * @param {module:api/ApiKeysApi~keysRevokeCreateCallback} callback The callback function, accepting three arguments: error, data, response
   * data is of type: {@link module:model/UserAPIKeyCreate}
   */
  keysRevokeCreate(opts, callback) {
    opts = opts || {};
    let postBody = opts["userAPIKeyCreateRequest"];

    let pathParams = {};
    let queryParams = {};
    let headerParams = {};
    let formParams = {};

    let authNames = ["cookieAuth", "ApiKeyAuth"];
    let contentTypes = [
      "application/json",
      "application/x-www-form-urlencoded",
      "multipart/form-data",
    ];
    let accepts = ["application/json"];
    let returnType = UserAPIKeyCreate;
    return this.apiClient.callApi(
      "/api/keys/revoke/",
      "POST",
      pathParams,
      queryParams,
      headerParams,
      formParams,
      postBody,
      authNames,
      contentTypes,
      accepts,
      returnType,
      null,
      callback,
    );
  }
}
