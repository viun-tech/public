{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to the Avis documentation!","text":""},{"location":"about/","title":"Coming soon!","text":""},{"location":"api/clients/","title":"AVIS Clients","text":"Language Package Description Python avis-client (Source, Documentation) Python client for the AVIS API. <p>For examples on how to use the clients, please refer to the examples section.</p>"},{"location":"api/clients/python/avis_client/","title":"avis-client","text":"<p>VUE Autonomous Visual Inspection System (AVIS)</p> <p>This Python package is automatically generated by the OpenAPI Generator project:</p> <ul> <li>API version: 0.8.0</li> <li>Package version: 0.8.0</li> <li>Build package: org.openapitools.codegen.languages.PythonClientCodegen</li> </ul>"},{"location":"api/clients/python/avis_client/#requirements","title":"Requirements.","text":"<p>Python 3.7+</p>"},{"location":"api/clients/python/avis_client/#installation-usage","title":"Installation &amp; Usage","text":""},{"location":"api/clients/python/avis_client/#pip-install","title":"pip install","text":"<p>If the python package is hosted on a repository, you can install directly using:</p> <p><pre><code>pip install git+https://github.com/vuengineering/public.git\n</code></pre> (you may need to run <code>pip</code> with root permission: <code>sudo pip install git+https://github.com/vuengineering/public.git</code>)</p> <p>Then import the package: <pre><code>import avis_client\n</code></pre></p>"},{"location":"api/clients/python/avis_client/#setuptools","title":"Setuptools","text":"<p>Install via Setuptools.</p> <p><pre><code>python setup.py install --user\n</code></pre> (or <code>sudo python setup.py install</code> to install the package for all users)</p> <p>Then import the package: <pre><code>import avis_client\n</code></pre></p>"},{"location":"api/clients/python/avis_client/#tests","title":"Tests","text":"<p>Execute <code>pytest</code> to run the tests.</p>"},{"location":"api/clients/python/avis_client/#getting-started","title":"Getting Started","text":"<p>Please follow the installation procedure and then run the following:</p> <pre><code>import time\nimport avis_client\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.ApiKeysApi(api_client)\n    user_api_key_create_request = avis_client.UserAPIKeyCreateRequest() # UserAPIKeyCreateRequest |  (optional)\n\n    try:\n        api_response = api_instance.keys_create(user_api_key_create_request=user_api_key_create_request)\n        print(\"The response of ApiKeysApi-&gt;keys_create:\\n\")\n        pprint(api_response)\n    except ApiException as e:\n        print(\"Exception when calling ApiKeysApi-&gt;keys_create: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/#documentation-for-api-endpoints","title":"Documentation for API Endpoints","text":"<p>All URIs are relative to http://localhost:8000</p> Class Method HTTP request Description ApiKeysApi keys_create POST /api/keys/ ApiKeysApi keys_revoke_create POST /api/keys/revoke/ ConfigurationApi configuration_create POST /api/configuration/ ConfigurationApi configuration_destroy DELETE /api/configuration/{id}/ ConfigurationApi configuration_list GET /api/configuration/ ConfigurationApi configuration_partial_update PATCH /api/configuration/{id}/ ConfigurationApi configuration_retrieve GET /api/configuration/{id}/ ConfigurationApi configuration_update PUT /api/configuration/{id}/ ImageApi image_create POST /api/image/ ImageApi image_destroy DELETE /api/image/{id}/ ImageApi image_list GET /api/image/ ImageApi image_partial_update PATCH /api/image/{id}/ ImageApi image_quality_list GET /api/image/quality/ ImageApi image_retrieve GET /api/image/{id}/ ImageApi image_update PUT /api/image/{id}/ ImageAttributeApi image_attribute_create POST /api/image-attribute/ ImageAttributeApi image_attribute_destroy DELETE /api/image-attribute/{id}/ ImageAttributeApi image_attribute_list GET /api/image-attribute/ ImageAttributeApi image_attribute_partial_update PATCH /api/image-attribute/{id}/ ImageAttributeApi image_attribute_retrieve GET /api/image-attribute/{id}/ ImageAttributeApi image_attribute_update PUT /api/image-attribute/{id}/ ImageAttributeCategoryApi image_attribute_category_create POST /api/image-attribute-category/ ImageAttributeCategoryApi image_attribute_category_destroy DELETE /api/image-attribute-category/{id}/ ImageAttributeCategoryApi image_attribute_category_list GET /api/image-attribute-category/ ImageAttributeCategoryApi image_attribute_category_partial_update PATCH /api/image-attribute-category/{id}/ ImageAttributeCategoryApi image_attribute_category_retrieve GET /api/image-attribute-category/{id}/ ImageAttributeCategoryApi image_attribute_category_update PUT /api/image-attribute-category/{id}/ InspectionApi inspection_create POST /api/inspection/ InspectionApi inspection_destroy DELETE /api/inspection/{id}/ InspectionApi inspection_list GET /api/inspection/ InspectionApi inspection_partial_update PATCH /api/inspection/{id}/ InspectionApi inspection_retrieve GET /api/inspection/{id}/ InspectionApi inspection_send_validation_email_retrieve GET /api/inspection/{id}/send_validation_email/ InspectionApi inspection_update PUT /api/inspection/{id}/ InspectionApi inspection_validation_status_list GET /api/inspection/validation_status/ MembershipApi membership_create POST /api/membership/ MembershipApi membership_destroy DELETE /api/membership/{id}/ MembershipApi membership_list GET /api/membership/ MembershipApi membership_retrieve GET /api/membership/{id}/ MembershipApi membership_update PUT /api/membership/{id}/ MetadataApi metadata_create POST /api/metadata/ MetadataApi metadata_destroy DELETE /api/metadata/{id}/ MetadataApi metadata_list GET /api/metadata/ MetadataApi metadata_partial_update PATCH /api/metadata/{id}/ MetadataApi metadata_retrieve GET /api/metadata/{id}/ MetadataApi metadata_update PUT /api/metadata/{id}/ MetadataSchemaApi metadata_schema_create POST /api/metadata-schema/ MetadataSchemaApi metadata_schema_destroy DELETE /api/metadata-schema/{id}/ MetadataSchemaApi metadata_schema_list GET /api/metadata-schema/ MetadataSchemaApi metadata_schema_partial_update PATCH /api/metadata-schema/{id}/ MetadataSchemaApi metadata_schema_retrieve GET /api/metadata-schema/{id}/ MetadataSchemaApi metadata_schema_update PUT /api/metadata-schema/{id}/ MlApi ml_model_create POST /api/ml/model/ MlApi ml_model_destroy DELETE /api/ml/model/{id}/ MlApi ml_model_inference POST /api/ml/model/{id}/infer/ MlApi ml_model_list GET /api/ml/model/ MlApi ml_model_partial_update PATCH /api/ml/model/{id}/ MlApi ml_model_retrieve GET /api/ml/model/{id}/ MlApi ml_model_type_create POST /api/ml/model-type/ MlApi ml_model_type_destroy DELETE /api/ml/model-type/{id}/ MlApi ml_model_type_list GET /api/ml/model-type/ MlApi ml_model_type_partial_update PATCH /api/ml/model-type/{id}/ MlApi ml_model_type_retrieve GET /api/ml/model-type/{id}/ MlApi ml_model_type_update PUT /api/ml/model-type/{id}/ MlApi ml_model_update PUT /api/ml/model/{id}/ ProductApi product_create POST /api/product/ ProductApi product_destroy DELETE /api/product/{id}/ ProductApi product_list GET /api/product/ ProductApi product_partial_update PATCH /api/product/{id}/ ProductApi product_retrieve GET /api/product/{id}/ ProductApi product_update PUT /api/product/{id}/ ProductCategoryApi product_category_create POST /api/product-category/ ProductCategoryApi product_category_destroy DELETE /api/product-category/{id}/ ProductCategoryApi product_category_list GET /api/product-category/ ProductCategoryApi product_category_partial_update PATCH /api/product-category/{id}/ ProductCategoryApi product_category_retrieve GET /api/product-category/{id}/ ProductCategoryApi product_category_update PUT /api/product-category/{id}/ QualityCriteriaApi quality_criteria_create POST /api/quality-criteria/ QualityCriteriaApi quality_criteria_destroy DELETE /api/quality-criteria/{id}/ QualityCriteriaApi quality_criteria_list GET /api/quality-criteria/ QualityCriteriaApi quality_criteria_partial_update PATCH /api/quality-criteria/{id}/ QualityCriteriaApi quality_criteria_retrieve GET /api/quality-criteria/{id}/ QualityCriteriaApi quality_criteria_update PUT /api/quality-criteria/{id}/ ResultApi result_create POST /api/result/ ResultApi result_destroy DELETE /api/result/{id}/ ResultApi result_list GET /api/result/ ResultApi result_partial_update PATCH /api/result/{id}/ ResultApi result_retrieve GET /api/result/{id}/ ResultApi result_update PUT /api/result/{id}/ StatisticsApi statistics_configuration_create POST /api/statistics/configuration/ StatisticsApi statistics_configuration_destroy DELETE /api/statistics/configuration/{id}/ StatisticsApi statistics_configuration_list GET /api/statistics/configuration/ StatisticsApi statistics_configuration_retrieve GET /api/statistics/configuration/{id}/ StatisticsApi statistics_configuration_update PUT /api/statistics/configuration/{id}/ StatisticsApi statistics_inspection_create POST /api/statistics/inspection/ StatisticsApi statistics_inspection_destroy DELETE /api/statistics/inspection/{id}/ StatisticsApi statistics_inspection_list GET /api/statistics/inspection/ StatisticsApi statistics_inspection_retrieve GET /api/statistics/inspection/{id}/ StatisticsApi statistics_inspection_update PUT /api/statistics/inspection/{id}/ StatisticsApi statistics_team_create POST /api/statistics/team/ StatisticsApi statistics_team_destroy DELETE /api/statistics/team/{id}/ StatisticsApi statistics_team_list GET /api/statistics/team/ StatisticsApi statistics_team_retrieve GET /api/statistics/team/{id}/ StatisticsApi statistics_team_update PUT /api/statistics/team/{id}/ TeamsApi teams_create POST /api/teams/ TeamsApi teams_destroy DELETE /api/teams/{id}/ TeamsApi teams_list GET /api/teams/ TeamsApi teams_retrieve GET /api/teams/{id}/ TeamsApi teams_update PUT /api/teams/{id}/ UserApi user_email_list GET /api/user/email/ UserApi user_whoami_retrieve GET /api/user/whoami/"},{"location":"api/clients/python/avis_client/#documentation-for-models","title":"Documentation For Models","text":"<ul> <li>AzureMLInferenceRequest</li> <li>BlankEnum</li> <li>ConfigurationStatistics</li> <li>ConfigurationStatisticsRequest</li> <li>ConfigurationType</li> <li>ConfigurationTypeRequest</li> <li>CustomUser</li> <li>CustomUserRequest</li> <li>EmailAddress</li> <li>FormatEnum</li> <li>Image</li> <li>ImageAttribute</li> <li>ImageAttributeCategory</li> <li>ImageAttributeCategoryRequest</li> <li>ImageAttributeRequest</li> <li>ImageRequest</li> <li>Inspection</li> <li>InspectionImagesStatistics</li> <li>InspectionImagesStatisticsRequest</li> <li>InspectionRequest</li> <li>InspectionStatistics</li> <li>InspectionStatisticsRequest</li> <li>InspectionValidationStatus</li> <li>MLModel</li> <li>MLModelRequest</li> <li>MLModelType</li> <li>MLModelTypeRequest</li> <li>Membership</li> <li>MembershipRequest</li> <li>Metadata</li> <li>MetadataRequest</li> <li>MetadataSchema</li> <li>MetadataSchemaRequest</li> <li>PaginatedConfigurationStatisticsList</li> <li>PaginatedConfigurationTypeList</li> <li>PaginatedImageAttributeCategoryList</li> <li>PaginatedImageAttributeList</li> <li>PaginatedImageList</li> <li>PaginatedInspectionImagesStatisticsList</li> <li>PaginatedInspectionList</li> <li>PaginatedInspectionStatisticsList</li> <li>PaginatedInspectionValidationStatusList</li> <li>PaginatedMLModelList</li> <li>PaginatedMLModelTypeList</li> <li>PaginatedMembershipList</li> <li>PaginatedMetadataList</li> <li>PaginatedMetadataSchemaList</li> <li>PaginatedProductCategoryList</li> <li>PaginatedProductList</li> <li>PaginatedQualityCriteriaList</li> <li>PaginatedQualityCriteriaResultList</li> <li>PaginatedResultList</li> <li>PaginatedTeamList</li> <li>PatchedConfigurationTypeRequest</li> <li>PatchedImageAttributeCategoryRequest</li> <li>PatchedImageAttributeRequest</li> <li>PatchedImageRequest</li> <li>PatchedInspectionRequest</li> <li>PatchedMLModelRequest</li> <li>PatchedMLModelTypeRequest</li> <li>PatchedMetadataRequest</li> <li>PatchedMetadataSchemaRequest</li> <li>PatchedProductCategoryRequest</li> <li>PatchedProductRequest</li> <li>PatchedQualityCriteriaRequest</li> <li>PatchedResultRequest</li> <li>PatchedResultRequestStatus</li> <li>Product</li> <li>ProductCategory</li> <li>ProductCategoryRequest</li> <li>ProductRequest</li> <li>QualityCriteria</li> <li>QualityCriteriaRequest</li> <li>QualityCriteriaResult</li> <li>QualityEnum</li> <li>Result</li> <li>ResultRequest</li> <li>StatusEnum</li> <li>Team</li> <li>TeamRequest</li> <li>UserAPIKeyCreate</li> <li>UserAPIKeyCreateRequest</li> <li>ValidationStatusEnum</li> </ul>"},{"location":"api/clients/python/avis_client/#documentation-for-authorization","title":"Documentation For Authorization","text":"<p>Authentication schemes defined for the API: </p>"},{"location":"api/clients/python/avis_client/#apikeyauth","title":"ApiKeyAuth","text":"<ul> <li>Type: API key</li> <li>API key parameter name: X-Api-Key</li> <li>Location: HTTP header</li> </ul>"},{"location":"api/clients/python/avis_client/#cookieauth","title":"cookieAuth","text":"<ul> <li>Type: API key</li> <li>API key parameter name: sessionid</li> <li>Location: </li> </ul>"},{"location":"api/clients/python/avis_client/#author","title":"Author","text":""},{"location":"api/clients/python/avis_client/ApiKeysApi/","title":"avis_client.ApiKeysApi","text":"<p>All URIs are relative to http://localhost:8000</p> Method HTTP request Description keys_create POST /api/keys/ keys_revoke_create POST /api/keys/revoke/"},{"location":"api/clients/python/avis_client/ApiKeysApi/#keys_create","title":"keys_create","text":"<p>UserAPIKeyCreate keys_create(user_api_key_create_request=user_api_key_create_request)</p> <p>Create a new API key for the current user.</p>"},{"location":"api/clients/python/avis_client/ApiKeysApi/#example","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.user_api_key_create import UserAPIKeyCreate\nfrom avis_client.models.user_api_key_create_request import UserAPIKeyCreateRequest\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.ApiKeysApi(api_client)\n    user_api_key_create_request = avis_client.UserAPIKeyCreateRequest() # UserAPIKeyCreateRequest |  (optional)\n\n    try:\n        api_response = api_instance.keys_create(user_api_key_create_request=user_api_key_create_request)\n        print(\"The response of ApiKeysApi-&gt;keys_create:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ApiKeysApi-&gt;keys_create: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/ApiKeysApi/#parameters","title":"Parameters","text":"Name Type Description Notes user_api_key_create_request UserAPIKeyCreateRequest [optional]"},{"location":"api/clients/python/avis_client/ApiKeysApi/#return-type","title":"Return type","text":"<p>UserAPIKeyCreate</p>"},{"location":"api/clients/python/avis_client/ApiKeysApi/#authorization","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/ApiKeysApi/#http-request-headers","title":"HTTP request headers","text":"<ul> <li>Content-Type: application/json, application/x-www-form-urlencoded, multipart/form-data</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/ApiKeysApi/#http-response-details","title":"HTTP response details","text":"Status code Description Response headers 201 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/ApiKeysApi/#keys_revoke_create","title":"keys_revoke_create","text":"<p>UserAPIKeyCreate keys_revoke_create(user_api_key_create_request=user_api_key_create_request)</p> <p>Revoke an API key for the current user. We use the name of the API Key to revoke it, not the ID or actual key to prevent information leakage.</p>"},{"location":"api/clients/python/avis_client/ApiKeysApi/#example_1","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.user_api_key_create import UserAPIKeyCreate\nfrom avis_client.models.user_api_key_create_request import UserAPIKeyCreateRequest\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.ApiKeysApi(api_client)\n    user_api_key_create_request = avis_client.UserAPIKeyCreateRequest() # UserAPIKeyCreateRequest |  (optional)\n\n    try:\n        api_response = api_instance.keys_revoke_create(user_api_key_create_request=user_api_key_create_request)\n        print(\"The response of ApiKeysApi-&gt;keys_revoke_create:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ApiKeysApi-&gt;keys_revoke_create: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/ApiKeysApi/#parameters_1","title":"Parameters","text":"Name Type Description Notes user_api_key_create_request UserAPIKeyCreateRequest [optional]"},{"location":"api/clients/python/avis_client/ApiKeysApi/#return-type_1","title":"Return type","text":"<p>UserAPIKeyCreate</p>"},{"location":"api/clients/python/avis_client/ApiKeysApi/#authorization_1","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/ApiKeysApi/#http-request-headers_1","title":"HTTP request headers","text":"<ul> <li>Content-Type: application/json, application/x-www-form-urlencoded, multipart/form-data</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/ApiKeysApi/#http-response-details_1","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/AzureMLInferenceRequest/","title":"AzureMLInferenceRequest","text":"<p>Serializer for Azure ML inference requests. This corresponds to the schema of the request body that Azure ML expects. See https://learn.microsoft.com/en-us/azure/machine-learning/how-to-deploy-mlflow-models?view=azureml-api-2&amp;tabs=azureml#input-structure</p>"},{"location":"api/clients/python/avis_client/AzureMLInferenceRequest/#properties","title":"Properties","text":"Name Type Description Notes input_data object params object [optional]"},{"location":"api/clients/python/avis_client/AzureMLInferenceRequest/#example","title":"Example","text":"<p><pre><code>from avis_client.models.azure_ml_inference_request import AzureMLInferenceRequest\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of AzureMLInferenceRequest from a JSON string\nazure_ml_inference_request_instance = AzureMLInferenceRequest.from_json(json)\n# print the JSON string representation of the object\nprint AzureMLInferenceRequest.to_json()\n\n# convert the object into a dict\nazure_ml_inference_request_dict = azure_ml_inference_request_instance.to_dict()\n# create an instance of AzureMLInferenceRequest from a dict\nazure_ml_inference_request_form_dict = azure_ml_inference_request.from_dict(azure_ml_inference_request_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/BlankEnum/","title":"BlankEnum","text":""},{"location":"api/clients/python/avis_client/BlankEnum/#properties","title":"Properties","text":"Name Type Description Notes <p>[Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/ConfigurationApi/","title":"avis_client.ConfigurationApi","text":"<p>All URIs are relative to http://localhost:8000</p> Method HTTP request Description configuration_create POST /api/configuration/ configuration_destroy DELETE /api/configuration/{id}/ configuration_list GET /api/configuration/ configuration_partial_update PATCH /api/configuration/{id}/ configuration_retrieve GET /api/configuration/{id}/ configuration_update PUT /api/configuration/{id}/"},{"location":"api/clients/python/avis_client/ConfigurationApi/#configuration_create","title":"configuration_create","text":"<p>ConfigurationType configuration_create(configuration_type_request)</p> <p>A base viewset that allows reading, creating and updating objects. The following functionalities are added by the mixins:  * CreateModelMixin: allows creating objects * UpdateModelMixin: allows updating objects * DestroyModelMixin: allows deleting objects * OptimizedReadOnlyTracedViewSet: allows reading objects and adds tracing and optimized queryset fetching (with the use of the <code>fields</code> query parameter)</p>"},{"location":"api/clients/python/avis_client/ConfigurationApi/#example","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.configuration_type import ConfigurationType\nfrom avis_client.models.configuration_type_request import ConfigurationTypeRequest\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.ConfigurationApi(api_client)\n    configuration_type_request = avis_client.ConfigurationTypeRequest() # ConfigurationTypeRequest | \n\n    try:\n        api_response = api_instance.configuration_create(configuration_type_request)\n        print(\"The response of ConfigurationApi-&gt;configuration_create:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ConfigurationApi-&gt;configuration_create: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/ConfigurationApi/#parameters","title":"Parameters","text":"Name Type Description Notes configuration_type_request ConfigurationTypeRequest"},{"location":"api/clients/python/avis_client/ConfigurationApi/#return-type","title":"Return type","text":"<p>ConfigurationType</p>"},{"location":"api/clients/python/avis_client/ConfigurationApi/#authorization","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/ConfigurationApi/#http-request-headers","title":"HTTP request headers","text":"<ul> <li>Content-Type: application/json, application/x-www-form-urlencoded, multipart/form-data</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/ConfigurationApi/#http-response-details","title":"HTTP response details","text":"Status code Description Response headers 201 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/ConfigurationApi/#configuration_destroy","title":"configuration_destroy","text":"<p>configuration_destroy(id)</p> <p>A base viewset that allows reading, creating and updating objects. The following functionalities are added by the mixins:  * CreateModelMixin: allows creating objects * UpdateModelMixin: allows updating objects * DestroyModelMixin: allows deleting objects * OptimizedReadOnlyTracedViewSet: allows reading objects and adds tracing and optimized queryset fetching (with the use of the <code>fields</code> query parameter)</p>"},{"location":"api/clients/python/avis_client/ConfigurationApi/#example_1","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.ConfigurationApi(api_client)\n    id = 56 # int | A unique integer value identifying this configuration.\n\n    try:\n        api_instance.configuration_destroy(id)\n    except Exception as e:\n        print(\"Exception when calling ConfigurationApi-&gt;configuration_destroy: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/ConfigurationApi/#parameters_1","title":"Parameters","text":"Name Type Description Notes id int A unique integer value identifying this configuration."},{"location":"api/clients/python/avis_client/ConfigurationApi/#return-type_1","title":"Return type","text":"<p>void (empty response body)</p>"},{"location":"api/clients/python/avis_client/ConfigurationApi/#authorization_1","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/ConfigurationApi/#http-request-headers_1","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: Not defined</li> </ul>"},{"location":"api/clients/python/avis_client/ConfigurationApi/#http-response-details_1","title":"HTTP response details","text":"Status code Description Response headers 204 No response body - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/ConfigurationApi/#configuration_list","title":"configuration_list","text":"<p>PaginatedConfigurationTypeList configuration_list(fields=fields, id=id, ordering=ordering, page=page, page_size=page_size)</p> <p>A base viewset that allows reading, creating and updating objects. The following functionalities are added by the mixins:  * CreateModelMixin: allows creating objects * UpdateModelMixin: allows updating objects * DestroyModelMixin: allows deleting objects * OptimizedReadOnlyTracedViewSet: allows reading objects and adds tracing and optimized queryset fetching (with the use of the <code>fields</code> query parameter)</p>"},{"location":"api/clients/python/avis_client/ConfigurationApi/#example_2","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.paginated_configuration_type_list import PaginatedConfigurationTypeList\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.ConfigurationApi(api_client)\n    fields = 'fields_example' # str |  (optional)\n    id = [56] # List[int] | Multiple values may be separated by commas. (optional)\n    ordering = 'ordering_example' # str | Which field to use when ordering the results. (optional)\n    page = 56 # int | A page number within the paginated result set. (optional)\n    page_size = 56 # int | Number of results to return per page. (optional)\n\n    try:\n        api_response = api_instance.configuration_list(fields=fields, id=id, ordering=ordering, page=page, page_size=page_size)\n        print(\"The response of ConfigurationApi-&gt;configuration_list:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ConfigurationApi-&gt;configuration_list: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/ConfigurationApi/#parameters_2","title":"Parameters","text":"Name Type Description Notes fields str [optional] id List[int] Multiple values may be separated by commas. [optional] ordering str Which field to use when ordering the results. [optional] page int A page number within the paginated result set. [optional] page_size int Number of results to return per page. [optional]"},{"location":"api/clients/python/avis_client/ConfigurationApi/#return-type_2","title":"Return type","text":"<p>PaginatedConfigurationTypeList</p>"},{"location":"api/clients/python/avis_client/ConfigurationApi/#authorization_2","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/ConfigurationApi/#http-request-headers_2","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/ConfigurationApi/#http-response-details_2","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/ConfigurationApi/#configuration_partial_update","title":"configuration_partial_update","text":"<p>ConfigurationType configuration_partial_update(id, patched_configuration_type_request=patched_configuration_type_request)</p> <p>A base viewset that allows reading, creating and updating objects. The following functionalities are added by the mixins:  * CreateModelMixin: allows creating objects * UpdateModelMixin: allows updating objects * DestroyModelMixin: allows deleting objects * OptimizedReadOnlyTracedViewSet: allows reading objects and adds tracing and optimized queryset fetching (with the use of the <code>fields</code> query parameter)</p>"},{"location":"api/clients/python/avis_client/ConfigurationApi/#example_3","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.configuration_type import ConfigurationType\nfrom avis_client.models.patched_configuration_type_request import PatchedConfigurationTypeRequest\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.ConfigurationApi(api_client)\n    id = 56 # int | A unique integer value identifying this configuration.\n    patched_configuration_type_request = avis_client.PatchedConfigurationTypeRequest() # PatchedConfigurationTypeRequest |  (optional)\n\n    try:\n        api_response = api_instance.configuration_partial_update(id, patched_configuration_type_request=patched_configuration_type_request)\n        print(\"The response of ConfigurationApi-&gt;configuration_partial_update:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ConfigurationApi-&gt;configuration_partial_update: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/ConfigurationApi/#parameters_3","title":"Parameters","text":"Name Type Description Notes id int A unique integer value identifying this configuration. patched_configuration_type_request PatchedConfigurationTypeRequest [optional]"},{"location":"api/clients/python/avis_client/ConfigurationApi/#return-type_3","title":"Return type","text":"<p>ConfigurationType</p>"},{"location":"api/clients/python/avis_client/ConfigurationApi/#authorization_3","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/ConfigurationApi/#http-request-headers_3","title":"HTTP request headers","text":"<ul> <li>Content-Type: application/json, application/x-www-form-urlencoded, multipart/form-data</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/ConfigurationApi/#http-response-details_3","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/ConfigurationApi/#configuration_retrieve","title":"configuration_retrieve","text":"<p>ConfigurationType configuration_retrieve(id, fields=fields)</p> <p>A base viewset that allows reading, creating and updating objects. The following functionalities are added by the mixins:  * CreateModelMixin: allows creating objects * UpdateModelMixin: allows updating objects * DestroyModelMixin: allows deleting objects * OptimizedReadOnlyTracedViewSet: allows reading objects and adds tracing and optimized queryset fetching (with the use of the <code>fields</code> query parameter)</p>"},{"location":"api/clients/python/avis_client/ConfigurationApi/#example_4","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.configuration_type import ConfigurationType\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.ConfigurationApi(api_client)\n    id = 56 # int | A unique integer value identifying this configuration.\n    fields = 'fields_example' # str |  (optional)\n\n    try:\n        api_response = api_instance.configuration_retrieve(id, fields=fields)\n        print(\"The response of ConfigurationApi-&gt;configuration_retrieve:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ConfigurationApi-&gt;configuration_retrieve: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/ConfigurationApi/#parameters_4","title":"Parameters","text":"Name Type Description Notes id int A unique integer value identifying this configuration. fields str [optional]"},{"location":"api/clients/python/avis_client/ConfigurationApi/#return-type_4","title":"Return type","text":"<p>ConfigurationType</p>"},{"location":"api/clients/python/avis_client/ConfigurationApi/#authorization_4","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/ConfigurationApi/#http-request-headers_4","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/ConfigurationApi/#http-response-details_4","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/ConfigurationApi/#configuration_update","title":"configuration_update","text":"<p>ConfigurationType configuration_update(id, configuration_type_request)</p> <p>A base viewset that allows reading, creating and updating objects. The following functionalities are added by the mixins:  * CreateModelMixin: allows creating objects * UpdateModelMixin: allows updating objects * DestroyModelMixin: allows deleting objects * OptimizedReadOnlyTracedViewSet: allows reading objects and adds tracing and optimized queryset fetching (with the use of the <code>fields</code> query parameter)</p>"},{"location":"api/clients/python/avis_client/ConfigurationApi/#example_5","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.configuration_type import ConfigurationType\nfrom avis_client.models.configuration_type_request import ConfigurationTypeRequest\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.ConfigurationApi(api_client)\n    id = 56 # int | A unique integer value identifying this configuration.\n    configuration_type_request = avis_client.ConfigurationTypeRequest() # ConfigurationTypeRequest | \n\n    try:\n        api_response = api_instance.configuration_update(id, configuration_type_request)\n        print(\"The response of ConfigurationApi-&gt;configuration_update:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ConfigurationApi-&gt;configuration_update: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/ConfigurationApi/#parameters_5","title":"Parameters","text":"Name Type Description Notes id int A unique integer value identifying this configuration. configuration_type_request ConfigurationTypeRequest"},{"location":"api/clients/python/avis_client/ConfigurationApi/#return-type_5","title":"Return type","text":"<p>ConfigurationType</p>"},{"location":"api/clients/python/avis_client/ConfigurationApi/#authorization_5","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/ConfigurationApi/#http-request-headers_5","title":"HTTP request headers","text":"<ul> <li>Content-Type: application/json, application/x-www-form-urlencoded, multipart/form-data</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/ConfigurationApi/#http-response-details_5","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/ConfigurationStatistics/","title":"ConfigurationStatistics","text":""},{"location":"api/clients/python/avis_client/ConfigurationStatistics/#properties","title":"Properties","text":"Name Type Description Notes configuration int opened_inspections int inspections_marked_for_validation int"},{"location":"api/clients/python/avis_client/ConfigurationStatistics/#example","title":"Example","text":"<p><pre><code>from avis_client.models.configuration_statistics import ConfigurationStatistics\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ConfigurationStatistics from a JSON string\nconfiguration_statistics_instance = ConfigurationStatistics.from_json(json)\n# print the JSON string representation of the object\nprint ConfigurationStatistics.to_json()\n\n# convert the object into a dict\nconfiguration_statistics_dict = configuration_statistics_instance.to_dict()\n# create an instance of ConfigurationStatistics from a dict\nconfiguration_statistics_form_dict = configuration_statistics.from_dict(configuration_statistics_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/ConfigurationStatisticsRequest/","title":"ConfigurationStatisticsRequest","text":""},{"location":"api/clients/python/avis_client/ConfigurationStatisticsRequest/#properties","title":"Properties","text":"Name Type Description Notes configuration int opened_inspections int inspections_marked_for_validation int"},{"location":"api/clients/python/avis_client/ConfigurationStatisticsRequest/#example","title":"Example","text":"<p><pre><code>from avis_client.models.configuration_statistics_request import ConfigurationStatisticsRequest\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ConfigurationStatisticsRequest from a JSON string\nconfiguration_statistics_request_instance = ConfigurationStatisticsRequest.from_json(json)\n# print the JSON string representation of the object\nprint ConfigurationStatisticsRequest.to_json()\n\n# convert the object into a dict\nconfiguration_statistics_request_dict = configuration_statistics_request_instance.to_dict()\n# create an instance of ConfigurationStatisticsRequest from a dict\nconfiguration_statistics_request_form_dict = configuration_statistics_request.from_dict(configuration_statistics_request_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/ConfigurationType/","title":"ConfigurationType","text":""},{"location":"api/clients/python/avis_client/ConfigurationType/#properties","title":"Properties","text":"Name Type Description Notes id int [readonly] team int name str metadata_schema int [optional] quality_criteria int [optional] product_category int [optional] image_attribute_categories List[int] [optional] created_at datetime [readonly] updated_at datetime [readonly] description str [optional] is_default bool [optional]"},{"location":"api/clients/python/avis_client/ConfigurationType/#example","title":"Example","text":"<p><pre><code>from avis_client.models.configuration_type import ConfigurationType\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ConfigurationType from a JSON string\nconfiguration_type_instance = ConfigurationType.from_json(json)\n# print the JSON string representation of the object\nprint ConfigurationType.to_json()\n\n# convert the object into a dict\nconfiguration_type_dict = configuration_type_instance.to_dict()\n# create an instance of ConfigurationType from a dict\nconfiguration_type_form_dict = configuration_type.from_dict(configuration_type_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/ConfigurationTypeRequest/","title":"ConfigurationTypeRequest","text":""},{"location":"api/clients/python/avis_client/ConfigurationTypeRequest/#properties","title":"Properties","text":"Name Type Description Notes team int name str metadata_schema int [optional] quality_criteria int [optional] product_category int [optional] image_attribute_categories List[int] [optional] description str [optional] is_default bool [optional]"},{"location":"api/clients/python/avis_client/ConfigurationTypeRequest/#example","title":"Example","text":"<p><pre><code>from avis_client.models.configuration_type_request import ConfigurationTypeRequest\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ConfigurationTypeRequest from a JSON string\nconfiguration_type_request_instance = ConfigurationTypeRequest.from_json(json)\n# print the JSON string representation of the object\nprint ConfigurationTypeRequest.to_json()\n\n# convert the object into a dict\nconfiguration_type_request_dict = configuration_type_request_instance.to_dict()\n# create an instance of ConfigurationTypeRequest from a dict\nconfiguration_type_request_form_dict = configuration_type_request.from_dict(configuration_type_request_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/CustomUser/","title":"CustomUser","text":""},{"location":"api/clients/python/avis_client/CustomUser/#properties","title":"Properties","text":"Name Type Description Notes id int [readonly] first_name str [optional] last_name str [optional] email str [optional]"},{"location":"api/clients/python/avis_client/CustomUser/#example","title":"Example","text":"<p><pre><code>from avis_client.models.custom_user import CustomUser\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of CustomUser from a JSON string\ncustom_user_instance = CustomUser.from_json(json)\n# print the JSON string representation of the object\nprint CustomUser.to_json()\n\n# convert the object into a dict\ncustom_user_dict = custom_user_instance.to_dict()\n# create an instance of CustomUser from a dict\ncustom_user_form_dict = custom_user.from_dict(custom_user_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/CustomUserRequest/","title":"CustomUserRequest","text":""},{"location":"api/clients/python/avis_client/CustomUserRequest/#properties","title":"Properties","text":"Name Type Description Notes first_name str [optional] last_name str [optional] email str [optional]"},{"location":"api/clients/python/avis_client/CustomUserRequest/#example","title":"Example","text":"<p><pre><code>from avis_client.models.custom_user_request import CustomUserRequest\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of CustomUserRequest from a JSON string\ncustom_user_request_instance = CustomUserRequest.from_json(json)\n# print the JSON string representation of the object\nprint CustomUserRequest.to_json()\n\n# convert the object into a dict\ncustom_user_request_dict = custom_user_request_instance.to_dict()\n# create an instance of CustomUserRequest from a dict\ncustom_user_request_form_dict = custom_user_request.from_dict(custom_user_request_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/EmailAddress/","title":"EmailAddress","text":""},{"location":"api/clients/python/avis_client/EmailAddress/#properties","title":"Properties","text":"Name Type Description Notes id int [readonly] email str verified bool [optional] primary bool [optional] user int"},{"location":"api/clients/python/avis_client/EmailAddress/#example","title":"Example","text":"<p><pre><code>from avis_client.models.email_address import EmailAddress\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of EmailAddress from a JSON string\nemail_address_instance = EmailAddress.from_json(json)\n# print the JSON string representation of the object\nprint EmailAddress.to_json()\n\n# convert the object into a dict\nemail_address_dict = email_address_instance.to_dict()\n# create an instance of EmailAddress from a dict\nemail_address_form_dict = email_address.from_dict(email_address_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/FormatEnum/","title":"FormatEnum","text":"<ul> <li><code>image/png</code> - png * <code>image/tiff</code> - tiff * <code>image/jpeg</code> - jpeg * <code>image/bmp</code> - bmp</li> </ul>"},{"location":"api/clients/python/avis_client/FormatEnum/#properties","title":"Properties","text":"Name Type Description Notes <p>[Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/Image/","title":"Image","text":""},{"location":"api/clients/python/avis_client/Image/#properties","title":"Properties","text":"Name Type Description Notes id int [readonly] team int inspection int [optional] uploaded_by int [optional] results List[int] [optional] created_at datetime [readonly] updated_at datetime [readonly] format FormatEnum [optional] capture_datetime datetime file str part_id str [optional] validation_status ValidationStatusEnum [optional]"},{"location":"api/clients/python/avis_client/Image/#example","title":"Example","text":"<p><pre><code>from avis_client.models.image import Image\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of Image from a JSON string\nimage_instance = Image.from_json(json)\n# print the JSON string representation of the object\nprint Image.to_json()\n\n# convert the object into a dict\nimage_dict = image_instance.to_dict()\n# create an instance of Image from a dict\nimage_form_dict = image.from_dict(image_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/ImageApi/","title":"avis_client.ImageApi","text":"<p>All URIs are relative to http://localhost:8000</p> Method HTTP request Description image_create POST /api/image/ image_destroy DELETE /api/image/{id}/ image_list GET /api/image/ image_partial_update PATCH /api/image/{id}/ image_quality_list GET /api/image/quality/ image_retrieve GET /api/image/{id}/ image_update PUT /api/image/{id}/"},{"location":"api/clients/python/avis_client/ImageApi/#image_create","title":"image_create","text":"<p>Image image_create(team, capture_datetime, file, inspection=inspection, uploaded_by=uploaded_by, results=results, format=format, part_id=part_id, validation_status=validation_status)</p> <p>A base viewset that allows reading, creating and updating objects. The following functionalities are added by the mixins:  * CreateModelMixin: allows creating objects * UpdateModelMixin: allows updating objects * DestroyModelMixin: allows deleting objects * OptimizedReadOnlyTracedViewSet: allows reading objects and adds tracing and optimized queryset fetching (with the use of the <code>fields</code> query parameter)</p>"},{"location":"api/clients/python/avis_client/ImageApi/#example","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.format_enum import FormatEnum\nfrom avis_client.models.image import Image\nfrom avis_client.models.validation_status_enum import ValidationStatusEnum\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.ImageApi(api_client)\n    team = 56 # int | \n    capture_datetime = '2013-10-20T19:20:30+01:00' # datetime | \n    file = None # bytearray | \n    inspection = 56 # int |  (optional)\n    uploaded_by = 56 # int |  (optional)\n    results = [56] # List[int] |  (optional)\n    format = avis_client.FormatEnum() # FormatEnum |  (optional)\n    part_id = 'part_id_example' # str |  (optional)\n    validation_status = avis_client.ValidationStatusEnum() # ValidationStatusEnum |  (optional)\n\n    try:\n        api_response = api_instance.image_create(team, capture_datetime, file, inspection=inspection, uploaded_by=uploaded_by, results=results, format=format, part_id=part_id, validation_status=validation_status)\n        print(\"The response of ImageApi-&gt;image_create:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ImageApi-&gt;image_create: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/ImageApi/#parameters","title":"Parameters","text":"Name Type Description Notes team int capture_datetime datetime file bytearray inspection int [optional] uploaded_by int [optional] results List[int] [optional] format FormatEnum [optional] part_id str [optional] validation_status ValidationStatusEnum [optional]"},{"location":"api/clients/python/avis_client/ImageApi/#return-type","title":"Return type","text":"<p>Image</p>"},{"location":"api/clients/python/avis_client/ImageApi/#authorization","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/ImageApi/#http-request-headers","title":"HTTP request headers","text":"<ul> <li>Content-Type: multipart/form-data</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/ImageApi/#http-response-details","title":"HTTP response details","text":"Status code Description Response headers 201 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/ImageApi/#image_destroy","title":"image_destroy","text":"<p>image_destroy(id)</p> <p>A base viewset that allows reading, creating and updating objects. The following functionalities are added by the mixins:  * CreateModelMixin: allows creating objects * UpdateModelMixin: allows updating objects * DestroyModelMixin: allows deleting objects * OptimizedReadOnlyTracedViewSet: allows reading objects and adds tracing and optimized queryset fetching (with the use of the <code>fields</code> query parameter)</p>"},{"location":"api/clients/python/avis_client/ImageApi/#example_1","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.ImageApi(api_client)\n    id = 56 # int | A unique integer value identifying this image.\n\n    try:\n        api_instance.image_destroy(id)\n    except Exception as e:\n        print(\"Exception when calling ImageApi-&gt;image_destroy: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/ImageApi/#parameters_1","title":"Parameters","text":"Name Type Description Notes id int A unique integer value identifying this image."},{"location":"api/clients/python/avis_client/ImageApi/#return-type_1","title":"Return type","text":"<p>void (empty response body)</p>"},{"location":"api/clients/python/avis_client/ImageApi/#authorization_1","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/ImageApi/#http-request-headers_1","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: Not defined</li> </ul>"},{"location":"api/clients/python/avis_client/ImageApi/#http-response-details_1","title":"HTTP response details","text":"Status code Description Response headers 204 No response body - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/ImageApi/#image_list","title":"image_list","text":"<p>PaginatedImageList image_list(fields=fields, id=id, ordering=ordering, page=page, page_size=page_size)</p> <p>A base viewset that allows reading, creating and updating objects. The following functionalities are added by the mixins:  * CreateModelMixin: allows creating objects * UpdateModelMixin: allows updating objects * DestroyModelMixin: allows deleting objects * OptimizedReadOnlyTracedViewSet: allows reading objects and adds tracing and optimized queryset fetching (with the use of the <code>fields</code> query parameter)</p>"},{"location":"api/clients/python/avis_client/ImageApi/#example_2","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.paginated_image_list import PaginatedImageList\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.ImageApi(api_client)\n    fields = 'fields_example' # str |  (optional)\n    id = [56] # List[int] | Multiple values may be separated by commas. (optional)\n    ordering = 'ordering_example' # str | Which field to use when ordering the results. (optional)\n    page = 56 # int | A page number within the paginated result set. (optional)\n    page_size = 56 # int | Number of results to return per page. (optional)\n\n    try:\n        api_response = api_instance.image_list(fields=fields, id=id, ordering=ordering, page=page, page_size=page_size)\n        print(\"The response of ImageApi-&gt;image_list:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ImageApi-&gt;image_list: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/ImageApi/#parameters_2","title":"Parameters","text":"Name Type Description Notes fields str [optional] id List[int] Multiple values may be separated by commas. [optional] ordering str Which field to use when ordering the results. [optional] page int A page number within the paginated result set. [optional] page_size int Number of results to return per page. [optional]"},{"location":"api/clients/python/avis_client/ImageApi/#return-type_2","title":"Return type","text":"<p>PaginatedImageList</p>"},{"location":"api/clients/python/avis_client/ImageApi/#authorization_2","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/ImageApi/#http-request-headers_2","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/ImageApi/#http-response-details_2","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/ImageApi/#image_partial_update","title":"image_partial_update","text":"<p>Image image_partial_update(id, patched_image_request=patched_image_request)</p> <p>A base viewset that allows reading, creating and updating objects. The following functionalities are added by the mixins:  * CreateModelMixin: allows creating objects * UpdateModelMixin: allows updating objects * DestroyModelMixin: allows deleting objects * OptimizedReadOnlyTracedViewSet: allows reading objects and adds tracing and optimized queryset fetching (with the use of the <code>fields</code> query parameter)</p>"},{"location":"api/clients/python/avis_client/ImageApi/#example_3","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.image import Image\nfrom avis_client.models.patched_image_request import PatchedImageRequest\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.ImageApi(api_client)\n    id = 56 # int | A unique integer value identifying this image.\n    patched_image_request = avis_client.PatchedImageRequest() # PatchedImageRequest |  (optional)\n\n    try:\n        api_response = api_instance.image_partial_update(id, patched_image_request=patched_image_request)\n        print(\"The response of ImageApi-&gt;image_partial_update:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ImageApi-&gt;image_partial_update: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/ImageApi/#parameters_3","title":"Parameters","text":"Name Type Description Notes id int A unique integer value identifying this image. patched_image_request PatchedImageRequest [optional]"},{"location":"api/clients/python/avis_client/ImageApi/#return-type_3","title":"Return type","text":"<p>Image</p>"},{"location":"api/clients/python/avis_client/ImageApi/#authorization_3","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/ImageApi/#http-request-headers_3","title":"HTTP request headers","text":"<ul> <li>Content-Type: application/json, application/x-www-form-urlencoded, multipart/form-data</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/ImageApi/#http-response-details_3","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/ImageApi/#image_quality_list","title":"image_quality_list","text":"<p>PaginatedQualityCriteriaResultList image_quality_list(id=id, ordering=ordering, page=page, page_size=page_size)</p> <p>A base viewset that allows reading, creating and updating objects. The following functionalities are added by the mixins:  * CreateModelMixin: allows creating objects * UpdateModelMixin: allows updating objects * DestroyModelMixin: allows deleting objects * OptimizedReadOnlyTracedViewSet: allows reading objects and adds tracing and optimized queryset fetching (with the use of the <code>fields</code> query parameter)</p>"},{"location":"api/clients/python/avis_client/ImageApi/#example_4","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.paginated_quality_criteria_result_list import PaginatedQualityCriteriaResultList\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.ImageApi(api_client)\n    id = [56] # List[int] | Multiple values may be separated by commas. (optional)\n    ordering = 'ordering_example' # str | Which field to use when ordering the results. (optional)\n    page = 56 # int | A page number within the paginated result set. (optional)\n    page_size = 56 # int | Number of results to return per page. (optional)\n\n    try:\n        api_response = api_instance.image_quality_list(id=id, ordering=ordering, page=page, page_size=page_size)\n        print(\"The response of ImageApi-&gt;image_quality_list:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ImageApi-&gt;image_quality_list: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/ImageApi/#parameters_4","title":"Parameters","text":"Name Type Description Notes id List[int] Multiple values may be separated by commas. [optional] ordering str Which field to use when ordering the results. [optional] page int A page number within the paginated result set. [optional] page_size int Number of results to return per page. [optional]"},{"location":"api/clients/python/avis_client/ImageApi/#return-type_4","title":"Return type","text":"<p>PaginatedQualityCriteriaResultList</p>"},{"location":"api/clients/python/avis_client/ImageApi/#authorization_4","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/ImageApi/#http-request-headers_4","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/ImageApi/#http-response-details_4","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/ImageApi/#image_retrieve","title":"image_retrieve","text":"<p>Image image_retrieve(id, fields=fields)</p> <p>A base viewset that allows reading, creating and updating objects. The following functionalities are added by the mixins:  * CreateModelMixin: allows creating objects * UpdateModelMixin: allows updating objects * DestroyModelMixin: allows deleting objects * OptimizedReadOnlyTracedViewSet: allows reading objects and adds tracing and optimized queryset fetching (with the use of the <code>fields</code> query parameter)</p>"},{"location":"api/clients/python/avis_client/ImageApi/#example_5","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.image import Image\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.ImageApi(api_client)\n    id = 56 # int | A unique integer value identifying this image.\n    fields = 'fields_example' # str |  (optional)\n\n    try:\n        api_response = api_instance.image_retrieve(id, fields=fields)\n        print(\"The response of ImageApi-&gt;image_retrieve:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ImageApi-&gt;image_retrieve: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/ImageApi/#parameters_5","title":"Parameters","text":"Name Type Description Notes id int A unique integer value identifying this image. fields str [optional]"},{"location":"api/clients/python/avis_client/ImageApi/#return-type_5","title":"Return type","text":"<p>Image</p>"},{"location":"api/clients/python/avis_client/ImageApi/#authorization_5","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/ImageApi/#http-request-headers_5","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/ImageApi/#http-response-details_5","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/ImageApi/#image_update","title":"image_update","text":"<p>Image image_update(id, image_request)</p> <p>A base viewset that allows reading, creating and updating objects. The following functionalities are added by the mixins:  * CreateModelMixin: allows creating objects * UpdateModelMixin: allows updating objects * DestroyModelMixin: allows deleting objects * OptimizedReadOnlyTracedViewSet: allows reading objects and adds tracing and optimized queryset fetching (with the use of the <code>fields</code> query parameter)</p>"},{"location":"api/clients/python/avis_client/ImageApi/#example_6","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.image import Image\nfrom avis_client.models.image_request import ImageRequest\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.ImageApi(api_client)\n    id = 56 # int | A unique integer value identifying this image.\n    image_request = avis_client.ImageRequest() # ImageRequest | \n\n    try:\n        api_response = api_instance.image_update(id, image_request)\n        print(\"The response of ImageApi-&gt;image_update:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ImageApi-&gt;image_update: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/ImageApi/#parameters_6","title":"Parameters","text":"Name Type Description Notes id int A unique integer value identifying this image. image_request ImageRequest"},{"location":"api/clients/python/avis_client/ImageApi/#return-type_6","title":"Return type","text":"<p>Image</p>"},{"location":"api/clients/python/avis_client/ImageApi/#authorization_6","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/ImageApi/#http-request-headers_6","title":"HTTP request headers","text":"<ul> <li>Content-Type: application/json, application/x-www-form-urlencoded, multipart/form-data</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/ImageApi/#http-response-details_6","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/ImageAttribute/","title":"ImageAttribute","text":""},{"location":"api/clients/python/avis_client/ImageAttribute/#properties","title":"Properties","text":"Name Type Description Notes id int [readonly] team int category int results List[int] [optional] created_at datetime [readonly] updated_at datetime [readonly] value str [optional]"},{"location":"api/clients/python/avis_client/ImageAttribute/#example","title":"Example","text":"<p><pre><code>from avis_client.models.image_attribute import ImageAttribute\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ImageAttribute from a JSON string\nimage_attribute_instance = ImageAttribute.from_json(json)\n# print the JSON string representation of the object\nprint ImageAttribute.to_json()\n\n# convert the object into a dict\nimage_attribute_dict = image_attribute_instance.to_dict()\n# create an instance of ImageAttribute from a dict\nimage_attribute_form_dict = image_attribute.from_dict(image_attribute_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/ImageAttributeApi/","title":"avis_client.ImageAttributeApi","text":"<p>All URIs are relative to http://localhost:8000</p> Method HTTP request Description image_attribute_create POST /api/image-attribute/ image_attribute_destroy DELETE /api/image-attribute/{id}/ image_attribute_list GET /api/image-attribute/ image_attribute_partial_update PATCH /api/image-attribute/{id}/ image_attribute_retrieve GET /api/image-attribute/{id}/ image_attribute_update PUT /api/image-attribute/{id}/"},{"location":"api/clients/python/avis_client/ImageAttributeApi/#image_attribute_create","title":"image_attribute_create","text":"<p>ImageAttribute image_attribute_create(image_attribute_request)</p> <p>A base viewset that allows reading, creating and updating objects. The following functionalities are added by the mixins:  * CreateModelMixin: allows creating objects * UpdateModelMixin: allows updating objects * DestroyModelMixin: allows deleting objects * OptimizedReadOnlyTracedViewSet: allows reading objects and adds tracing and optimized queryset fetching (with the use of the <code>fields</code> query parameter)</p>"},{"location":"api/clients/python/avis_client/ImageAttributeApi/#example","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.image_attribute import ImageAttribute\nfrom avis_client.models.image_attribute_request import ImageAttributeRequest\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.ImageAttributeApi(api_client)\n    image_attribute_request = avis_client.ImageAttributeRequest() # ImageAttributeRequest | \n\n    try:\n        api_response = api_instance.image_attribute_create(image_attribute_request)\n        print(\"The response of ImageAttributeApi-&gt;image_attribute_create:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ImageAttributeApi-&gt;image_attribute_create: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/ImageAttributeApi/#parameters","title":"Parameters","text":"Name Type Description Notes image_attribute_request ImageAttributeRequest"},{"location":"api/clients/python/avis_client/ImageAttributeApi/#return-type","title":"Return type","text":"<p>ImageAttribute</p>"},{"location":"api/clients/python/avis_client/ImageAttributeApi/#authorization","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/ImageAttributeApi/#http-request-headers","title":"HTTP request headers","text":"<ul> <li>Content-Type: application/json, application/x-www-form-urlencoded, multipart/form-data</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/ImageAttributeApi/#http-response-details","title":"HTTP response details","text":"Status code Description Response headers 201 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/ImageAttributeApi/#image_attribute_destroy","title":"image_attribute_destroy","text":"<p>image_attribute_destroy(id)</p> <p>A base viewset that allows reading, creating and updating objects. The following functionalities are added by the mixins:  * CreateModelMixin: allows creating objects * UpdateModelMixin: allows updating objects * DestroyModelMixin: allows deleting objects * OptimizedReadOnlyTracedViewSet: allows reading objects and adds tracing and optimized queryset fetching (with the use of the <code>fields</code> query parameter)</p>"},{"location":"api/clients/python/avis_client/ImageAttributeApi/#example_1","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.ImageAttributeApi(api_client)\n    id = 56 # int | A unique integer value identifying this image attribute.\n\n    try:\n        api_instance.image_attribute_destroy(id)\n    except Exception as e:\n        print(\"Exception when calling ImageAttributeApi-&gt;image_attribute_destroy: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/ImageAttributeApi/#parameters_1","title":"Parameters","text":"Name Type Description Notes id int A unique integer value identifying this image attribute."},{"location":"api/clients/python/avis_client/ImageAttributeApi/#return-type_1","title":"Return type","text":"<p>void (empty response body)</p>"},{"location":"api/clients/python/avis_client/ImageAttributeApi/#authorization_1","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/ImageAttributeApi/#http-request-headers_1","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: Not defined</li> </ul>"},{"location":"api/clients/python/avis_client/ImageAttributeApi/#http-response-details_1","title":"HTTP response details","text":"Status code Description Response headers 204 No response body - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/ImageAttributeApi/#image_attribute_list","title":"image_attribute_list","text":"<p>PaginatedImageAttributeList image_attribute_list(fields=fields, id=id, ordering=ordering, page=page, page_size=page_size)</p> <p>A base viewset that allows reading, creating and updating objects. The following functionalities are added by the mixins:  * CreateModelMixin: allows creating objects * UpdateModelMixin: allows updating objects * DestroyModelMixin: allows deleting objects * OptimizedReadOnlyTracedViewSet: allows reading objects and adds tracing and optimized queryset fetching (with the use of the <code>fields</code> query parameter)</p>"},{"location":"api/clients/python/avis_client/ImageAttributeApi/#example_2","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.paginated_image_attribute_list import PaginatedImageAttributeList\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.ImageAttributeApi(api_client)\n    fields = 'fields_example' # str |  (optional)\n    id = [56] # List[int] | Multiple values may be separated by commas. (optional)\n    ordering = 'ordering_example' # str | Which field to use when ordering the results. (optional)\n    page = 56 # int | A page number within the paginated result set. (optional)\n    page_size = 56 # int | Number of results to return per page. (optional)\n\n    try:\n        api_response = api_instance.image_attribute_list(fields=fields, id=id, ordering=ordering, page=page, page_size=page_size)\n        print(\"The response of ImageAttributeApi-&gt;image_attribute_list:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ImageAttributeApi-&gt;image_attribute_list: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/ImageAttributeApi/#parameters_2","title":"Parameters","text":"Name Type Description Notes fields str [optional] id List[int] Multiple values may be separated by commas. [optional] ordering str Which field to use when ordering the results. [optional] page int A page number within the paginated result set. [optional] page_size int Number of results to return per page. [optional]"},{"location":"api/clients/python/avis_client/ImageAttributeApi/#return-type_2","title":"Return type","text":"<p>PaginatedImageAttributeList</p>"},{"location":"api/clients/python/avis_client/ImageAttributeApi/#authorization_2","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/ImageAttributeApi/#http-request-headers_2","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/ImageAttributeApi/#http-response-details_2","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/ImageAttributeApi/#image_attribute_partial_update","title":"image_attribute_partial_update","text":"<p>ImageAttribute image_attribute_partial_update(id, patched_image_attribute_request=patched_image_attribute_request)</p> <p>A base viewset that allows reading, creating and updating objects. The following functionalities are added by the mixins:  * CreateModelMixin: allows creating objects * UpdateModelMixin: allows updating objects * DestroyModelMixin: allows deleting objects * OptimizedReadOnlyTracedViewSet: allows reading objects and adds tracing and optimized queryset fetching (with the use of the <code>fields</code> query parameter)</p>"},{"location":"api/clients/python/avis_client/ImageAttributeApi/#example_3","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.image_attribute import ImageAttribute\nfrom avis_client.models.patched_image_attribute_request import PatchedImageAttributeRequest\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.ImageAttributeApi(api_client)\n    id = 56 # int | A unique integer value identifying this image attribute.\n    patched_image_attribute_request = avis_client.PatchedImageAttributeRequest() # PatchedImageAttributeRequest |  (optional)\n\n    try:\n        api_response = api_instance.image_attribute_partial_update(id, patched_image_attribute_request=patched_image_attribute_request)\n        print(\"The response of ImageAttributeApi-&gt;image_attribute_partial_update:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ImageAttributeApi-&gt;image_attribute_partial_update: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/ImageAttributeApi/#parameters_3","title":"Parameters","text":"Name Type Description Notes id int A unique integer value identifying this image attribute. patched_image_attribute_request PatchedImageAttributeRequest [optional]"},{"location":"api/clients/python/avis_client/ImageAttributeApi/#return-type_3","title":"Return type","text":"<p>ImageAttribute</p>"},{"location":"api/clients/python/avis_client/ImageAttributeApi/#authorization_3","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/ImageAttributeApi/#http-request-headers_3","title":"HTTP request headers","text":"<ul> <li>Content-Type: application/json, application/x-www-form-urlencoded, multipart/form-data</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/ImageAttributeApi/#http-response-details_3","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/ImageAttributeApi/#image_attribute_retrieve","title":"image_attribute_retrieve","text":"<p>ImageAttribute image_attribute_retrieve(id, fields=fields)</p> <p>A base viewset that allows reading, creating and updating objects. The following functionalities are added by the mixins:  * CreateModelMixin: allows creating objects * UpdateModelMixin: allows updating objects * DestroyModelMixin: allows deleting objects * OptimizedReadOnlyTracedViewSet: allows reading objects and adds tracing and optimized queryset fetching (with the use of the <code>fields</code> query parameter)</p>"},{"location":"api/clients/python/avis_client/ImageAttributeApi/#example_4","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.image_attribute import ImageAttribute\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.ImageAttributeApi(api_client)\n    id = 56 # int | A unique integer value identifying this image attribute.\n    fields = 'fields_example' # str |  (optional)\n\n    try:\n        api_response = api_instance.image_attribute_retrieve(id, fields=fields)\n        print(\"The response of ImageAttributeApi-&gt;image_attribute_retrieve:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ImageAttributeApi-&gt;image_attribute_retrieve: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/ImageAttributeApi/#parameters_4","title":"Parameters","text":"Name Type Description Notes id int A unique integer value identifying this image attribute. fields str [optional]"},{"location":"api/clients/python/avis_client/ImageAttributeApi/#return-type_4","title":"Return type","text":"<p>ImageAttribute</p>"},{"location":"api/clients/python/avis_client/ImageAttributeApi/#authorization_4","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/ImageAttributeApi/#http-request-headers_4","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/ImageAttributeApi/#http-response-details_4","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/ImageAttributeApi/#image_attribute_update","title":"image_attribute_update","text":"<p>ImageAttribute image_attribute_update(id, image_attribute_request)</p> <p>A base viewset that allows reading, creating and updating objects. The following functionalities are added by the mixins:  * CreateModelMixin: allows creating objects * UpdateModelMixin: allows updating objects * DestroyModelMixin: allows deleting objects * OptimizedReadOnlyTracedViewSet: allows reading objects and adds tracing and optimized queryset fetching (with the use of the <code>fields</code> query parameter)</p>"},{"location":"api/clients/python/avis_client/ImageAttributeApi/#example_5","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.image_attribute import ImageAttribute\nfrom avis_client.models.image_attribute_request import ImageAttributeRequest\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.ImageAttributeApi(api_client)\n    id = 56 # int | A unique integer value identifying this image attribute.\n    image_attribute_request = avis_client.ImageAttributeRequest() # ImageAttributeRequest | \n\n    try:\n        api_response = api_instance.image_attribute_update(id, image_attribute_request)\n        print(\"The response of ImageAttributeApi-&gt;image_attribute_update:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ImageAttributeApi-&gt;image_attribute_update: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/ImageAttributeApi/#parameters_5","title":"Parameters","text":"Name Type Description Notes id int A unique integer value identifying this image attribute. image_attribute_request ImageAttributeRequest"},{"location":"api/clients/python/avis_client/ImageAttributeApi/#return-type_5","title":"Return type","text":"<p>ImageAttribute</p>"},{"location":"api/clients/python/avis_client/ImageAttributeApi/#authorization_5","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/ImageAttributeApi/#http-request-headers_5","title":"HTTP request headers","text":"<ul> <li>Content-Type: application/json, application/x-www-form-urlencoded, multipart/form-data</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/ImageAttributeApi/#http-response-details_5","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/ImageAttributeCategory/","title":"ImageAttributeCategory","text":""},{"location":"api/clients/python/avis_client/ImageAttributeCategory/#properties","title":"Properties","text":"Name Type Description Notes id int [readonly] team int created_at datetime [readonly] updated_at datetime [readonly] name str [optional] description str [optional] ml_model int [optional]"},{"location":"api/clients/python/avis_client/ImageAttributeCategory/#example","title":"Example","text":"<p><pre><code>from avis_client.models.image_attribute_category import ImageAttributeCategory\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ImageAttributeCategory from a JSON string\nimage_attribute_category_instance = ImageAttributeCategory.from_json(json)\n# print the JSON string representation of the object\nprint ImageAttributeCategory.to_json()\n\n# convert the object into a dict\nimage_attribute_category_dict = image_attribute_category_instance.to_dict()\n# create an instance of ImageAttributeCategory from a dict\nimage_attribute_category_form_dict = image_attribute_category.from_dict(image_attribute_category_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/ImageAttributeCategoryApi/","title":"avis_client.ImageAttributeCategoryApi","text":"<p>All URIs are relative to http://localhost:8000</p> Method HTTP request Description image_attribute_category_create POST /api/image-attribute-category/ image_attribute_category_destroy DELETE /api/image-attribute-category/{id}/ image_attribute_category_list GET /api/image-attribute-category/ image_attribute_category_partial_update PATCH /api/image-attribute-category/{id}/ image_attribute_category_retrieve GET /api/image-attribute-category/{id}/ image_attribute_category_update PUT /api/image-attribute-category/{id}/"},{"location":"api/clients/python/avis_client/ImageAttributeCategoryApi/#image_attribute_category_create","title":"image_attribute_category_create","text":"<p>ImageAttributeCategory image_attribute_category_create(image_attribute_category_request)</p> <p>A base viewset that allows reading, creating and updating objects. The following functionalities are added by the mixins:  * CreateModelMixin: allows creating objects * UpdateModelMixin: allows updating objects * DestroyModelMixin: allows deleting objects * OptimizedReadOnlyTracedViewSet: allows reading objects and adds tracing and optimized queryset fetching (with the use of the <code>fields</code> query parameter)</p>"},{"location":"api/clients/python/avis_client/ImageAttributeCategoryApi/#example","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.image_attribute_category import ImageAttributeCategory\nfrom avis_client.models.image_attribute_category_request import ImageAttributeCategoryRequest\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.ImageAttributeCategoryApi(api_client)\n    image_attribute_category_request = avis_client.ImageAttributeCategoryRequest() # ImageAttributeCategoryRequest | \n\n    try:\n        api_response = api_instance.image_attribute_category_create(image_attribute_category_request)\n        print(\"The response of ImageAttributeCategoryApi-&gt;image_attribute_category_create:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ImageAttributeCategoryApi-&gt;image_attribute_category_create: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/ImageAttributeCategoryApi/#parameters","title":"Parameters","text":"Name Type Description Notes image_attribute_category_request ImageAttributeCategoryRequest"},{"location":"api/clients/python/avis_client/ImageAttributeCategoryApi/#return-type","title":"Return type","text":"<p>ImageAttributeCategory</p>"},{"location":"api/clients/python/avis_client/ImageAttributeCategoryApi/#authorization","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/ImageAttributeCategoryApi/#http-request-headers","title":"HTTP request headers","text":"<ul> <li>Content-Type: application/json, application/x-www-form-urlencoded, multipart/form-data</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/ImageAttributeCategoryApi/#http-response-details","title":"HTTP response details","text":"Status code Description Response headers 201 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/ImageAttributeCategoryApi/#image_attribute_category_destroy","title":"image_attribute_category_destroy","text":"<p>image_attribute_category_destroy(id)</p> <p>A base viewset that allows reading, creating and updating objects. The following functionalities are added by the mixins:  * CreateModelMixin: allows creating objects * UpdateModelMixin: allows updating objects * DestroyModelMixin: allows deleting objects * OptimizedReadOnlyTracedViewSet: allows reading objects and adds tracing and optimized queryset fetching (with the use of the <code>fields</code> query parameter)</p>"},{"location":"api/clients/python/avis_client/ImageAttributeCategoryApi/#example_1","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.ImageAttributeCategoryApi(api_client)\n    id = 56 # int | A unique integer value identifying this image attribute category.\n\n    try:\n        api_instance.image_attribute_category_destroy(id)\n    except Exception as e:\n        print(\"Exception when calling ImageAttributeCategoryApi-&gt;image_attribute_category_destroy: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/ImageAttributeCategoryApi/#parameters_1","title":"Parameters","text":"Name Type Description Notes id int A unique integer value identifying this image attribute category."},{"location":"api/clients/python/avis_client/ImageAttributeCategoryApi/#return-type_1","title":"Return type","text":"<p>void (empty response body)</p>"},{"location":"api/clients/python/avis_client/ImageAttributeCategoryApi/#authorization_1","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/ImageAttributeCategoryApi/#http-request-headers_1","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: Not defined</li> </ul>"},{"location":"api/clients/python/avis_client/ImageAttributeCategoryApi/#http-response-details_1","title":"HTTP response details","text":"Status code Description Response headers 204 No response body - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/ImageAttributeCategoryApi/#image_attribute_category_list","title":"image_attribute_category_list","text":"<p>PaginatedImageAttributeCategoryList image_attribute_category_list(fields=fields, id=id, ordering=ordering, page=page, page_size=page_size)</p> <p>A base viewset that allows reading, creating and updating objects. The following functionalities are added by the mixins:  * CreateModelMixin: allows creating objects * UpdateModelMixin: allows updating objects * DestroyModelMixin: allows deleting objects * OptimizedReadOnlyTracedViewSet: allows reading objects and adds tracing and optimized queryset fetching (with the use of the <code>fields</code> query parameter)</p>"},{"location":"api/clients/python/avis_client/ImageAttributeCategoryApi/#example_2","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.paginated_image_attribute_category_list import PaginatedImageAttributeCategoryList\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.ImageAttributeCategoryApi(api_client)\n    fields = 'fields_example' # str |  (optional)\n    id = [56] # List[int] | Multiple values may be separated by commas. (optional)\n    ordering = 'ordering_example' # str | Which field to use when ordering the results. (optional)\n    page = 56 # int | A page number within the paginated result set. (optional)\n    page_size = 56 # int | Number of results to return per page. (optional)\n\n    try:\n        api_response = api_instance.image_attribute_category_list(fields=fields, id=id, ordering=ordering, page=page, page_size=page_size)\n        print(\"The response of ImageAttributeCategoryApi-&gt;image_attribute_category_list:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ImageAttributeCategoryApi-&gt;image_attribute_category_list: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/ImageAttributeCategoryApi/#parameters_2","title":"Parameters","text":"Name Type Description Notes fields str [optional] id List[int] Multiple values may be separated by commas. [optional] ordering str Which field to use when ordering the results. [optional] page int A page number within the paginated result set. [optional] page_size int Number of results to return per page. [optional]"},{"location":"api/clients/python/avis_client/ImageAttributeCategoryApi/#return-type_2","title":"Return type","text":"<p>PaginatedImageAttributeCategoryList</p>"},{"location":"api/clients/python/avis_client/ImageAttributeCategoryApi/#authorization_2","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/ImageAttributeCategoryApi/#http-request-headers_2","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/ImageAttributeCategoryApi/#http-response-details_2","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/ImageAttributeCategoryApi/#image_attribute_category_partial_update","title":"image_attribute_category_partial_update","text":"<p>ImageAttributeCategory image_attribute_category_partial_update(id, patched_image_attribute_category_request=patched_image_attribute_category_request)</p> <p>A base viewset that allows reading, creating and updating objects. The following functionalities are added by the mixins:  * CreateModelMixin: allows creating objects * UpdateModelMixin: allows updating objects * DestroyModelMixin: allows deleting objects * OptimizedReadOnlyTracedViewSet: allows reading objects and adds tracing and optimized queryset fetching (with the use of the <code>fields</code> query parameter)</p>"},{"location":"api/clients/python/avis_client/ImageAttributeCategoryApi/#example_3","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.image_attribute_category import ImageAttributeCategory\nfrom avis_client.models.patched_image_attribute_category_request import PatchedImageAttributeCategoryRequest\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.ImageAttributeCategoryApi(api_client)\n    id = 56 # int | A unique integer value identifying this image attribute category.\n    patched_image_attribute_category_request = avis_client.PatchedImageAttributeCategoryRequest() # PatchedImageAttributeCategoryRequest |  (optional)\n\n    try:\n        api_response = api_instance.image_attribute_category_partial_update(id, patched_image_attribute_category_request=patched_image_attribute_category_request)\n        print(\"The response of ImageAttributeCategoryApi-&gt;image_attribute_category_partial_update:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ImageAttributeCategoryApi-&gt;image_attribute_category_partial_update: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/ImageAttributeCategoryApi/#parameters_3","title":"Parameters","text":"Name Type Description Notes id int A unique integer value identifying this image attribute category. patched_image_attribute_category_request PatchedImageAttributeCategoryRequest [optional]"},{"location":"api/clients/python/avis_client/ImageAttributeCategoryApi/#return-type_3","title":"Return type","text":"<p>ImageAttributeCategory</p>"},{"location":"api/clients/python/avis_client/ImageAttributeCategoryApi/#authorization_3","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/ImageAttributeCategoryApi/#http-request-headers_3","title":"HTTP request headers","text":"<ul> <li>Content-Type: application/json, application/x-www-form-urlencoded, multipart/form-data</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/ImageAttributeCategoryApi/#http-response-details_3","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/ImageAttributeCategoryApi/#image_attribute_category_retrieve","title":"image_attribute_category_retrieve","text":"<p>ImageAttributeCategory image_attribute_category_retrieve(id, fields=fields)</p> <p>A base viewset that allows reading, creating and updating objects. The following functionalities are added by the mixins:  * CreateModelMixin: allows creating objects * UpdateModelMixin: allows updating objects * DestroyModelMixin: allows deleting objects * OptimizedReadOnlyTracedViewSet: allows reading objects and adds tracing and optimized queryset fetching (with the use of the <code>fields</code> query parameter)</p>"},{"location":"api/clients/python/avis_client/ImageAttributeCategoryApi/#example_4","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.image_attribute_category import ImageAttributeCategory\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.ImageAttributeCategoryApi(api_client)\n    id = 56 # int | A unique integer value identifying this image attribute category.\n    fields = 'fields_example' # str |  (optional)\n\n    try:\n        api_response = api_instance.image_attribute_category_retrieve(id, fields=fields)\n        print(\"The response of ImageAttributeCategoryApi-&gt;image_attribute_category_retrieve:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ImageAttributeCategoryApi-&gt;image_attribute_category_retrieve: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/ImageAttributeCategoryApi/#parameters_4","title":"Parameters","text":"Name Type Description Notes id int A unique integer value identifying this image attribute category. fields str [optional]"},{"location":"api/clients/python/avis_client/ImageAttributeCategoryApi/#return-type_4","title":"Return type","text":"<p>ImageAttributeCategory</p>"},{"location":"api/clients/python/avis_client/ImageAttributeCategoryApi/#authorization_4","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/ImageAttributeCategoryApi/#http-request-headers_4","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/ImageAttributeCategoryApi/#http-response-details_4","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/ImageAttributeCategoryApi/#image_attribute_category_update","title":"image_attribute_category_update","text":"<p>ImageAttributeCategory image_attribute_category_update(id, image_attribute_category_request)</p> <p>A base viewset that allows reading, creating and updating objects. The following functionalities are added by the mixins:  * CreateModelMixin: allows creating objects * UpdateModelMixin: allows updating objects * DestroyModelMixin: allows deleting objects * OptimizedReadOnlyTracedViewSet: allows reading objects and adds tracing and optimized queryset fetching (with the use of the <code>fields</code> query parameter)</p>"},{"location":"api/clients/python/avis_client/ImageAttributeCategoryApi/#example_5","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.image_attribute_category import ImageAttributeCategory\nfrom avis_client.models.image_attribute_category_request import ImageAttributeCategoryRequest\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.ImageAttributeCategoryApi(api_client)\n    id = 56 # int | A unique integer value identifying this image attribute category.\n    image_attribute_category_request = avis_client.ImageAttributeCategoryRequest() # ImageAttributeCategoryRequest | \n\n    try:\n        api_response = api_instance.image_attribute_category_update(id, image_attribute_category_request)\n        print(\"The response of ImageAttributeCategoryApi-&gt;image_attribute_category_update:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ImageAttributeCategoryApi-&gt;image_attribute_category_update: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/ImageAttributeCategoryApi/#parameters_5","title":"Parameters","text":"Name Type Description Notes id int A unique integer value identifying this image attribute category. image_attribute_category_request ImageAttributeCategoryRequest"},{"location":"api/clients/python/avis_client/ImageAttributeCategoryApi/#return-type_5","title":"Return type","text":"<p>ImageAttributeCategory</p>"},{"location":"api/clients/python/avis_client/ImageAttributeCategoryApi/#authorization_5","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/ImageAttributeCategoryApi/#http-request-headers_5","title":"HTTP request headers","text":"<ul> <li>Content-Type: application/json, application/x-www-form-urlencoded, multipart/form-data</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/ImageAttributeCategoryApi/#http-response-details_5","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/ImageAttributeCategoryRequest/","title":"ImageAttributeCategoryRequest","text":""},{"location":"api/clients/python/avis_client/ImageAttributeCategoryRequest/#properties","title":"Properties","text":"Name Type Description Notes team int name str [optional] description str [optional] ml_model int [optional]"},{"location":"api/clients/python/avis_client/ImageAttributeCategoryRequest/#example","title":"Example","text":"<p><pre><code>from avis_client.models.image_attribute_category_request import ImageAttributeCategoryRequest\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ImageAttributeCategoryRequest from a JSON string\nimage_attribute_category_request_instance = ImageAttributeCategoryRequest.from_json(json)\n# print the JSON string representation of the object\nprint ImageAttributeCategoryRequest.to_json()\n\n# convert the object into a dict\nimage_attribute_category_request_dict = image_attribute_category_request_instance.to_dict()\n# create an instance of ImageAttributeCategoryRequest from a dict\nimage_attribute_category_request_form_dict = image_attribute_category_request.from_dict(image_attribute_category_request_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/ImageAttributeRequest/","title":"ImageAttributeRequest","text":""},{"location":"api/clients/python/avis_client/ImageAttributeRequest/#properties","title":"Properties","text":"Name Type Description Notes team int category int results List[int] [optional] value str [optional]"},{"location":"api/clients/python/avis_client/ImageAttributeRequest/#example","title":"Example","text":"<p><pre><code>from avis_client.models.image_attribute_request import ImageAttributeRequest\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ImageAttributeRequest from a JSON string\nimage_attribute_request_instance = ImageAttributeRequest.from_json(json)\n# print the JSON string representation of the object\nprint ImageAttributeRequest.to_json()\n\n# convert the object into a dict\nimage_attribute_request_dict = image_attribute_request_instance.to_dict()\n# create an instance of ImageAttributeRequest from a dict\nimage_attribute_request_form_dict = image_attribute_request.from_dict(image_attribute_request_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/ImageRequest/","title":"ImageRequest","text":""},{"location":"api/clients/python/avis_client/ImageRequest/#properties","title":"Properties","text":"Name Type Description Notes team int inspection int [optional] uploaded_by int [optional] results List[int] [optional] format FormatEnum [optional] capture_datetime datetime file bytearray part_id str [optional] validation_status ValidationStatusEnum [optional]"},{"location":"api/clients/python/avis_client/ImageRequest/#example","title":"Example","text":"<p><pre><code>from avis_client.models.image_request import ImageRequest\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ImageRequest from a JSON string\nimage_request_instance = ImageRequest.from_json(json)\n# print the JSON string representation of the object\nprint ImageRequest.to_json()\n\n# convert the object into a dict\nimage_request_dict = image_request_instance.to_dict()\n# create an instance of ImageRequest from a dict\nimage_request_form_dict = image_request.from_dict(image_request_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/Inspection/","title":"Inspection","text":""},{"location":"api/clients/python/avis_client/Inspection/#properties","title":"Properties","text":"Name Type Description Notes id int [readonly] team int product int [optional] opened_by int [optional] closed_by int [optional] images List[int] [optional] created_at datetime [readonly] updated_at datetime [readonly] open_datetime datetime [readonly] close_datetime datetime [optional] configuration int [optional] metadata int [optional]"},{"location":"api/clients/python/avis_client/Inspection/#example","title":"Example","text":"<p><pre><code>from avis_client.models.inspection import Inspection\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of Inspection from a JSON string\ninspection_instance = Inspection.from_json(json)\n# print the JSON string representation of the object\nprint Inspection.to_json()\n\n# convert the object into a dict\ninspection_dict = inspection_instance.to_dict()\n# create an instance of Inspection from a dict\ninspection_form_dict = inspection.from_dict(inspection_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/InspectionApi/","title":"avis_client.InspectionApi","text":"<p>All URIs are relative to http://localhost:8000</p> Method HTTP request Description inspection_create POST /api/inspection/ inspection_destroy DELETE /api/inspection/{id}/ inspection_list GET /api/inspection/ inspection_partial_update PATCH /api/inspection/{id}/ inspection_retrieve GET /api/inspection/{id}/ inspection_send_validation_email_retrieve GET /api/inspection/{id}/send_validation_email/ inspection_update PUT /api/inspection/{id}/ inspection_validation_status_list GET /api/inspection/validation_status/"},{"location":"api/clients/python/avis_client/InspectionApi/#inspection_create","title":"inspection_create","text":"<p>Inspection inspection_create(inspection_request)</p> <p>A base viewset that allows reading, creating and updating objects. The following functionalities are added by the mixins:  * CreateModelMixin: allows creating objects * UpdateModelMixin: allows updating objects * DestroyModelMixin: allows deleting objects * OptimizedReadOnlyTracedViewSet: allows reading objects and adds tracing and optimized queryset fetching (with the use of the <code>fields</code> query parameter)</p>"},{"location":"api/clients/python/avis_client/InspectionApi/#example","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.inspection import Inspection\nfrom avis_client.models.inspection_request import InspectionRequest\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.InspectionApi(api_client)\n    inspection_request = avis_client.InspectionRequest() # InspectionRequest | \n\n    try:\n        api_response = api_instance.inspection_create(inspection_request)\n        print(\"The response of InspectionApi-&gt;inspection_create:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling InspectionApi-&gt;inspection_create: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/InspectionApi/#parameters","title":"Parameters","text":"Name Type Description Notes inspection_request InspectionRequest"},{"location":"api/clients/python/avis_client/InspectionApi/#return-type","title":"Return type","text":"<p>Inspection</p>"},{"location":"api/clients/python/avis_client/InspectionApi/#authorization","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/InspectionApi/#http-request-headers","title":"HTTP request headers","text":"<ul> <li>Content-Type: application/json, application/x-www-form-urlencoded, multipart/form-data</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/InspectionApi/#http-response-details","title":"HTTP response details","text":"Status code Description Response headers 201 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/InspectionApi/#inspection_destroy","title":"inspection_destroy","text":"<p>inspection_destroy(id)</p> <p>A base viewset that allows reading, creating and updating objects. The following functionalities are added by the mixins:  * CreateModelMixin: allows creating objects * UpdateModelMixin: allows updating objects * DestroyModelMixin: allows deleting objects * OptimizedReadOnlyTracedViewSet: allows reading objects and adds tracing and optimized queryset fetching (with the use of the <code>fields</code> query parameter)</p>"},{"location":"api/clients/python/avis_client/InspectionApi/#example_1","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.InspectionApi(api_client)\n    id = 56 # int | A unique integer value identifying this inspection.\n\n    try:\n        api_instance.inspection_destroy(id)\n    except Exception as e:\n        print(\"Exception when calling InspectionApi-&gt;inspection_destroy: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/InspectionApi/#parameters_1","title":"Parameters","text":"Name Type Description Notes id int A unique integer value identifying this inspection."},{"location":"api/clients/python/avis_client/InspectionApi/#return-type_1","title":"Return type","text":"<p>void (empty response body)</p>"},{"location":"api/clients/python/avis_client/InspectionApi/#authorization_1","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/InspectionApi/#http-request-headers_1","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: Not defined</li> </ul>"},{"location":"api/clients/python/avis_client/InspectionApi/#http-response-details_1","title":"HTTP response details","text":"Status code Description Response headers 204 No response body - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/InspectionApi/#inspection_list","title":"inspection_list","text":"<p>PaginatedInspectionList inspection_list(fields=fields, id=id, ordering=ordering, page=page, page_size=page_size)</p> <p>A base viewset that allows reading, creating and updating objects. The following functionalities are added by the mixins:  * CreateModelMixin: allows creating objects * UpdateModelMixin: allows updating objects * DestroyModelMixin: allows deleting objects * OptimizedReadOnlyTracedViewSet: allows reading objects and adds tracing and optimized queryset fetching (with the use of the <code>fields</code> query parameter)</p>"},{"location":"api/clients/python/avis_client/InspectionApi/#example_2","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.paginated_inspection_list import PaginatedInspectionList\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.InspectionApi(api_client)\n    fields = 'fields_example' # str |  (optional)\n    id = [56] # List[int] | Multiple values may be separated by commas. (optional)\n    ordering = 'ordering_example' # str | Which field to use when ordering the results. (optional)\n    page = 56 # int | A page number within the paginated result set. (optional)\n    page_size = 56 # int | Number of results to return per page. (optional)\n\n    try:\n        api_response = api_instance.inspection_list(fields=fields, id=id, ordering=ordering, page=page, page_size=page_size)\n        print(\"The response of InspectionApi-&gt;inspection_list:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling InspectionApi-&gt;inspection_list: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/InspectionApi/#parameters_2","title":"Parameters","text":"Name Type Description Notes fields str [optional] id List[int] Multiple values may be separated by commas. [optional] ordering str Which field to use when ordering the results. [optional] page int A page number within the paginated result set. [optional] page_size int Number of results to return per page. [optional]"},{"location":"api/clients/python/avis_client/InspectionApi/#return-type_2","title":"Return type","text":"<p>PaginatedInspectionList</p>"},{"location":"api/clients/python/avis_client/InspectionApi/#authorization_2","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/InspectionApi/#http-request-headers_2","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/InspectionApi/#http-response-details_2","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/InspectionApi/#inspection_partial_update","title":"inspection_partial_update","text":"<p>Inspection inspection_partial_update(id, patched_inspection_request=patched_inspection_request)</p> <p>A base viewset that allows reading, creating and updating objects. The following functionalities are added by the mixins:  * CreateModelMixin: allows creating objects * UpdateModelMixin: allows updating objects * DestroyModelMixin: allows deleting objects * OptimizedReadOnlyTracedViewSet: allows reading objects and adds tracing and optimized queryset fetching (with the use of the <code>fields</code> query parameter)</p>"},{"location":"api/clients/python/avis_client/InspectionApi/#example_3","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.inspection import Inspection\nfrom avis_client.models.patched_inspection_request import PatchedInspectionRequest\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.InspectionApi(api_client)\n    id = 56 # int | A unique integer value identifying this inspection.\n    patched_inspection_request = avis_client.PatchedInspectionRequest() # PatchedInspectionRequest |  (optional)\n\n    try:\n        api_response = api_instance.inspection_partial_update(id, patched_inspection_request=patched_inspection_request)\n        print(\"The response of InspectionApi-&gt;inspection_partial_update:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling InspectionApi-&gt;inspection_partial_update: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/InspectionApi/#parameters_3","title":"Parameters","text":"Name Type Description Notes id int A unique integer value identifying this inspection. patched_inspection_request PatchedInspectionRequest [optional]"},{"location":"api/clients/python/avis_client/InspectionApi/#return-type_3","title":"Return type","text":"<p>Inspection</p>"},{"location":"api/clients/python/avis_client/InspectionApi/#authorization_3","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/InspectionApi/#http-request-headers_3","title":"HTTP request headers","text":"<ul> <li>Content-Type: application/json, application/x-www-form-urlencoded, multipart/form-data</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/InspectionApi/#http-response-details_3","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/InspectionApi/#inspection_retrieve","title":"inspection_retrieve","text":"<p>Inspection inspection_retrieve(id, fields=fields)</p> <p>A base viewset that allows reading, creating and updating objects. The following functionalities are added by the mixins:  * CreateModelMixin: allows creating objects * UpdateModelMixin: allows updating objects * DestroyModelMixin: allows deleting objects * OptimizedReadOnlyTracedViewSet: allows reading objects and adds tracing and optimized queryset fetching (with the use of the <code>fields</code> query parameter)</p>"},{"location":"api/clients/python/avis_client/InspectionApi/#example_4","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.inspection import Inspection\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.InspectionApi(api_client)\n    id = 56 # int | A unique integer value identifying this inspection.\n    fields = 'fields_example' # str |  (optional)\n\n    try:\n        api_response = api_instance.inspection_retrieve(id, fields=fields)\n        print(\"The response of InspectionApi-&gt;inspection_retrieve:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling InspectionApi-&gt;inspection_retrieve: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/InspectionApi/#parameters_4","title":"Parameters","text":"Name Type Description Notes id int A unique integer value identifying this inspection. fields str [optional]"},{"location":"api/clients/python/avis_client/InspectionApi/#return-type_4","title":"Return type","text":"<p>Inspection</p>"},{"location":"api/clients/python/avis_client/InspectionApi/#authorization_4","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/InspectionApi/#http-request-headers_4","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/InspectionApi/#http-response-details_4","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/InspectionApi/#inspection_send_validation_email_retrieve","title":"inspection_send_validation_email_retrieve","text":"<p>Inspection inspection_send_validation_email_retrieve(id)</p> <p>A base viewset that allows reading, creating and updating objects. The following functionalities are added by the mixins:  * CreateModelMixin: allows creating objects * UpdateModelMixin: allows updating objects * DestroyModelMixin: allows deleting objects * OptimizedReadOnlyTracedViewSet: allows reading objects and adds tracing and optimized queryset fetching (with the use of the <code>fields</code> query parameter)</p>"},{"location":"api/clients/python/avis_client/InspectionApi/#example_5","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.inspection import Inspection\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.InspectionApi(api_client)\n    id = 56 # int | A unique integer value identifying this inspection.\n\n    try:\n        api_response = api_instance.inspection_send_validation_email_retrieve(id)\n        print(\"The response of InspectionApi-&gt;inspection_send_validation_email_retrieve:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling InspectionApi-&gt;inspection_send_validation_email_retrieve: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/InspectionApi/#parameters_5","title":"Parameters","text":"Name Type Description Notes id int A unique integer value identifying this inspection."},{"location":"api/clients/python/avis_client/InspectionApi/#return-type_5","title":"Return type","text":"<p>Inspection</p>"},{"location":"api/clients/python/avis_client/InspectionApi/#authorization_5","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/InspectionApi/#http-request-headers_5","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/InspectionApi/#http-response-details_5","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/InspectionApi/#inspection_update","title":"inspection_update","text":"<p>Inspection inspection_update(id, inspection_request)</p> <p>A base viewset that allows reading, creating and updating objects. The following functionalities are added by the mixins:  * CreateModelMixin: allows creating objects * UpdateModelMixin: allows updating objects * DestroyModelMixin: allows deleting objects * OptimizedReadOnlyTracedViewSet: allows reading objects and adds tracing and optimized queryset fetching (with the use of the <code>fields</code> query parameter)</p>"},{"location":"api/clients/python/avis_client/InspectionApi/#example_6","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.inspection import Inspection\nfrom avis_client.models.inspection_request import InspectionRequest\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.InspectionApi(api_client)\n    id = 56 # int | A unique integer value identifying this inspection.\n    inspection_request = avis_client.InspectionRequest() # InspectionRequest | \n\n    try:\n        api_response = api_instance.inspection_update(id, inspection_request)\n        print(\"The response of InspectionApi-&gt;inspection_update:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling InspectionApi-&gt;inspection_update: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/InspectionApi/#parameters_6","title":"Parameters","text":"Name Type Description Notes id int A unique integer value identifying this inspection. inspection_request InspectionRequest"},{"location":"api/clients/python/avis_client/InspectionApi/#return-type_6","title":"Return type","text":"<p>Inspection</p>"},{"location":"api/clients/python/avis_client/InspectionApi/#authorization_6","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/InspectionApi/#http-request-headers_6","title":"HTTP request headers","text":"<ul> <li>Content-Type: application/json, application/x-www-form-urlencoded, multipart/form-data</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/InspectionApi/#http-response-details_6","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/InspectionApi/#inspection_validation_status_list","title":"inspection_validation_status_list","text":"<p>PaginatedInspectionValidationStatusList inspection_validation_status_list(id=id, ordering=ordering, page=page, page_size=page_size)</p> <p>A base viewset that allows reading, creating and updating objects. The following functionalities are added by the mixins:  * CreateModelMixin: allows creating objects * UpdateModelMixin: allows updating objects * DestroyModelMixin: allows deleting objects * OptimizedReadOnlyTracedViewSet: allows reading objects and adds tracing and optimized queryset fetching (with the use of the <code>fields</code> query parameter)</p>"},{"location":"api/clients/python/avis_client/InspectionApi/#example_7","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.paginated_inspection_validation_status_list import PaginatedInspectionValidationStatusList\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.InspectionApi(api_client)\n    id = [56] # List[int] | Multiple values may be separated by commas. (optional)\n    ordering = 'ordering_example' # str | Which field to use when ordering the results. (optional)\n    page = 56 # int | A page number within the paginated result set. (optional)\n    page_size = 56 # int | Number of results to return per page. (optional)\n\n    try:\n        api_response = api_instance.inspection_validation_status_list(id=id, ordering=ordering, page=page, page_size=page_size)\n        print(\"The response of InspectionApi-&gt;inspection_validation_status_list:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling InspectionApi-&gt;inspection_validation_status_list: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/InspectionApi/#parameters_7","title":"Parameters","text":"Name Type Description Notes id List[int] Multiple values may be separated by commas. [optional] ordering str Which field to use when ordering the results. [optional] page int A page number within the paginated result set. [optional] page_size int Number of results to return per page. [optional]"},{"location":"api/clients/python/avis_client/InspectionApi/#return-type_7","title":"Return type","text":"<p>PaginatedInspectionValidationStatusList</p>"},{"location":"api/clients/python/avis_client/InspectionApi/#authorization_7","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/InspectionApi/#http-request-headers_7","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/InspectionApi/#http-response-details_7","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/InspectionImagesStatistics/","title":"InspectionImagesStatistics","text":""},{"location":"api/clients/python/avis_client/InspectionImagesStatistics/#properties","title":"Properties","text":"Name Type Description Notes total_images int images_to_inspect int"},{"location":"api/clients/python/avis_client/InspectionImagesStatistics/#example","title":"Example","text":"<p><pre><code>from avis_client.models.inspection_images_statistics import InspectionImagesStatistics\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of InspectionImagesStatistics from a JSON string\ninspection_images_statistics_instance = InspectionImagesStatistics.from_json(json)\n# print the JSON string representation of the object\nprint InspectionImagesStatistics.to_json()\n\n# convert the object into a dict\ninspection_images_statistics_dict = inspection_images_statistics_instance.to_dict()\n# create an instance of InspectionImagesStatistics from a dict\ninspection_images_statistics_form_dict = inspection_images_statistics.from_dict(inspection_images_statistics_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/InspectionImagesStatisticsRequest/","title":"InspectionImagesStatisticsRequest","text":""},{"location":"api/clients/python/avis_client/InspectionImagesStatisticsRequest/#properties","title":"Properties","text":"Name Type Description Notes total_images int images_to_inspect int"},{"location":"api/clients/python/avis_client/InspectionImagesStatisticsRequest/#example","title":"Example","text":"<p><pre><code>from avis_client.models.inspection_images_statistics_request import InspectionImagesStatisticsRequest\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of InspectionImagesStatisticsRequest from a JSON string\ninspection_images_statistics_request_instance = InspectionImagesStatisticsRequest.from_json(json)\n# print the JSON string representation of the object\nprint InspectionImagesStatisticsRequest.to_json()\n\n# convert the object into a dict\ninspection_images_statistics_request_dict = inspection_images_statistics_request_instance.to_dict()\n# create an instance of InspectionImagesStatisticsRequest from a dict\ninspection_images_statistics_request_form_dict = inspection_images_statistics_request.from_dict(inspection_images_statistics_request_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/InspectionRequest/","title":"InspectionRequest","text":""},{"location":"api/clients/python/avis_client/InspectionRequest/#properties","title":"Properties","text":"Name Type Description Notes team int product int [optional] opened_by int [optional] closed_by int [optional] images List[int] [optional] close_datetime datetime [optional] configuration int [optional] metadata int [optional]"},{"location":"api/clients/python/avis_client/InspectionRequest/#example","title":"Example","text":"<p><pre><code>from avis_client.models.inspection_request import InspectionRequest\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of InspectionRequest from a JSON string\ninspection_request_instance = InspectionRequest.from_json(json)\n# print the JSON string representation of the object\nprint InspectionRequest.to_json()\n\n# convert the object into a dict\ninspection_request_dict = inspection_request_instance.to_dict()\n# create an instance of InspectionRequest from a dict\ninspection_request_form_dict = inspection_request.from_dict(inspection_request_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/InspectionStatistics/","title":"InspectionStatistics","text":""},{"location":"api/clients/python/avis_client/InspectionStatistics/#properties","title":"Properties","text":"Name Type Description Notes total_inspections int closed_inspections int opened_inspections int validation_requests int"},{"location":"api/clients/python/avis_client/InspectionStatistics/#example","title":"Example","text":"<p><pre><code>from avis_client.models.inspection_statistics import InspectionStatistics\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of InspectionStatistics from a JSON string\ninspection_statistics_instance = InspectionStatistics.from_json(json)\n# print the JSON string representation of the object\nprint InspectionStatistics.to_json()\n\n# convert the object into a dict\ninspection_statistics_dict = inspection_statistics_instance.to_dict()\n# create an instance of InspectionStatistics from a dict\ninspection_statistics_form_dict = inspection_statistics.from_dict(inspection_statistics_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/InspectionStatisticsRequest/","title":"InspectionStatisticsRequest","text":""},{"location":"api/clients/python/avis_client/InspectionStatisticsRequest/#properties","title":"Properties","text":"Name Type Description Notes total_inspections int closed_inspections int opened_inspections int validation_requests int"},{"location":"api/clients/python/avis_client/InspectionStatisticsRequest/#example","title":"Example","text":"<p><pre><code>from avis_client.models.inspection_statistics_request import InspectionStatisticsRequest\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of InspectionStatisticsRequest from a JSON string\ninspection_statistics_request_instance = InspectionStatisticsRequest.from_json(json)\n# print the JSON string representation of the object\nprint InspectionStatisticsRequest.to_json()\n\n# convert the object into a dict\ninspection_statistics_request_dict = inspection_statistics_request_instance.to_dict()\n# create an instance of InspectionStatisticsRequest from a dict\ninspection_statistics_request_form_dict = inspection_statistics_request.from_dict(inspection_statistics_request_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/InspectionValidationStatus/","title":"InspectionValidationStatus","text":""},{"location":"api/clients/python/avis_client/InspectionValidationStatus/#properties","title":"Properties","text":"Name Type Description Notes id int validation_status ValidationStatusEnum"},{"location":"api/clients/python/avis_client/InspectionValidationStatus/#example","title":"Example","text":"<p><pre><code>from avis_client.models.inspection_validation_status import InspectionValidationStatus\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of InspectionValidationStatus from a JSON string\ninspection_validation_status_instance = InspectionValidationStatus.from_json(json)\n# print the JSON string representation of the object\nprint InspectionValidationStatus.to_json()\n\n# convert the object into a dict\ninspection_validation_status_dict = inspection_validation_status_instance.to_dict()\n# create an instance of InspectionValidationStatus from a dict\ninspection_validation_status_form_dict = inspection_validation_status.from_dict(inspection_validation_status_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/MLModel/","title":"MLModel","text":""},{"location":"api/clients/python/avis_client/MLModel/#properties","title":"Properties","text":"Name Type Description Notes id int [readonly] model int created_at datetime [readonly] updated_at datetime [readonly] version str [optional] url str [optional] teams List[int] [readonly]"},{"location":"api/clients/python/avis_client/MLModel/#example","title":"Example","text":"<p><pre><code>from avis_client.models.ml_model import MLModel\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of MLModel from a JSON string\nml_model_instance = MLModel.from_json(json)\n# print the JSON string representation of the object\nprint MLModel.to_json()\n\n# convert the object into a dict\nml_model_dict = ml_model_instance.to_dict()\n# create an instance of MLModel from a dict\nml_model_form_dict = ml_model.from_dict(ml_model_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/MLModelRequest/","title":"MLModelRequest","text":""},{"location":"api/clients/python/avis_client/MLModelRequest/#properties","title":"Properties","text":"Name Type Description Notes headers object model int version str [optional] url str [optional]"},{"location":"api/clients/python/avis_client/MLModelRequest/#example","title":"Example","text":"<p><pre><code>from avis_client.models.ml_model_request import MLModelRequest\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of MLModelRequest from a JSON string\nml_model_request_instance = MLModelRequest.from_json(json)\n# print the JSON string representation of the object\nprint MLModelRequest.to_json()\n\n# convert the object into a dict\nml_model_request_dict = ml_model_request_instance.to_dict()\n# create an instance of MLModelRequest from a dict\nml_model_request_form_dict = ml_model_request.from_dict(ml_model_request_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/MLModelType/","title":"MLModelType","text":""},{"location":"api/clients/python/avis_client/MLModelType/#properties","title":"Properties","text":"Name Type Description Notes id int [readonly] created_at datetime [readonly] updated_at datetime [readonly] slug str [optional] name str [optional] description str [optional]"},{"location":"api/clients/python/avis_client/MLModelType/#example","title":"Example","text":"<p><pre><code>from avis_client.models.ml_model_type import MLModelType\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of MLModelType from a JSON string\nml_model_type_instance = MLModelType.from_json(json)\n# print the JSON string representation of the object\nprint MLModelType.to_json()\n\n# convert the object into a dict\nml_model_type_dict = ml_model_type_instance.to_dict()\n# create an instance of MLModelType from a dict\nml_model_type_form_dict = ml_model_type.from_dict(ml_model_type_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/MLModelTypeRequest/","title":"MLModelTypeRequest","text":""},{"location":"api/clients/python/avis_client/MLModelTypeRequest/#properties","title":"Properties","text":"Name Type Description Notes slug str [optional] name str [optional] description str [optional]"},{"location":"api/clients/python/avis_client/MLModelTypeRequest/#example","title":"Example","text":"<p><pre><code>from avis_client.models.ml_model_type_request import MLModelTypeRequest\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of MLModelTypeRequest from a JSON string\nml_model_type_request_instance = MLModelTypeRequest.from_json(json)\n# print the JSON string representation of the object\nprint MLModelTypeRequest.to_json()\n\n# convert the object into a dict\nml_model_type_request_dict = ml_model_type_request_instance.to_dict()\n# create an instance of MLModelTypeRequest from a dict\nml_model_type_request_form_dict = ml_model_type_request.from_dict(ml_model_type_request_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/Membership/","title":"Membership","text":""},{"location":"api/clients/python/avis_client/Membership/#properties","title":"Properties","text":"Name Type Description Notes id int [readonly] user CustomUser [readonly] role str team int [readonly] created_at datetime [readonly] updated_at datetime [readonly]"},{"location":"api/clients/python/avis_client/Membership/#example","title":"Example","text":"<p><pre><code>from avis_client.models.membership import Membership\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of Membership from a JSON string\nmembership_instance = Membership.from_json(json)\n# print the JSON string representation of the object\nprint Membership.to_json()\n\n# convert the object into a dict\nmembership_dict = membership_instance.to_dict()\n# create an instance of Membership from a dict\nmembership_form_dict = membership.from_dict(membership_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/MembershipApi/","title":"avis_client.MembershipApi","text":"<p>All URIs are relative to http://localhost:8000</p> Method HTTP request Description membership_create POST /api/membership/ membership_destroy DELETE /api/membership/{id}/ membership_list GET /api/membership/ membership_retrieve GET /api/membership/{id}/ membership_update PUT /api/membership/{id}/"},{"location":"api/clients/python/avis_client/MembershipApi/#membership_create","title":"membership_create","text":"<p>Membership membership_create(membership_request)</p> <p>A mixin that allows reading entities (listing and retrieving by id).</p>"},{"location":"api/clients/python/avis_client/MembershipApi/#example","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.membership import Membership\nfrom avis_client.models.membership_request import MembershipRequest\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.MembershipApi(api_client)\n    membership_request = avis_client.MembershipRequest() # MembershipRequest | \n\n    try:\n        api_response = api_instance.membership_create(membership_request)\n        print(\"The response of MembershipApi-&gt;membership_create:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling MembershipApi-&gt;membership_create: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/MembershipApi/#parameters","title":"Parameters","text":"Name Type Description Notes membership_request MembershipRequest"},{"location":"api/clients/python/avis_client/MembershipApi/#return-type","title":"Return type","text":"<p>Membership</p>"},{"location":"api/clients/python/avis_client/MembershipApi/#authorization","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/MembershipApi/#http-request-headers","title":"HTTP request headers","text":"<ul> <li>Content-Type: application/json, application/x-www-form-urlencoded, multipart/form-data</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/MembershipApi/#http-response-details","title":"HTTP response details","text":"Status code Description Response headers 201 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/MembershipApi/#membership_destroy","title":"membership_destroy","text":"<p>membership_destroy(id)</p> <p>A mixin that allows reading entities (listing and retrieving by id).</p>"},{"location":"api/clients/python/avis_client/MembershipApi/#example_1","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.MembershipApi(api_client)\n    id = 56 # int | A unique integer value identifying this membership.\n\n    try:\n        api_instance.membership_destroy(id)\n    except Exception as e:\n        print(\"Exception when calling MembershipApi-&gt;membership_destroy: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/MembershipApi/#parameters_1","title":"Parameters","text":"Name Type Description Notes id int A unique integer value identifying this membership."},{"location":"api/clients/python/avis_client/MembershipApi/#return-type_1","title":"Return type","text":"<p>void (empty response body)</p>"},{"location":"api/clients/python/avis_client/MembershipApi/#authorization_1","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/MembershipApi/#http-request-headers_1","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: Not defined</li> </ul>"},{"location":"api/clients/python/avis_client/MembershipApi/#http-response-details_1","title":"HTTP response details","text":"Status code Description Response headers 204 No response body - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/MembershipApi/#membership_list","title":"membership_list","text":"<p>PaginatedMembershipList membership_list(page=page, page_size=page_size)</p> <p>A mixin that allows reading entities (listing and retrieving by id).</p>"},{"location":"api/clients/python/avis_client/MembershipApi/#example_2","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.paginated_membership_list import PaginatedMembershipList\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.MembershipApi(api_client)\n    page = 56 # int | A page number within the paginated result set. (optional)\n    page_size = 56 # int | Number of results to return per page. (optional)\n\n    try:\n        api_response = api_instance.membership_list(page=page, page_size=page_size)\n        print(\"The response of MembershipApi-&gt;membership_list:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling MembershipApi-&gt;membership_list: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/MembershipApi/#parameters_2","title":"Parameters","text":"Name Type Description Notes page int A page number within the paginated result set. [optional] page_size int Number of results to return per page. [optional]"},{"location":"api/clients/python/avis_client/MembershipApi/#return-type_2","title":"Return type","text":"<p>PaginatedMembershipList</p>"},{"location":"api/clients/python/avis_client/MembershipApi/#authorization_2","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/MembershipApi/#http-request-headers_2","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/MembershipApi/#http-response-details_2","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/MembershipApi/#membership_retrieve","title":"membership_retrieve","text":"<p>Membership membership_retrieve(id)</p> <p>A mixin that allows reading entities (listing and retrieving by id).</p>"},{"location":"api/clients/python/avis_client/MembershipApi/#example_3","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.membership import Membership\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.MembershipApi(api_client)\n    id = 56 # int | A unique integer value identifying this membership.\n\n    try:\n        api_response = api_instance.membership_retrieve(id)\n        print(\"The response of MembershipApi-&gt;membership_retrieve:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling MembershipApi-&gt;membership_retrieve: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/MembershipApi/#parameters_3","title":"Parameters","text":"Name Type Description Notes id int A unique integer value identifying this membership."},{"location":"api/clients/python/avis_client/MembershipApi/#return-type_3","title":"Return type","text":"<p>Membership</p>"},{"location":"api/clients/python/avis_client/MembershipApi/#authorization_3","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/MembershipApi/#http-request-headers_3","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/MembershipApi/#http-response-details_3","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/MembershipApi/#membership_update","title":"membership_update","text":"<p>Membership membership_update(id, membership_request)</p> <p>A mixin that allows reading entities (listing and retrieving by id).</p>"},{"location":"api/clients/python/avis_client/MembershipApi/#example_4","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.membership import Membership\nfrom avis_client.models.membership_request import MembershipRequest\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.MembershipApi(api_client)\n    id = 56 # int | A unique integer value identifying this membership.\n    membership_request = avis_client.MembershipRequest() # MembershipRequest | \n\n    try:\n        api_response = api_instance.membership_update(id, membership_request)\n        print(\"The response of MembershipApi-&gt;membership_update:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling MembershipApi-&gt;membership_update: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/MembershipApi/#parameters_4","title":"Parameters","text":"Name Type Description Notes id int A unique integer value identifying this membership. membership_request MembershipRequest"},{"location":"api/clients/python/avis_client/MembershipApi/#return-type_4","title":"Return type","text":"<p>Membership</p>"},{"location":"api/clients/python/avis_client/MembershipApi/#authorization_4","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/MembershipApi/#http-request-headers_4","title":"HTTP request headers","text":"<ul> <li>Content-Type: application/json, application/x-www-form-urlencoded, multipart/form-data</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/MembershipApi/#http-response-details_4","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/MembershipRequest/","title":"MembershipRequest","text":""},{"location":"api/clients/python/avis_client/MembershipRequest/#properties","title":"Properties","text":"Name Type Description Notes role str"},{"location":"api/clients/python/avis_client/MembershipRequest/#example","title":"Example","text":"<p><pre><code>from avis_client.models.membership_request import MembershipRequest\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of MembershipRequest from a JSON string\nmembership_request_instance = MembershipRequest.from_json(json)\n# print the JSON string representation of the object\nprint MembershipRequest.to_json()\n\n# convert the object into a dict\nmembership_request_dict = membership_request_instance.to_dict()\n# create an instance of MembershipRequest from a dict\nmembership_request_form_dict = membership_request.from_dict(membership_request_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/Metadata/","title":"Metadata","text":""},{"location":"api/clients/python/avis_client/Metadata/#properties","title":"Properties","text":"Name Type Description Notes id int [readonly] team int configurations List[int] [optional] var_schema int data object [optional] created_at datetime [readonly] updated_at datetime [readonly]"},{"location":"api/clients/python/avis_client/Metadata/#example","title":"Example","text":"<p><pre><code>from avis_client.models.metadata import Metadata\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of Metadata from a JSON string\nmetadata_instance = Metadata.from_json(json)\n# print the JSON string representation of the object\nprint Metadata.to_json()\n\n# convert the object into a dict\nmetadata_dict = metadata_instance.to_dict()\n# create an instance of Metadata from a dict\nmetadata_form_dict = metadata.from_dict(metadata_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/MetadataApi/","title":"avis_client.MetadataApi","text":"<p>All URIs are relative to http://localhost:8000</p> Method HTTP request Description metadata_create POST /api/metadata/ metadata_destroy DELETE /api/metadata/{id}/ metadata_list GET /api/metadata/ metadata_partial_update PATCH /api/metadata/{id}/ metadata_retrieve GET /api/metadata/{id}/ metadata_update PUT /api/metadata/{id}/"},{"location":"api/clients/python/avis_client/MetadataApi/#metadata_create","title":"metadata_create","text":"<p>Metadata metadata_create(metadata_request)</p> <p>A base viewset that allows reading, creating and updating objects. The following functionalities are added by the mixins:  * CreateModelMixin: allows creating objects * UpdateModelMixin: allows updating objects * DestroyModelMixin: allows deleting objects * OptimizedReadOnlyTracedViewSet: allows reading objects and adds tracing and optimized queryset fetching (with the use of the <code>fields</code> query parameter)</p>"},{"location":"api/clients/python/avis_client/MetadataApi/#example","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.metadata import Metadata\nfrom avis_client.models.metadata_request import MetadataRequest\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.MetadataApi(api_client)\n    metadata_request = avis_client.MetadataRequest() # MetadataRequest | \n\n    try:\n        api_response = api_instance.metadata_create(metadata_request)\n        print(\"The response of MetadataApi-&gt;metadata_create:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling MetadataApi-&gt;metadata_create: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/MetadataApi/#parameters","title":"Parameters","text":"Name Type Description Notes metadata_request MetadataRequest"},{"location":"api/clients/python/avis_client/MetadataApi/#return-type","title":"Return type","text":"<p>Metadata</p>"},{"location":"api/clients/python/avis_client/MetadataApi/#authorization","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/MetadataApi/#http-request-headers","title":"HTTP request headers","text":"<ul> <li>Content-Type: application/json, application/x-www-form-urlencoded, multipart/form-data</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/MetadataApi/#http-response-details","title":"HTTP response details","text":"Status code Description Response headers 201 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/MetadataApi/#metadata_destroy","title":"metadata_destroy","text":"<p>metadata_destroy(id)</p> <p>A base viewset that allows reading, creating and updating objects. The following functionalities are added by the mixins:  * CreateModelMixin: allows creating objects * UpdateModelMixin: allows updating objects * DestroyModelMixin: allows deleting objects * OptimizedReadOnlyTracedViewSet: allows reading objects and adds tracing and optimized queryset fetching (with the use of the <code>fields</code> query parameter)</p>"},{"location":"api/clients/python/avis_client/MetadataApi/#example_1","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.MetadataApi(api_client)\n    id = 56 # int | A unique integer value identifying this metadata.\n\n    try:\n        api_instance.metadata_destroy(id)\n    except Exception as e:\n        print(\"Exception when calling MetadataApi-&gt;metadata_destroy: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/MetadataApi/#parameters_1","title":"Parameters","text":"Name Type Description Notes id int A unique integer value identifying this metadata."},{"location":"api/clients/python/avis_client/MetadataApi/#return-type_1","title":"Return type","text":"<p>void (empty response body)</p>"},{"location":"api/clients/python/avis_client/MetadataApi/#authorization_1","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/MetadataApi/#http-request-headers_1","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: Not defined</li> </ul>"},{"location":"api/clients/python/avis_client/MetadataApi/#http-response-details_1","title":"HTTP response details","text":"Status code Description Response headers 204 No response body - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/MetadataApi/#metadata_list","title":"metadata_list","text":"<p>PaginatedMetadataList metadata_list(fields=fields, id=id, ordering=ordering, page=page, page_size=page_size)</p> <p>A base viewset that allows reading, creating and updating objects. The following functionalities are added by the mixins:  * CreateModelMixin: allows creating objects * UpdateModelMixin: allows updating objects * DestroyModelMixin: allows deleting objects * OptimizedReadOnlyTracedViewSet: allows reading objects and adds tracing and optimized queryset fetching (with the use of the <code>fields</code> query parameter)</p>"},{"location":"api/clients/python/avis_client/MetadataApi/#example_2","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.paginated_metadata_list import PaginatedMetadataList\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.MetadataApi(api_client)\n    fields = 'fields_example' # str |  (optional)\n    id = [56] # List[int] | Multiple values may be separated by commas. (optional)\n    ordering = 'ordering_example' # str | Which field to use when ordering the results. (optional)\n    page = 56 # int | A page number within the paginated result set. (optional)\n    page_size = 56 # int | Number of results to return per page. (optional)\n\n    try:\n        api_response = api_instance.metadata_list(fields=fields, id=id, ordering=ordering, page=page, page_size=page_size)\n        print(\"The response of MetadataApi-&gt;metadata_list:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling MetadataApi-&gt;metadata_list: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/MetadataApi/#parameters_2","title":"Parameters","text":"Name Type Description Notes fields str [optional] id List[int] Multiple values may be separated by commas. [optional] ordering str Which field to use when ordering the results. [optional] page int A page number within the paginated result set. [optional] page_size int Number of results to return per page. [optional]"},{"location":"api/clients/python/avis_client/MetadataApi/#return-type_2","title":"Return type","text":"<p>PaginatedMetadataList</p>"},{"location":"api/clients/python/avis_client/MetadataApi/#authorization_2","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/MetadataApi/#http-request-headers_2","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/MetadataApi/#http-response-details_2","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/MetadataApi/#metadata_partial_update","title":"metadata_partial_update","text":"<p>Metadata metadata_partial_update(id, patched_metadata_request=patched_metadata_request)</p> <p>A base viewset that allows reading, creating and updating objects. The following functionalities are added by the mixins:  * CreateModelMixin: allows creating objects * UpdateModelMixin: allows updating objects * DestroyModelMixin: allows deleting objects * OptimizedReadOnlyTracedViewSet: allows reading objects and adds tracing and optimized queryset fetching (with the use of the <code>fields</code> query parameter)</p>"},{"location":"api/clients/python/avis_client/MetadataApi/#example_3","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.metadata import Metadata\nfrom avis_client.models.patched_metadata_request import PatchedMetadataRequest\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.MetadataApi(api_client)\n    id = 56 # int | A unique integer value identifying this metadata.\n    patched_metadata_request = avis_client.PatchedMetadataRequest() # PatchedMetadataRequest |  (optional)\n\n    try:\n        api_response = api_instance.metadata_partial_update(id, patched_metadata_request=patched_metadata_request)\n        print(\"The response of MetadataApi-&gt;metadata_partial_update:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling MetadataApi-&gt;metadata_partial_update: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/MetadataApi/#parameters_3","title":"Parameters","text":"Name Type Description Notes id int A unique integer value identifying this metadata. patched_metadata_request PatchedMetadataRequest [optional]"},{"location":"api/clients/python/avis_client/MetadataApi/#return-type_3","title":"Return type","text":"<p>Metadata</p>"},{"location":"api/clients/python/avis_client/MetadataApi/#authorization_3","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/MetadataApi/#http-request-headers_3","title":"HTTP request headers","text":"<ul> <li>Content-Type: application/json, application/x-www-form-urlencoded, multipart/form-data</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/MetadataApi/#http-response-details_3","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/MetadataApi/#metadata_retrieve","title":"metadata_retrieve","text":"<p>Metadata metadata_retrieve(id, fields=fields)</p> <p>A base viewset that allows reading, creating and updating objects. The following functionalities are added by the mixins:  * CreateModelMixin: allows creating objects * UpdateModelMixin: allows updating objects * DestroyModelMixin: allows deleting objects * OptimizedReadOnlyTracedViewSet: allows reading objects and adds tracing and optimized queryset fetching (with the use of the <code>fields</code> query parameter)</p>"},{"location":"api/clients/python/avis_client/MetadataApi/#example_4","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.metadata import Metadata\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.MetadataApi(api_client)\n    id = 56 # int | A unique integer value identifying this metadata.\n    fields = 'fields_example' # str |  (optional)\n\n    try:\n        api_response = api_instance.metadata_retrieve(id, fields=fields)\n        print(\"The response of MetadataApi-&gt;metadata_retrieve:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling MetadataApi-&gt;metadata_retrieve: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/MetadataApi/#parameters_4","title":"Parameters","text":"Name Type Description Notes id int A unique integer value identifying this metadata. fields str [optional]"},{"location":"api/clients/python/avis_client/MetadataApi/#return-type_4","title":"Return type","text":"<p>Metadata</p>"},{"location":"api/clients/python/avis_client/MetadataApi/#authorization_4","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/MetadataApi/#http-request-headers_4","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/MetadataApi/#http-response-details_4","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/MetadataApi/#metadata_update","title":"metadata_update","text":"<p>Metadata metadata_update(id, metadata_request)</p> <p>A base viewset that allows reading, creating and updating objects. The following functionalities are added by the mixins:  * CreateModelMixin: allows creating objects * UpdateModelMixin: allows updating objects * DestroyModelMixin: allows deleting objects * OptimizedReadOnlyTracedViewSet: allows reading objects and adds tracing and optimized queryset fetching (with the use of the <code>fields</code> query parameter)</p>"},{"location":"api/clients/python/avis_client/MetadataApi/#example_5","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.metadata import Metadata\nfrom avis_client.models.metadata_request import MetadataRequest\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.MetadataApi(api_client)\n    id = 56 # int | A unique integer value identifying this metadata.\n    metadata_request = avis_client.MetadataRequest() # MetadataRequest | \n\n    try:\n        api_response = api_instance.metadata_update(id, metadata_request)\n        print(\"The response of MetadataApi-&gt;metadata_update:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling MetadataApi-&gt;metadata_update: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/MetadataApi/#parameters_5","title":"Parameters","text":"Name Type Description Notes id int A unique integer value identifying this metadata. metadata_request MetadataRequest"},{"location":"api/clients/python/avis_client/MetadataApi/#return-type_5","title":"Return type","text":"<p>Metadata</p>"},{"location":"api/clients/python/avis_client/MetadataApi/#authorization_5","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/MetadataApi/#http-request-headers_5","title":"HTTP request headers","text":"<ul> <li>Content-Type: application/json, application/x-www-form-urlencoded, multipart/form-data</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/MetadataApi/#http-response-details_5","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/MetadataRequest/","title":"MetadataRequest","text":""},{"location":"api/clients/python/avis_client/MetadataRequest/#properties","title":"Properties","text":"Name Type Description Notes team int configurations List[int] [optional] var_schema int data object [optional]"},{"location":"api/clients/python/avis_client/MetadataRequest/#example","title":"Example","text":"<p><pre><code>from avis_client.models.metadata_request import MetadataRequest\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of MetadataRequest from a JSON string\nmetadata_request_instance = MetadataRequest.from_json(json)\n# print the JSON string representation of the object\nprint MetadataRequest.to_json()\n\n# convert the object into a dict\nmetadata_request_dict = metadata_request_instance.to_dict()\n# create an instance of MetadataRequest from a dict\nmetadata_request_form_dict = metadata_request.from_dict(metadata_request_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/MetadataSchema/","title":"MetadataSchema","text":""},{"location":"api/clients/python/avis_client/MetadataSchema/#properties","title":"Properties","text":"Name Type Description Notes id int [readonly] team int var_json object created_at datetime [readonly] updated_at datetime [readonly]"},{"location":"api/clients/python/avis_client/MetadataSchema/#example","title":"Example","text":"<p><pre><code>from avis_client.models.metadata_schema import MetadataSchema\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of MetadataSchema from a JSON string\nmetadata_schema_instance = MetadataSchema.from_json(json)\n# print the JSON string representation of the object\nprint MetadataSchema.to_json()\n\n# convert the object into a dict\nmetadata_schema_dict = metadata_schema_instance.to_dict()\n# create an instance of MetadataSchema from a dict\nmetadata_schema_form_dict = metadata_schema.from_dict(metadata_schema_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/MetadataSchemaApi/","title":"avis_client.MetadataSchemaApi","text":"<p>All URIs are relative to http://localhost:8000</p> Method HTTP request Description metadata_schema_create POST /api/metadata-schema/ metadata_schema_destroy DELETE /api/metadata-schema/{id}/ metadata_schema_list GET /api/metadata-schema/ metadata_schema_partial_update PATCH /api/metadata-schema/{id}/ metadata_schema_retrieve GET /api/metadata-schema/{id}/ metadata_schema_update PUT /api/metadata-schema/{id}/"},{"location":"api/clients/python/avis_client/MetadataSchemaApi/#metadata_schema_create","title":"metadata_schema_create","text":"<p>MetadataSchema metadata_schema_create(metadata_schema_request)</p> <p>A base viewset that allows reading, creating and updating objects. The following functionalities are added by the mixins:  * CreateModelMixin: allows creating objects * UpdateModelMixin: allows updating objects * DestroyModelMixin: allows deleting objects * OptimizedReadOnlyTracedViewSet: allows reading objects and adds tracing and optimized queryset fetching (with the use of the <code>fields</code> query parameter)</p>"},{"location":"api/clients/python/avis_client/MetadataSchemaApi/#example","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.metadata_schema import MetadataSchema\nfrom avis_client.models.metadata_schema_request import MetadataSchemaRequest\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.MetadataSchemaApi(api_client)\n    metadata_schema_request = avis_client.MetadataSchemaRequest() # MetadataSchemaRequest | \n\n    try:\n        api_response = api_instance.metadata_schema_create(metadata_schema_request)\n        print(\"The response of MetadataSchemaApi-&gt;metadata_schema_create:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling MetadataSchemaApi-&gt;metadata_schema_create: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/MetadataSchemaApi/#parameters","title":"Parameters","text":"Name Type Description Notes metadata_schema_request MetadataSchemaRequest"},{"location":"api/clients/python/avis_client/MetadataSchemaApi/#return-type","title":"Return type","text":"<p>MetadataSchema</p>"},{"location":"api/clients/python/avis_client/MetadataSchemaApi/#authorization","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/MetadataSchemaApi/#http-request-headers","title":"HTTP request headers","text":"<ul> <li>Content-Type: application/json, application/x-www-form-urlencoded, multipart/form-data</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/MetadataSchemaApi/#http-response-details","title":"HTTP response details","text":"Status code Description Response headers 201 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/MetadataSchemaApi/#metadata_schema_destroy","title":"metadata_schema_destroy","text":"<p>metadata_schema_destroy(id)</p> <p>A base viewset that allows reading, creating and updating objects. The following functionalities are added by the mixins:  * CreateModelMixin: allows creating objects * UpdateModelMixin: allows updating objects * DestroyModelMixin: allows deleting objects * OptimizedReadOnlyTracedViewSet: allows reading objects and adds tracing and optimized queryset fetching (with the use of the <code>fields</code> query parameter)</p>"},{"location":"api/clients/python/avis_client/MetadataSchemaApi/#example_1","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.MetadataSchemaApi(api_client)\n    id = 56 # int | A unique integer value identifying this metadata schema.\n\n    try:\n        api_instance.metadata_schema_destroy(id)\n    except Exception as e:\n        print(\"Exception when calling MetadataSchemaApi-&gt;metadata_schema_destroy: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/MetadataSchemaApi/#parameters_1","title":"Parameters","text":"Name Type Description Notes id int A unique integer value identifying this metadata schema."},{"location":"api/clients/python/avis_client/MetadataSchemaApi/#return-type_1","title":"Return type","text":"<p>void (empty response body)</p>"},{"location":"api/clients/python/avis_client/MetadataSchemaApi/#authorization_1","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/MetadataSchemaApi/#http-request-headers_1","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: Not defined</li> </ul>"},{"location":"api/clients/python/avis_client/MetadataSchemaApi/#http-response-details_1","title":"HTTP response details","text":"Status code Description Response headers 204 No response body - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/MetadataSchemaApi/#metadata_schema_list","title":"metadata_schema_list","text":"<p>PaginatedMetadataSchemaList metadata_schema_list(fields=fields, id=id, ordering=ordering, page=page, page_size=page_size)</p> <p>A base viewset that allows reading, creating and updating objects. The following functionalities are added by the mixins:  * CreateModelMixin: allows creating objects * UpdateModelMixin: allows updating objects * DestroyModelMixin: allows deleting objects * OptimizedReadOnlyTracedViewSet: allows reading objects and adds tracing and optimized queryset fetching (with the use of the <code>fields</code> query parameter)</p>"},{"location":"api/clients/python/avis_client/MetadataSchemaApi/#example_2","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.paginated_metadata_schema_list import PaginatedMetadataSchemaList\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.MetadataSchemaApi(api_client)\n    fields = 'fields_example' # str |  (optional)\n    id = [56] # List[int] | Multiple values may be separated by commas. (optional)\n    ordering = 'ordering_example' # str | Which field to use when ordering the results. (optional)\n    page = 56 # int | A page number within the paginated result set. (optional)\n    page_size = 56 # int | Number of results to return per page. (optional)\n\n    try:\n        api_response = api_instance.metadata_schema_list(fields=fields, id=id, ordering=ordering, page=page, page_size=page_size)\n        print(\"The response of MetadataSchemaApi-&gt;metadata_schema_list:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling MetadataSchemaApi-&gt;metadata_schema_list: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/MetadataSchemaApi/#parameters_2","title":"Parameters","text":"Name Type Description Notes fields str [optional] id List[int] Multiple values may be separated by commas. [optional] ordering str Which field to use when ordering the results. [optional] page int A page number within the paginated result set. [optional] page_size int Number of results to return per page. [optional]"},{"location":"api/clients/python/avis_client/MetadataSchemaApi/#return-type_2","title":"Return type","text":"<p>PaginatedMetadataSchemaList</p>"},{"location":"api/clients/python/avis_client/MetadataSchemaApi/#authorization_2","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/MetadataSchemaApi/#http-request-headers_2","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/MetadataSchemaApi/#http-response-details_2","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/MetadataSchemaApi/#metadata_schema_partial_update","title":"metadata_schema_partial_update","text":"<p>MetadataSchema metadata_schema_partial_update(id, patched_metadata_schema_request=patched_metadata_schema_request)</p> <p>A base viewset that allows reading, creating and updating objects. The following functionalities are added by the mixins:  * CreateModelMixin: allows creating objects * UpdateModelMixin: allows updating objects * DestroyModelMixin: allows deleting objects * OptimizedReadOnlyTracedViewSet: allows reading objects and adds tracing and optimized queryset fetching (with the use of the <code>fields</code> query parameter)</p>"},{"location":"api/clients/python/avis_client/MetadataSchemaApi/#example_3","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.metadata_schema import MetadataSchema\nfrom avis_client.models.patched_metadata_schema_request import PatchedMetadataSchemaRequest\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.MetadataSchemaApi(api_client)\n    id = 56 # int | A unique integer value identifying this metadata schema.\n    patched_metadata_schema_request = avis_client.PatchedMetadataSchemaRequest() # PatchedMetadataSchemaRequest |  (optional)\n\n    try:\n        api_response = api_instance.metadata_schema_partial_update(id, patched_metadata_schema_request=patched_metadata_schema_request)\n        print(\"The response of MetadataSchemaApi-&gt;metadata_schema_partial_update:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling MetadataSchemaApi-&gt;metadata_schema_partial_update: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/MetadataSchemaApi/#parameters_3","title":"Parameters","text":"Name Type Description Notes id int A unique integer value identifying this metadata schema. patched_metadata_schema_request PatchedMetadataSchemaRequest [optional]"},{"location":"api/clients/python/avis_client/MetadataSchemaApi/#return-type_3","title":"Return type","text":"<p>MetadataSchema</p>"},{"location":"api/clients/python/avis_client/MetadataSchemaApi/#authorization_3","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/MetadataSchemaApi/#http-request-headers_3","title":"HTTP request headers","text":"<ul> <li>Content-Type: application/json, application/x-www-form-urlencoded, multipart/form-data</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/MetadataSchemaApi/#http-response-details_3","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/MetadataSchemaApi/#metadata_schema_retrieve","title":"metadata_schema_retrieve","text":"<p>MetadataSchema metadata_schema_retrieve(id, fields=fields)</p> <p>A base viewset that allows reading, creating and updating objects. The following functionalities are added by the mixins:  * CreateModelMixin: allows creating objects * UpdateModelMixin: allows updating objects * DestroyModelMixin: allows deleting objects * OptimizedReadOnlyTracedViewSet: allows reading objects and adds tracing and optimized queryset fetching (with the use of the <code>fields</code> query parameter)</p>"},{"location":"api/clients/python/avis_client/MetadataSchemaApi/#example_4","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.metadata_schema import MetadataSchema\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.MetadataSchemaApi(api_client)\n    id = 56 # int | A unique integer value identifying this metadata schema.\n    fields = 'fields_example' # str |  (optional)\n\n    try:\n        api_response = api_instance.metadata_schema_retrieve(id, fields=fields)\n        print(\"The response of MetadataSchemaApi-&gt;metadata_schema_retrieve:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling MetadataSchemaApi-&gt;metadata_schema_retrieve: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/MetadataSchemaApi/#parameters_4","title":"Parameters","text":"Name Type Description Notes id int A unique integer value identifying this metadata schema. fields str [optional]"},{"location":"api/clients/python/avis_client/MetadataSchemaApi/#return-type_4","title":"Return type","text":"<p>MetadataSchema</p>"},{"location":"api/clients/python/avis_client/MetadataSchemaApi/#authorization_4","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/MetadataSchemaApi/#http-request-headers_4","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/MetadataSchemaApi/#http-response-details_4","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/MetadataSchemaApi/#metadata_schema_update","title":"metadata_schema_update","text":"<p>MetadataSchema metadata_schema_update(id, metadata_schema_request)</p> <p>A base viewset that allows reading, creating and updating objects. The following functionalities are added by the mixins:  * CreateModelMixin: allows creating objects * UpdateModelMixin: allows updating objects * DestroyModelMixin: allows deleting objects * OptimizedReadOnlyTracedViewSet: allows reading objects and adds tracing and optimized queryset fetching (with the use of the <code>fields</code> query parameter)</p>"},{"location":"api/clients/python/avis_client/MetadataSchemaApi/#example_5","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.metadata_schema import MetadataSchema\nfrom avis_client.models.metadata_schema_request import MetadataSchemaRequest\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.MetadataSchemaApi(api_client)\n    id = 56 # int | A unique integer value identifying this metadata schema.\n    metadata_schema_request = avis_client.MetadataSchemaRequest() # MetadataSchemaRequest | \n\n    try:\n        api_response = api_instance.metadata_schema_update(id, metadata_schema_request)\n        print(\"The response of MetadataSchemaApi-&gt;metadata_schema_update:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling MetadataSchemaApi-&gt;metadata_schema_update: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/MetadataSchemaApi/#parameters_5","title":"Parameters","text":"Name Type Description Notes id int A unique integer value identifying this metadata schema. metadata_schema_request MetadataSchemaRequest"},{"location":"api/clients/python/avis_client/MetadataSchemaApi/#return-type_5","title":"Return type","text":"<p>MetadataSchema</p>"},{"location":"api/clients/python/avis_client/MetadataSchemaApi/#authorization_5","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/MetadataSchemaApi/#http-request-headers_5","title":"HTTP request headers","text":"<ul> <li>Content-Type: application/json, application/x-www-form-urlencoded, multipart/form-data</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/MetadataSchemaApi/#http-response-details_5","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/MetadataSchemaRequest/","title":"MetadataSchemaRequest","text":""},{"location":"api/clients/python/avis_client/MetadataSchemaRequest/#properties","title":"Properties","text":"Name Type Description Notes team int var_json object"},{"location":"api/clients/python/avis_client/MetadataSchemaRequest/#example","title":"Example","text":"<p><pre><code>from avis_client.models.metadata_schema_request import MetadataSchemaRequest\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of MetadataSchemaRequest from a JSON string\nmetadata_schema_request_instance = MetadataSchemaRequest.from_json(json)\n# print the JSON string representation of the object\nprint MetadataSchemaRequest.to_json()\n\n# convert the object into a dict\nmetadata_schema_request_dict = metadata_schema_request_instance.to_dict()\n# create an instance of MetadataSchemaRequest from a dict\nmetadata_schema_request_form_dict = metadata_schema_request.from_dict(metadata_schema_request_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/MlApi/","title":"avis_client.MlApi","text":"<p>All URIs are relative to http://localhost:8000</p> Method HTTP request Description ml_model_create POST /api/ml/model/ ml_model_destroy DELETE /api/ml/model/{id}/ ml_model_inference POST /api/ml/model/{id}/infer/ ml_model_list GET /api/ml/model/ ml_model_partial_update PATCH /api/ml/model/{id}/ ml_model_retrieve GET /api/ml/model/{id}/ ml_model_type_create POST /api/ml/model-type/ ml_model_type_destroy DELETE /api/ml/model-type/{id}/ ml_model_type_list GET /api/ml/model-type/ ml_model_type_partial_update PATCH /api/ml/model-type/{id}/ ml_model_type_retrieve GET /api/ml/model-type/{id}/ ml_model_type_update PUT /api/ml/model-type/{id}/ ml_model_update PUT /api/ml/model/{id}/"},{"location":"api/clients/python/avis_client/MlApi/#ml_model_create","title":"ml_model_create","text":"<p>MLModel ml_model_create(ml_model_request)</p> <p>A viewset for ML models. It filters results based on the permissions granted to all the user's team(s).  A user will only be able to interact with an ML models if at least one of the teams they are a member of has access to it.</p>"},{"location":"api/clients/python/avis_client/MlApi/#example","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.ml_model import MLModel\nfrom avis_client.models.ml_model_request import MLModelRequest\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.MlApi(api_client)\n    ml_model_request = avis_client.MLModelRequest() # MLModelRequest | \n\n    try:\n        api_response = api_instance.ml_model_create(ml_model_request)\n        print(\"The response of MlApi-&gt;ml_model_create:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling MlApi-&gt;ml_model_create: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/MlApi/#parameters","title":"Parameters","text":"Name Type Description Notes ml_model_request MLModelRequest"},{"location":"api/clients/python/avis_client/MlApi/#return-type","title":"Return type","text":"<p>MLModel</p>"},{"location":"api/clients/python/avis_client/MlApi/#authorization","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/MlApi/#http-request-headers","title":"HTTP request headers","text":"<ul> <li>Content-Type: application/json, application/x-www-form-urlencoded, multipart/form-data</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/MlApi/#http-response-details","title":"HTTP response details","text":"Status code Description Response headers 201 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/MlApi/#ml_model_destroy","title":"ml_model_destroy","text":"<p>ml_model_destroy(id)</p> <p>A viewset for ML models. It filters results based on the permissions granted to all the user's team(s).  A user will only be able to interact with an ML models if at least one of the teams they are a member of has access to it.</p>"},{"location":"api/clients/python/avis_client/MlApi/#example_1","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.MlApi(api_client)\n    id = 56 # int | A unique integer value identifying this ml model.\n\n    try:\n        api_instance.ml_model_destroy(id)\n    except Exception as e:\n        print(\"Exception when calling MlApi-&gt;ml_model_destroy: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/MlApi/#parameters_1","title":"Parameters","text":"Name Type Description Notes id int A unique integer value identifying this ml model."},{"location":"api/clients/python/avis_client/MlApi/#return-type_1","title":"Return type","text":"<p>void (empty response body)</p>"},{"location":"api/clients/python/avis_client/MlApi/#authorization_1","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/MlApi/#http-request-headers_1","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: Not defined</li> </ul>"},{"location":"api/clients/python/avis_client/MlApi/#http-response-details_1","title":"HTTP response details","text":"Status code Description Response headers 204 No response body - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/MlApi/#ml_model_inference","title":"ml_model_inference","text":"<p>MLModel ml_model_inference(id, azure_ml_inference_request)</p> <p>Infer a result from the model. This is a passthrough to the model's inference endpoint running somewhere else. The request body is passed through to the model.</p>"},{"location":"api/clients/python/avis_client/MlApi/#example_2","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.azure_ml_inference_request import AzureMLInferenceRequest\nfrom avis_client.models.ml_model import MLModel\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.MlApi(api_client)\n    id = 56 # int | A unique integer value identifying this ml model.\n    azure_ml_inference_request = avis_client.AzureMLInferenceRequest() # AzureMLInferenceRequest | \n\n    try:\n        api_response = api_instance.ml_model_inference(id, azure_ml_inference_request)\n        print(\"The response of MlApi-&gt;ml_model_inference:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling MlApi-&gt;ml_model_inference: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/MlApi/#parameters_2","title":"Parameters","text":"Name Type Description Notes id int A unique integer value identifying this ml model. azure_ml_inference_request AzureMLInferenceRequest"},{"location":"api/clients/python/avis_client/MlApi/#return-type_2","title":"Return type","text":"<p>MLModel</p>"},{"location":"api/clients/python/avis_client/MlApi/#authorization_2","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/MlApi/#http-request-headers_2","title":"HTTP request headers","text":"<ul> <li>Content-Type: application/json, application/x-www-form-urlencoded, multipart/form-data</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/MlApi/#http-response-details_2","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/MlApi/#ml_model_list","title":"ml_model_list","text":"<p>PaginatedMLModelList ml_model_list(page=page, page_size=page_size)</p> <p>A viewset for ML models. It filters results based on the permissions granted to all the user's team(s).  A user will only be able to interact with an ML models if at least one of the teams they are a member of has access to it.</p>"},{"location":"api/clients/python/avis_client/MlApi/#example_3","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.paginated_ml_model_list import PaginatedMLModelList\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.MlApi(api_client)\n    page = 56 # int | A page number within the paginated result set. (optional)\n    page_size = 56 # int | Number of results to return per page. (optional)\n\n    try:\n        api_response = api_instance.ml_model_list(page=page, page_size=page_size)\n        print(\"The response of MlApi-&gt;ml_model_list:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling MlApi-&gt;ml_model_list: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/MlApi/#parameters_3","title":"Parameters","text":"Name Type Description Notes page int A page number within the paginated result set. [optional] page_size int Number of results to return per page. [optional]"},{"location":"api/clients/python/avis_client/MlApi/#return-type_3","title":"Return type","text":"<p>PaginatedMLModelList</p>"},{"location":"api/clients/python/avis_client/MlApi/#authorization_3","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/MlApi/#http-request-headers_3","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/MlApi/#http-response-details_3","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/MlApi/#ml_model_partial_update","title":"ml_model_partial_update","text":"<p>MLModel ml_model_partial_update(id, patched_ml_model_request=patched_ml_model_request)</p> <p>A viewset for ML models. It filters results based on the permissions granted to all the user's team(s).  A user will only be able to interact with an ML models if at least one of the teams they are a member of has access to it.</p>"},{"location":"api/clients/python/avis_client/MlApi/#example_4","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.ml_model import MLModel\nfrom avis_client.models.patched_ml_model_request import PatchedMLModelRequest\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.MlApi(api_client)\n    id = 56 # int | A unique integer value identifying this ml model.\n    patched_ml_model_request = avis_client.PatchedMLModelRequest() # PatchedMLModelRequest |  (optional)\n\n    try:\n        api_response = api_instance.ml_model_partial_update(id, patched_ml_model_request=patched_ml_model_request)\n        print(\"The response of MlApi-&gt;ml_model_partial_update:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling MlApi-&gt;ml_model_partial_update: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/MlApi/#parameters_4","title":"Parameters","text":"Name Type Description Notes id int A unique integer value identifying this ml model. patched_ml_model_request PatchedMLModelRequest [optional]"},{"location":"api/clients/python/avis_client/MlApi/#return-type_4","title":"Return type","text":"<p>MLModel</p>"},{"location":"api/clients/python/avis_client/MlApi/#authorization_4","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/MlApi/#http-request-headers_4","title":"HTTP request headers","text":"<ul> <li>Content-Type: application/json, application/x-www-form-urlencoded, multipart/form-data</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/MlApi/#http-response-details_4","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/MlApi/#ml_model_retrieve","title":"ml_model_retrieve","text":"<p>MLModel ml_model_retrieve(id)</p> <p>A viewset for ML models. It filters results based on the permissions granted to all the user's team(s).  A user will only be able to interact with an ML models if at least one of the teams they are a member of has access to it.</p>"},{"location":"api/clients/python/avis_client/MlApi/#example_5","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.ml_model import MLModel\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.MlApi(api_client)\n    id = 56 # int | A unique integer value identifying this ml model.\n\n    try:\n        api_response = api_instance.ml_model_retrieve(id)\n        print(\"The response of MlApi-&gt;ml_model_retrieve:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling MlApi-&gt;ml_model_retrieve: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/MlApi/#parameters_5","title":"Parameters","text":"Name Type Description Notes id int A unique integer value identifying this ml model."},{"location":"api/clients/python/avis_client/MlApi/#return-type_5","title":"Return type","text":"<p>MLModel</p>"},{"location":"api/clients/python/avis_client/MlApi/#authorization_5","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/MlApi/#http-request-headers_5","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/MlApi/#http-response-details_5","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/MlApi/#ml_model_type_create","title":"ml_model_type_create","text":"<p>MLModelType ml_model_type_create(ml_model_type_request=ml_model_type_request)</p>"},{"location":"api/clients/python/avis_client/MlApi/#example_6","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.ml_model_type import MLModelType\nfrom avis_client.models.ml_model_type_request import MLModelTypeRequest\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.MlApi(api_client)\n    ml_model_type_request = avis_client.MLModelTypeRequest() # MLModelTypeRequest |  (optional)\n\n    try:\n        api_response = api_instance.ml_model_type_create(ml_model_type_request=ml_model_type_request)\n        print(\"The response of MlApi-&gt;ml_model_type_create:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling MlApi-&gt;ml_model_type_create: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/MlApi/#parameters_6","title":"Parameters","text":"Name Type Description Notes ml_model_type_request MLModelTypeRequest [optional]"},{"location":"api/clients/python/avis_client/MlApi/#return-type_6","title":"Return type","text":"<p>MLModelType</p>"},{"location":"api/clients/python/avis_client/MlApi/#authorization_6","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/MlApi/#http-request-headers_6","title":"HTTP request headers","text":"<ul> <li>Content-Type: application/json, application/x-www-form-urlencoded, multipart/form-data</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/MlApi/#http-response-details_6","title":"HTTP response details","text":"Status code Description Response headers 201 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/MlApi/#ml_model_type_destroy","title":"ml_model_type_destroy","text":"<p>ml_model_type_destroy(id)</p>"},{"location":"api/clients/python/avis_client/MlApi/#example_7","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.MlApi(api_client)\n    id = 56 # int | A unique integer value identifying this ml model type.\n\n    try:\n        api_instance.ml_model_type_destroy(id)\n    except Exception as e:\n        print(\"Exception when calling MlApi-&gt;ml_model_type_destroy: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/MlApi/#parameters_7","title":"Parameters","text":"Name Type Description Notes id int A unique integer value identifying this ml model type."},{"location":"api/clients/python/avis_client/MlApi/#return-type_7","title":"Return type","text":"<p>void (empty response body)</p>"},{"location":"api/clients/python/avis_client/MlApi/#authorization_7","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/MlApi/#http-request-headers_7","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: Not defined</li> </ul>"},{"location":"api/clients/python/avis_client/MlApi/#http-response-details_7","title":"HTTP response details","text":"Status code Description Response headers 204 No response body - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/MlApi/#ml_model_type_list","title":"ml_model_type_list","text":"<p>PaginatedMLModelTypeList ml_model_type_list(page=page, page_size=page_size)</p>"},{"location":"api/clients/python/avis_client/MlApi/#example_8","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.paginated_ml_model_type_list import PaginatedMLModelTypeList\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.MlApi(api_client)\n    page = 56 # int | A page number within the paginated result set. (optional)\n    page_size = 56 # int | Number of results to return per page. (optional)\n\n    try:\n        api_response = api_instance.ml_model_type_list(page=page, page_size=page_size)\n        print(\"The response of MlApi-&gt;ml_model_type_list:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling MlApi-&gt;ml_model_type_list: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/MlApi/#parameters_8","title":"Parameters","text":"Name Type Description Notes page int A page number within the paginated result set. [optional] page_size int Number of results to return per page. [optional]"},{"location":"api/clients/python/avis_client/MlApi/#return-type_8","title":"Return type","text":"<p>PaginatedMLModelTypeList</p>"},{"location":"api/clients/python/avis_client/MlApi/#authorization_8","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/MlApi/#http-request-headers_8","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/MlApi/#http-response-details_8","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/MlApi/#ml_model_type_partial_update","title":"ml_model_type_partial_update","text":"<p>MLModelType ml_model_type_partial_update(id, patched_ml_model_type_request=patched_ml_model_type_request)</p>"},{"location":"api/clients/python/avis_client/MlApi/#example_9","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.ml_model_type import MLModelType\nfrom avis_client.models.patched_ml_model_type_request import PatchedMLModelTypeRequest\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.MlApi(api_client)\n    id = 56 # int | A unique integer value identifying this ml model type.\n    patched_ml_model_type_request = avis_client.PatchedMLModelTypeRequest() # PatchedMLModelTypeRequest |  (optional)\n\n    try:\n        api_response = api_instance.ml_model_type_partial_update(id, patched_ml_model_type_request=patched_ml_model_type_request)\n        print(\"The response of MlApi-&gt;ml_model_type_partial_update:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling MlApi-&gt;ml_model_type_partial_update: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/MlApi/#parameters_9","title":"Parameters","text":"Name Type Description Notes id int A unique integer value identifying this ml model type. patched_ml_model_type_request PatchedMLModelTypeRequest [optional]"},{"location":"api/clients/python/avis_client/MlApi/#return-type_9","title":"Return type","text":"<p>MLModelType</p>"},{"location":"api/clients/python/avis_client/MlApi/#authorization_9","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/MlApi/#http-request-headers_9","title":"HTTP request headers","text":"<ul> <li>Content-Type: application/json, application/x-www-form-urlencoded, multipart/form-data</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/MlApi/#http-response-details_9","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/MlApi/#ml_model_type_retrieve","title":"ml_model_type_retrieve","text":"<p>MLModelType ml_model_type_retrieve(id)</p>"},{"location":"api/clients/python/avis_client/MlApi/#example_10","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.ml_model_type import MLModelType\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.MlApi(api_client)\n    id = 56 # int | A unique integer value identifying this ml model type.\n\n    try:\n        api_response = api_instance.ml_model_type_retrieve(id)\n        print(\"The response of MlApi-&gt;ml_model_type_retrieve:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling MlApi-&gt;ml_model_type_retrieve: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/MlApi/#parameters_10","title":"Parameters","text":"Name Type Description Notes id int A unique integer value identifying this ml model type."},{"location":"api/clients/python/avis_client/MlApi/#return-type_10","title":"Return type","text":"<p>MLModelType</p>"},{"location":"api/clients/python/avis_client/MlApi/#authorization_10","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/MlApi/#http-request-headers_10","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/MlApi/#http-response-details_10","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/MlApi/#ml_model_type_update","title":"ml_model_type_update","text":"<p>MLModelType ml_model_type_update(id, ml_model_type_request=ml_model_type_request)</p>"},{"location":"api/clients/python/avis_client/MlApi/#example_11","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.ml_model_type import MLModelType\nfrom avis_client.models.ml_model_type_request import MLModelTypeRequest\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.MlApi(api_client)\n    id = 56 # int | A unique integer value identifying this ml model type.\n    ml_model_type_request = avis_client.MLModelTypeRequest() # MLModelTypeRequest |  (optional)\n\n    try:\n        api_response = api_instance.ml_model_type_update(id, ml_model_type_request=ml_model_type_request)\n        print(\"The response of MlApi-&gt;ml_model_type_update:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling MlApi-&gt;ml_model_type_update: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/MlApi/#parameters_11","title":"Parameters","text":"Name Type Description Notes id int A unique integer value identifying this ml model type. ml_model_type_request MLModelTypeRequest [optional]"},{"location":"api/clients/python/avis_client/MlApi/#return-type_11","title":"Return type","text":"<p>MLModelType</p>"},{"location":"api/clients/python/avis_client/MlApi/#authorization_11","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/MlApi/#http-request-headers_11","title":"HTTP request headers","text":"<ul> <li>Content-Type: application/json, application/x-www-form-urlencoded, multipart/form-data</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/MlApi/#http-response-details_11","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/MlApi/#ml_model_update","title":"ml_model_update","text":"<p>MLModel ml_model_update(id, ml_model_request)</p> <p>A viewset for ML models. It filters results based on the permissions granted to all the user's team(s).  A user will only be able to interact with an ML models if at least one of the teams they are a member of has access to it.</p>"},{"location":"api/clients/python/avis_client/MlApi/#example_12","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.ml_model import MLModel\nfrom avis_client.models.ml_model_request import MLModelRequest\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.MlApi(api_client)\n    id = 56 # int | A unique integer value identifying this ml model.\n    ml_model_request = avis_client.MLModelRequest() # MLModelRequest | \n\n    try:\n        api_response = api_instance.ml_model_update(id, ml_model_request)\n        print(\"The response of MlApi-&gt;ml_model_update:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling MlApi-&gt;ml_model_update: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/MlApi/#parameters_12","title":"Parameters","text":"Name Type Description Notes id int A unique integer value identifying this ml model. ml_model_request MLModelRequest"},{"location":"api/clients/python/avis_client/MlApi/#return-type_12","title":"Return type","text":"<p>MLModel</p>"},{"location":"api/clients/python/avis_client/MlApi/#authorization_12","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/MlApi/#http-request-headers_12","title":"HTTP request headers","text":"<ul> <li>Content-Type: application/json, application/x-www-form-urlencoded, multipart/form-data</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/MlApi/#http-response-details_12","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/PaginatedConfigurationStatisticsList/","title":"PaginatedConfigurationStatisticsList","text":""},{"location":"api/clients/python/avis_client/PaginatedConfigurationStatisticsList/#properties","title":"Properties","text":"Name Type Description Notes count int next str [optional] previous str [optional] results List[ConfigurationStatistics]"},{"location":"api/clients/python/avis_client/PaginatedConfigurationStatisticsList/#example","title":"Example","text":"<p><pre><code>from avis_client.models.paginated_configuration_statistics_list import PaginatedConfigurationStatisticsList\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of PaginatedConfigurationStatisticsList from a JSON string\npaginated_configuration_statistics_list_instance = PaginatedConfigurationStatisticsList.from_json(json)\n# print the JSON string representation of the object\nprint PaginatedConfigurationStatisticsList.to_json()\n\n# convert the object into a dict\npaginated_configuration_statistics_list_dict = paginated_configuration_statistics_list_instance.to_dict()\n# create an instance of PaginatedConfigurationStatisticsList from a dict\npaginated_configuration_statistics_list_form_dict = paginated_configuration_statistics_list.from_dict(paginated_configuration_statistics_list_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/PaginatedConfigurationTypeList/","title":"PaginatedConfigurationTypeList","text":""},{"location":"api/clients/python/avis_client/PaginatedConfigurationTypeList/#properties","title":"Properties","text":"Name Type Description Notes count int next str [optional] previous str [optional] results List[ConfigurationType]"},{"location":"api/clients/python/avis_client/PaginatedConfigurationTypeList/#example","title":"Example","text":"<p><pre><code>from avis_client.models.paginated_configuration_type_list import PaginatedConfigurationTypeList\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of PaginatedConfigurationTypeList from a JSON string\npaginated_configuration_type_list_instance = PaginatedConfigurationTypeList.from_json(json)\n# print the JSON string representation of the object\nprint PaginatedConfigurationTypeList.to_json()\n\n# convert the object into a dict\npaginated_configuration_type_list_dict = paginated_configuration_type_list_instance.to_dict()\n# create an instance of PaginatedConfigurationTypeList from a dict\npaginated_configuration_type_list_form_dict = paginated_configuration_type_list.from_dict(paginated_configuration_type_list_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/PaginatedImageAttributeCategoryList/","title":"PaginatedImageAttributeCategoryList","text":""},{"location":"api/clients/python/avis_client/PaginatedImageAttributeCategoryList/#properties","title":"Properties","text":"Name Type Description Notes count int next str [optional] previous str [optional] results List[ImageAttributeCategory]"},{"location":"api/clients/python/avis_client/PaginatedImageAttributeCategoryList/#example","title":"Example","text":"<p><pre><code>from avis_client.models.paginated_image_attribute_category_list import PaginatedImageAttributeCategoryList\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of PaginatedImageAttributeCategoryList from a JSON string\npaginated_image_attribute_category_list_instance = PaginatedImageAttributeCategoryList.from_json(json)\n# print the JSON string representation of the object\nprint PaginatedImageAttributeCategoryList.to_json()\n\n# convert the object into a dict\npaginated_image_attribute_category_list_dict = paginated_image_attribute_category_list_instance.to_dict()\n# create an instance of PaginatedImageAttributeCategoryList from a dict\npaginated_image_attribute_category_list_form_dict = paginated_image_attribute_category_list.from_dict(paginated_image_attribute_category_list_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/PaginatedImageAttributeList/","title":"PaginatedImageAttributeList","text":""},{"location":"api/clients/python/avis_client/PaginatedImageAttributeList/#properties","title":"Properties","text":"Name Type Description Notes count int next str [optional] previous str [optional] results List[ImageAttribute]"},{"location":"api/clients/python/avis_client/PaginatedImageAttributeList/#example","title":"Example","text":"<p><pre><code>from avis_client.models.paginated_image_attribute_list import PaginatedImageAttributeList\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of PaginatedImageAttributeList from a JSON string\npaginated_image_attribute_list_instance = PaginatedImageAttributeList.from_json(json)\n# print the JSON string representation of the object\nprint PaginatedImageAttributeList.to_json()\n\n# convert the object into a dict\npaginated_image_attribute_list_dict = paginated_image_attribute_list_instance.to_dict()\n# create an instance of PaginatedImageAttributeList from a dict\npaginated_image_attribute_list_form_dict = paginated_image_attribute_list.from_dict(paginated_image_attribute_list_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/PaginatedImageList/","title":"PaginatedImageList","text":""},{"location":"api/clients/python/avis_client/PaginatedImageList/#properties","title":"Properties","text":"Name Type Description Notes count int next str [optional] previous str [optional] results List[Image]"},{"location":"api/clients/python/avis_client/PaginatedImageList/#example","title":"Example","text":"<p><pre><code>from avis_client.models.paginated_image_list import PaginatedImageList\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of PaginatedImageList from a JSON string\npaginated_image_list_instance = PaginatedImageList.from_json(json)\n# print the JSON string representation of the object\nprint PaginatedImageList.to_json()\n\n# convert the object into a dict\npaginated_image_list_dict = paginated_image_list_instance.to_dict()\n# create an instance of PaginatedImageList from a dict\npaginated_image_list_form_dict = paginated_image_list.from_dict(paginated_image_list_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/PaginatedInspectionImagesStatisticsList/","title":"PaginatedInspectionImagesStatisticsList","text":""},{"location":"api/clients/python/avis_client/PaginatedInspectionImagesStatisticsList/#properties","title":"Properties","text":"Name Type Description Notes count int next str [optional] previous str [optional] results List[InspectionImagesStatistics]"},{"location":"api/clients/python/avis_client/PaginatedInspectionImagesStatisticsList/#example","title":"Example","text":"<p><pre><code>from avis_client.models.paginated_inspection_images_statistics_list import PaginatedInspectionImagesStatisticsList\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of PaginatedInspectionImagesStatisticsList from a JSON string\npaginated_inspection_images_statistics_list_instance = PaginatedInspectionImagesStatisticsList.from_json(json)\n# print the JSON string representation of the object\nprint PaginatedInspectionImagesStatisticsList.to_json()\n\n# convert the object into a dict\npaginated_inspection_images_statistics_list_dict = paginated_inspection_images_statistics_list_instance.to_dict()\n# create an instance of PaginatedInspectionImagesStatisticsList from a dict\npaginated_inspection_images_statistics_list_form_dict = paginated_inspection_images_statistics_list.from_dict(paginated_inspection_images_statistics_list_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/PaginatedInspectionList/","title":"PaginatedInspectionList","text":""},{"location":"api/clients/python/avis_client/PaginatedInspectionList/#properties","title":"Properties","text":"Name Type Description Notes count int next str [optional] previous str [optional] results List[Inspection]"},{"location":"api/clients/python/avis_client/PaginatedInspectionList/#example","title":"Example","text":"<p><pre><code>from avis_client.models.paginated_inspection_list import PaginatedInspectionList\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of PaginatedInspectionList from a JSON string\npaginated_inspection_list_instance = PaginatedInspectionList.from_json(json)\n# print the JSON string representation of the object\nprint PaginatedInspectionList.to_json()\n\n# convert the object into a dict\npaginated_inspection_list_dict = paginated_inspection_list_instance.to_dict()\n# create an instance of PaginatedInspectionList from a dict\npaginated_inspection_list_form_dict = paginated_inspection_list.from_dict(paginated_inspection_list_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/PaginatedInspectionStatisticsList/","title":"PaginatedInspectionStatisticsList","text":""},{"location":"api/clients/python/avis_client/PaginatedInspectionStatisticsList/#properties","title":"Properties","text":"Name Type Description Notes count int next str [optional] previous str [optional] results List[InspectionStatistics]"},{"location":"api/clients/python/avis_client/PaginatedInspectionStatisticsList/#example","title":"Example","text":"<p><pre><code>from avis_client.models.paginated_inspection_statistics_list import PaginatedInspectionStatisticsList\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of PaginatedInspectionStatisticsList from a JSON string\npaginated_inspection_statistics_list_instance = PaginatedInspectionStatisticsList.from_json(json)\n# print the JSON string representation of the object\nprint PaginatedInspectionStatisticsList.to_json()\n\n# convert the object into a dict\npaginated_inspection_statistics_list_dict = paginated_inspection_statistics_list_instance.to_dict()\n# create an instance of PaginatedInspectionStatisticsList from a dict\npaginated_inspection_statistics_list_form_dict = paginated_inspection_statistics_list.from_dict(paginated_inspection_statistics_list_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/PaginatedInspectionValidationStatusList/","title":"PaginatedInspectionValidationStatusList","text":""},{"location":"api/clients/python/avis_client/PaginatedInspectionValidationStatusList/#properties","title":"Properties","text":"Name Type Description Notes count int next str [optional] previous str [optional] results List[InspectionValidationStatus]"},{"location":"api/clients/python/avis_client/PaginatedInspectionValidationStatusList/#example","title":"Example","text":"<p><pre><code>from avis_client.models.paginated_inspection_validation_status_list import PaginatedInspectionValidationStatusList\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of PaginatedInspectionValidationStatusList from a JSON string\npaginated_inspection_validation_status_list_instance = PaginatedInspectionValidationStatusList.from_json(json)\n# print the JSON string representation of the object\nprint PaginatedInspectionValidationStatusList.to_json()\n\n# convert the object into a dict\npaginated_inspection_validation_status_list_dict = paginated_inspection_validation_status_list_instance.to_dict()\n# create an instance of PaginatedInspectionValidationStatusList from a dict\npaginated_inspection_validation_status_list_form_dict = paginated_inspection_validation_status_list.from_dict(paginated_inspection_validation_status_list_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/PaginatedMLModelList/","title":"PaginatedMLModelList","text":""},{"location":"api/clients/python/avis_client/PaginatedMLModelList/#properties","title":"Properties","text":"Name Type Description Notes count int next str [optional] previous str [optional] results List[MLModel]"},{"location":"api/clients/python/avis_client/PaginatedMLModelList/#example","title":"Example","text":"<p><pre><code>from avis_client.models.paginated_ml_model_list import PaginatedMLModelList\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of PaginatedMLModelList from a JSON string\npaginated_ml_model_list_instance = PaginatedMLModelList.from_json(json)\n# print the JSON string representation of the object\nprint PaginatedMLModelList.to_json()\n\n# convert the object into a dict\npaginated_ml_model_list_dict = paginated_ml_model_list_instance.to_dict()\n# create an instance of PaginatedMLModelList from a dict\npaginated_ml_model_list_form_dict = paginated_ml_model_list.from_dict(paginated_ml_model_list_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/PaginatedMLModelTypeList/","title":"PaginatedMLModelTypeList","text":""},{"location":"api/clients/python/avis_client/PaginatedMLModelTypeList/#properties","title":"Properties","text":"Name Type Description Notes count int next str [optional] previous str [optional] results List[MLModelType]"},{"location":"api/clients/python/avis_client/PaginatedMLModelTypeList/#example","title":"Example","text":"<p><pre><code>from avis_client.models.paginated_ml_model_type_list import PaginatedMLModelTypeList\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of PaginatedMLModelTypeList from a JSON string\npaginated_ml_model_type_list_instance = PaginatedMLModelTypeList.from_json(json)\n# print the JSON string representation of the object\nprint PaginatedMLModelTypeList.to_json()\n\n# convert the object into a dict\npaginated_ml_model_type_list_dict = paginated_ml_model_type_list_instance.to_dict()\n# create an instance of PaginatedMLModelTypeList from a dict\npaginated_ml_model_type_list_form_dict = paginated_ml_model_type_list.from_dict(paginated_ml_model_type_list_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/PaginatedMembershipList/","title":"PaginatedMembershipList","text":""},{"location":"api/clients/python/avis_client/PaginatedMembershipList/#properties","title":"Properties","text":"Name Type Description Notes count int next str [optional] previous str [optional] results List[Membership]"},{"location":"api/clients/python/avis_client/PaginatedMembershipList/#example","title":"Example","text":"<p><pre><code>from avis_client.models.paginated_membership_list import PaginatedMembershipList\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of PaginatedMembershipList from a JSON string\npaginated_membership_list_instance = PaginatedMembershipList.from_json(json)\n# print the JSON string representation of the object\nprint PaginatedMembershipList.to_json()\n\n# convert the object into a dict\npaginated_membership_list_dict = paginated_membership_list_instance.to_dict()\n# create an instance of PaginatedMembershipList from a dict\npaginated_membership_list_form_dict = paginated_membership_list.from_dict(paginated_membership_list_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/PaginatedMetadataList/","title":"PaginatedMetadataList","text":""},{"location":"api/clients/python/avis_client/PaginatedMetadataList/#properties","title":"Properties","text":"Name Type Description Notes count int next str [optional] previous str [optional] results List[Metadata]"},{"location":"api/clients/python/avis_client/PaginatedMetadataList/#example","title":"Example","text":"<p><pre><code>from avis_client.models.paginated_metadata_list import PaginatedMetadataList\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of PaginatedMetadataList from a JSON string\npaginated_metadata_list_instance = PaginatedMetadataList.from_json(json)\n# print the JSON string representation of the object\nprint PaginatedMetadataList.to_json()\n\n# convert the object into a dict\npaginated_metadata_list_dict = paginated_metadata_list_instance.to_dict()\n# create an instance of PaginatedMetadataList from a dict\npaginated_metadata_list_form_dict = paginated_metadata_list.from_dict(paginated_metadata_list_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/PaginatedMetadataSchemaList/","title":"PaginatedMetadataSchemaList","text":""},{"location":"api/clients/python/avis_client/PaginatedMetadataSchemaList/#properties","title":"Properties","text":"Name Type Description Notes count int next str [optional] previous str [optional] results List[MetadataSchema]"},{"location":"api/clients/python/avis_client/PaginatedMetadataSchemaList/#example","title":"Example","text":"<p><pre><code>from avis_client.models.paginated_metadata_schema_list import PaginatedMetadataSchemaList\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of PaginatedMetadataSchemaList from a JSON string\npaginated_metadata_schema_list_instance = PaginatedMetadataSchemaList.from_json(json)\n# print the JSON string representation of the object\nprint PaginatedMetadataSchemaList.to_json()\n\n# convert the object into a dict\npaginated_metadata_schema_list_dict = paginated_metadata_schema_list_instance.to_dict()\n# create an instance of PaginatedMetadataSchemaList from a dict\npaginated_metadata_schema_list_form_dict = paginated_metadata_schema_list.from_dict(paginated_metadata_schema_list_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/PaginatedProductCategoryList/","title":"PaginatedProductCategoryList","text":""},{"location":"api/clients/python/avis_client/PaginatedProductCategoryList/#properties","title":"Properties","text":"Name Type Description Notes count int next str [optional] previous str [optional] results List[ProductCategory]"},{"location":"api/clients/python/avis_client/PaginatedProductCategoryList/#example","title":"Example","text":"<p><pre><code>from avis_client.models.paginated_product_category_list import PaginatedProductCategoryList\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of PaginatedProductCategoryList from a JSON string\npaginated_product_category_list_instance = PaginatedProductCategoryList.from_json(json)\n# print the JSON string representation of the object\nprint PaginatedProductCategoryList.to_json()\n\n# convert the object into a dict\npaginated_product_category_list_dict = paginated_product_category_list_instance.to_dict()\n# create an instance of PaginatedProductCategoryList from a dict\npaginated_product_category_list_form_dict = paginated_product_category_list.from_dict(paginated_product_category_list_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/PaginatedProductList/","title":"PaginatedProductList","text":""},{"location":"api/clients/python/avis_client/PaginatedProductList/#properties","title":"Properties","text":"Name Type Description Notes count int next str [optional] previous str [optional] results List[Product]"},{"location":"api/clients/python/avis_client/PaginatedProductList/#example","title":"Example","text":"<p><pre><code>from avis_client.models.paginated_product_list import PaginatedProductList\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of PaginatedProductList from a JSON string\npaginated_product_list_instance = PaginatedProductList.from_json(json)\n# print the JSON string representation of the object\nprint PaginatedProductList.to_json()\n\n# convert the object into a dict\npaginated_product_list_dict = paginated_product_list_instance.to_dict()\n# create an instance of PaginatedProductList from a dict\npaginated_product_list_form_dict = paginated_product_list.from_dict(paginated_product_list_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/PaginatedQualityCriteriaList/","title":"PaginatedQualityCriteriaList","text":""},{"location":"api/clients/python/avis_client/PaginatedQualityCriteriaList/#properties","title":"Properties","text":"Name Type Description Notes count int next str [optional] previous str [optional] results List[QualityCriteria]"},{"location":"api/clients/python/avis_client/PaginatedQualityCriteriaList/#example","title":"Example","text":"<p><pre><code>from avis_client.models.paginated_quality_criteria_list import PaginatedQualityCriteriaList\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of PaginatedQualityCriteriaList from a JSON string\npaginated_quality_criteria_list_instance = PaginatedQualityCriteriaList.from_json(json)\n# print the JSON string representation of the object\nprint PaginatedQualityCriteriaList.to_json()\n\n# convert the object into a dict\npaginated_quality_criteria_list_dict = paginated_quality_criteria_list_instance.to_dict()\n# create an instance of PaginatedQualityCriteriaList from a dict\npaginated_quality_criteria_list_form_dict = paginated_quality_criteria_list.from_dict(paginated_quality_criteria_list_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/PaginatedQualityCriteriaResultList/","title":"PaginatedQualityCriteriaResultList","text":""},{"location":"api/clients/python/avis_client/PaginatedQualityCriteriaResultList/#properties","title":"Properties","text":"Name Type Description Notes count int next str [optional] previous str [optional] results List[QualityCriteriaResult]"},{"location":"api/clients/python/avis_client/PaginatedQualityCriteriaResultList/#example","title":"Example","text":"<p><pre><code>from avis_client.models.paginated_quality_criteria_result_list import PaginatedQualityCriteriaResultList\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of PaginatedQualityCriteriaResultList from a JSON string\npaginated_quality_criteria_result_list_instance = PaginatedQualityCriteriaResultList.from_json(json)\n# print the JSON string representation of the object\nprint PaginatedQualityCriteriaResultList.to_json()\n\n# convert the object into a dict\npaginated_quality_criteria_result_list_dict = paginated_quality_criteria_result_list_instance.to_dict()\n# create an instance of PaginatedQualityCriteriaResultList from a dict\npaginated_quality_criteria_result_list_form_dict = paginated_quality_criteria_result_list.from_dict(paginated_quality_criteria_result_list_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/PaginatedResultList/","title":"PaginatedResultList","text":""},{"location":"api/clients/python/avis_client/PaginatedResultList/#properties","title":"Properties","text":"Name Type Description Notes count int next str [optional] previous str [optional] results List[Result]"},{"location":"api/clients/python/avis_client/PaginatedResultList/#example","title":"Example","text":"<p><pre><code>from avis_client.models.paginated_result_list import PaginatedResultList\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of PaginatedResultList from a JSON string\npaginated_result_list_instance = PaginatedResultList.from_json(json)\n# print the JSON string representation of the object\nprint PaginatedResultList.to_json()\n\n# convert the object into a dict\npaginated_result_list_dict = paginated_result_list_instance.to_dict()\n# create an instance of PaginatedResultList from a dict\npaginated_result_list_form_dict = paginated_result_list.from_dict(paginated_result_list_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/PaginatedTeamList/","title":"PaginatedTeamList","text":""},{"location":"api/clients/python/avis_client/PaginatedTeamList/#properties","title":"Properties","text":"Name Type Description Notes count int next str [optional] previous str [optional] results List[Team]"},{"location":"api/clients/python/avis_client/PaginatedTeamList/#example","title":"Example","text":"<p><pre><code>from avis_client.models.paginated_team_list import PaginatedTeamList\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of PaginatedTeamList from a JSON string\npaginated_team_list_instance = PaginatedTeamList.from_json(json)\n# print the JSON string representation of the object\nprint PaginatedTeamList.to_json()\n\n# convert the object into a dict\npaginated_team_list_dict = paginated_team_list_instance.to_dict()\n# create an instance of PaginatedTeamList from a dict\npaginated_team_list_form_dict = paginated_team_list.from_dict(paginated_team_list_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/PatchedConfigurationTypeRequest/","title":"PatchedConfigurationTypeRequest","text":""},{"location":"api/clients/python/avis_client/PatchedConfigurationTypeRequest/#properties","title":"Properties","text":"Name Type Description Notes team int [optional] name str [optional] metadata_schema int [optional] quality_criteria int [optional] product_category int [optional] image_attribute_categories List[int] [optional] description str [optional] is_default bool [optional]"},{"location":"api/clients/python/avis_client/PatchedConfigurationTypeRequest/#example","title":"Example","text":"<p><pre><code>from avis_client.models.patched_configuration_type_request import PatchedConfigurationTypeRequest\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of PatchedConfigurationTypeRequest from a JSON string\npatched_configuration_type_request_instance = PatchedConfigurationTypeRequest.from_json(json)\n# print the JSON string representation of the object\nprint PatchedConfigurationTypeRequest.to_json()\n\n# convert the object into a dict\npatched_configuration_type_request_dict = patched_configuration_type_request_instance.to_dict()\n# create an instance of PatchedConfigurationTypeRequest from a dict\npatched_configuration_type_request_form_dict = patched_configuration_type_request.from_dict(patched_configuration_type_request_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/PatchedImageAttributeCategoryRequest/","title":"PatchedImageAttributeCategoryRequest","text":""},{"location":"api/clients/python/avis_client/PatchedImageAttributeCategoryRequest/#properties","title":"Properties","text":"Name Type Description Notes team int [optional] name str [optional] description str [optional] ml_model int [optional]"},{"location":"api/clients/python/avis_client/PatchedImageAttributeCategoryRequest/#example","title":"Example","text":"<p><pre><code>from avis_client.models.patched_image_attribute_category_request import PatchedImageAttributeCategoryRequest\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of PatchedImageAttributeCategoryRequest from a JSON string\npatched_image_attribute_category_request_instance = PatchedImageAttributeCategoryRequest.from_json(json)\n# print the JSON string representation of the object\nprint PatchedImageAttributeCategoryRequest.to_json()\n\n# convert the object into a dict\npatched_image_attribute_category_request_dict = patched_image_attribute_category_request_instance.to_dict()\n# create an instance of PatchedImageAttributeCategoryRequest from a dict\npatched_image_attribute_category_request_form_dict = patched_image_attribute_category_request.from_dict(patched_image_attribute_category_request_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/PatchedImageAttributeRequest/","title":"PatchedImageAttributeRequest","text":""},{"location":"api/clients/python/avis_client/PatchedImageAttributeRequest/#properties","title":"Properties","text":"Name Type Description Notes team int [optional] category int [optional] results List[int] [optional] value str [optional]"},{"location":"api/clients/python/avis_client/PatchedImageAttributeRequest/#example","title":"Example","text":"<p><pre><code>from avis_client.models.patched_image_attribute_request import PatchedImageAttributeRequest\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of PatchedImageAttributeRequest from a JSON string\npatched_image_attribute_request_instance = PatchedImageAttributeRequest.from_json(json)\n# print the JSON string representation of the object\nprint PatchedImageAttributeRequest.to_json()\n\n# convert the object into a dict\npatched_image_attribute_request_dict = patched_image_attribute_request_instance.to_dict()\n# create an instance of PatchedImageAttributeRequest from a dict\npatched_image_attribute_request_form_dict = patched_image_attribute_request.from_dict(patched_image_attribute_request_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/PatchedImageRequest/","title":"PatchedImageRequest","text":""},{"location":"api/clients/python/avis_client/PatchedImageRequest/#properties","title":"Properties","text":"Name Type Description Notes team int [optional] inspection int [optional] uploaded_by int [optional] results List[int] [optional] format FormatEnum [optional] capture_datetime datetime [optional] file bytearray [optional] part_id str [optional] validation_status ValidationStatusEnum [optional]"},{"location":"api/clients/python/avis_client/PatchedImageRequest/#example","title":"Example","text":"<p><pre><code>from avis_client.models.patched_image_request import PatchedImageRequest\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of PatchedImageRequest from a JSON string\npatched_image_request_instance = PatchedImageRequest.from_json(json)\n# print the JSON string representation of the object\nprint PatchedImageRequest.to_json()\n\n# convert the object into a dict\npatched_image_request_dict = patched_image_request_instance.to_dict()\n# create an instance of PatchedImageRequest from a dict\npatched_image_request_form_dict = patched_image_request.from_dict(patched_image_request_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/PatchedInspectionRequest/","title":"PatchedInspectionRequest","text":""},{"location":"api/clients/python/avis_client/PatchedInspectionRequest/#properties","title":"Properties","text":"Name Type Description Notes team int [optional] product int [optional] opened_by int [optional] closed_by int [optional] images List[int] [optional] close_datetime datetime [optional] configuration int [optional] metadata int [optional]"},{"location":"api/clients/python/avis_client/PatchedInspectionRequest/#example","title":"Example","text":"<p><pre><code>from avis_client.models.patched_inspection_request import PatchedInspectionRequest\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of PatchedInspectionRequest from a JSON string\npatched_inspection_request_instance = PatchedInspectionRequest.from_json(json)\n# print the JSON string representation of the object\nprint PatchedInspectionRequest.to_json()\n\n# convert the object into a dict\npatched_inspection_request_dict = patched_inspection_request_instance.to_dict()\n# create an instance of PatchedInspectionRequest from a dict\npatched_inspection_request_form_dict = patched_inspection_request.from_dict(patched_inspection_request_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/PatchedMLModelRequest/","title":"PatchedMLModelRequest","text":""},{"location":"api/clients/python/avis_client/PatchedMLModelRequest/#properties","title":"Properties","text":"Name Type Description Notes headers object [optional] model int [optional] version str [optional] url str [optional]"},{"location":"api/clients/python/avis_client/PatchedMLModelRequest/#example","title":"Example","text":"<p><pre><code>from avis_client.models.patched_ml_model_request import PatchedMLModelRequest\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of PatchedMLModelRequest from a JSON string\npatched_ml_model_request_instance = PatchedMLModelRequest.from_json(json)\n# print the JSON string representation of the object\nprint PatchedMLModelRequest.to_json()\n\n# convert the object into a dict\npatched_ml_model_request_dict = patched_ml_model_request_instance.to_dict()\n# create an instance of PatchedMLModelRequest from a dict\npatched_ml_model_request_form_dict = patched_ml_model_request.from_dict(patched_ml_model_request_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/PatchedMLModelTypeRequest/","title":"PatchedMLModelTypeRequest","text":""},{"location":"api/clients/python/avis_client/PatchedMLModelTypeRequest/#properties","title":"Properties","text":"Name Type Description Notes slug str [optional] name str [optional] description str [optional]"},{"location":"api/clients/python/avis_client/PatchedMLModelTypeRequest/#example","title":"Example","text":"<p><pre><code>from avis_client.models.patched_ml_model_type_request import PatchedMLModelTypeRequest\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of PatchedMLModelTypeRequest from a JSON string\npatched_ml_model_type_request_instance = PatchedMLModelTypeRequest.from_json(json)\n# print the JSON string representation of the object\nprint PatchedMLModelTypeRequest.to_json()\n\n# convert the object into a dict\npatched_ml_model_type_request_dict = patched_ml_model_type_request_instance.to_dict()\n# create an instance of PatchedMLModelTypeRequest from a dict\npatched_ml_model_type_request_form_dict = patched_ml_model_type_request.from_dict(patched_ml_model_type_request_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/PatchedMetadataRequest/","title":"PatchedMetadataRequest","text":""},{"location":"api/clients/python/avis_client/PatchedMetadataRequest/#properties","title":"Properties","text":"Name Type Description Notes team int [optional] configurations List[int] [optional] var_schema int [optional] data object [optional]"},{"location":"api/clients/python/avis_client/PatchedMetadataRequest/#example","title":"Example","text":"<p><pre><code>from avis_client.models.patched_metadata_request import PatchedMetadataRequest\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of PatchedMetadataRequest from a JSON string\npatched_metadata_request_instance = PatchedMetadataRequest.from_json(json)\n# print the JSON string representation of the object\nprint PatchedMetadataRequest.to_json()\n\n# convert the object into a dict\npatched_metadata_request_dict = patched_metadata_request_instance.to_dict()\n# create an instance of PatchedMetadataRequest from a dict\npatched_metadata_request_form_dict = patched_metadata_request.from_dict(patched_metadata_request_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/PatchedMetadataSchemaRequest/","title":"PatchedMetadataSchemaRequest","text":""},{"location":"api/clients/python/avis_client/PatchedMetadataSchemaRequest/#properties","title":"Properties","text":"Name Type Description Notes team int [optional] var_json object [optional]"},{"location":"api/clients/python/avis_client/PatchedMetadataSchemaRequest/#example","title":"Example","text":"<p><pre><code>from avis_client.models.patched_metadata_schema_request import PatchedMetadataSchemaRequest\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of PatchedMetadataSchemaRequest from a JSON string\npatched_metadata_schema_request_instance = PatchedMetadataSchemaRequest.from_json(json)\n# print the JSON string representation of the object\nprint PatchedMetadataSchemaRequest.to_json()\n\n# convert the object into a dict\npatched_metadata_schema_request_dict = patched_metadata_schema_request_instance.to_dict()\n# create an instance of PatchedMetadataSchemaRequest from a dict\npatched_metadata_schema_request_form_dict = patched_metadata_schema_request.from_dict(patched_metadata_schema_request_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/PatchedProductCategoryRequest/","title":"PatchedProductCategoryRequest","text":""},{"location":"api/clients/python/avis_client/PatchedProductCategoryRequest/#properties","title":"Properties","text":"Name Type Description Notes team int [optional] instances List[int] [optional] name str [optional] display_name str [optional] description str [optional]"},{"location":"api/clients/python/avis_client/PatchedProductCategoryRequest/#example","title":"Example","text":"<p><pre><code>from avis_client.models.patched_product_category_request import PatchedProductCategoryRequest\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of PatchedProductCategoryRequest from a JSON string\npatched_product_category_request_instance = PatchedProductCategoryRequest.from_json(json)\n# print the JSON string representation of the object\nprint PatchedProductCategoryRequest.to_json()\n\n# convert the object into a dict\npatched_product_category_request_dict = patched_product_category_request_instance.to_dict()\n# create an instance of PatchedProductCategoryRequest from a dict\npatched_product_category_request_form_dict = patched_product_category_request.from_dict(patched_product_category_request_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/PatchedProductRequest/","title":"PatchedProductRequest","text":""},{"location":"api/clients/python/avis_client/PatchedProductRequest/#properties","title":"Properties","text":"Name Type Description Notes team int [optional] category int [optional] inspections List[int] [optional] identifier str [optional] display_name str [optional] description str [optional]"},{"location":"api/clients/python/avis_client/PatchedProductRequest/#example","title":"Example","text":"<p><pre><code>from avis_client.models.patched_product_request import PatchedProductRequest\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of PatchedProductRequest from a JSON string\npatched_product_request_instance = PatchedProductRequest.from_json(json)\n# print the JSON string representation of the object\nprint PatchedProductRequest.to_json()\n\n# convert the object into a dict\npatched_product_request_dict = patched_product_request_instance.to_dict()\n# create an instance of PatchedProductRequest from a dict\npatched_product_request_form_dict = patched_product_request.from_dict(patched_product_request_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/PatchedQualityCriteriaRequest/","title":"PatchedQualityCriteriaRequest","text":""},{"location":"api/clients/python/avis_client/PatchedQualityCriteriaRequest/#properties","title":"Properties","text":"Name Type Description Notes team int [optional] configurations List[int] [optional] good_quality_classes List[str] [optional] uncertain_quality_classes List[str] [optional] bad_quality_classes List[str] [optional]"},{"location":"api/clients/python/avis_client/PatchedQualityCriteriaRequest/#example","title":"Example","text":"<p><pre><code>from avis_client.models.patched_quality_criteria_request import PatchedQualityCriteriaRequest\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of PatchedQualityCriteriaRequest from a JSON string\npatched_quality_criteria_request_instance = PatchedQualityCriteriaRequest.from_json(json)\n# print the JSON string representation of the object\nprint PatchedQualityCriteriaRequest.to_json()\n\n# convert the object into a dict\npatched_quality_criteria_request_dict = patched_quality_criteria_request_instance.to_dict()\n# create an instance of PatchedQualityCriteriaRequest from a dict\npatched_quality_criteria_request_form_dict = patched_quality_criteria_request.from_dict(patched_quality_criteria_request_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/PatchedResultRequest/","title":"PatchedResultRequest","text":""},{"location":"api/clients/python/avis_client/PatchedResultRequest/#properties","title":"Properties","text":"Name Type Description Notes team int [optional] reported_by int [optional] inferred_by int [optional] image int [optional] image_attributes List[int] [optional] status PatchedResultRequestStatus [optional] failure_reason str [optional] comment str [optional]"},{"location":"api/clients/python/avis_client/PatchedResultRequest/#example","title":"Example","text":"<p><pre><code>from avis_client.models.patched_result_request import PatchedResultRequest\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of PatchedResultRequest from a JSON string\npatched_result_request_instance = PatchedResultRequest.from_json(json)\n# print the JSON string representation of the object\nprint PatchedResultRequest.to_json()\n\n# convert the object into a dict\npatched_result_request_dict = patched_result_request_instance.to_dict()\n# create an instance of PatchedResultRequest from a dict\npatched_result_request_form_dict = patched_result_request.from_dict(patched_result_request_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/PatchedResultRequestStatus/","title":"PatchedResultRequestStatus","text":""},{"location":"api/clients/python/avis_client/PatchedResultRequestStatus/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"api/clients/python/avis_client/PatchedResultRequestStatus/#example","title":"Example","text":"<p><pre><code>from avis_client.models.patched_result_request_status import PatchedResultRequestStatus\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of PatchedResultRequestStatus from a JSON string\npatched_result_request_status_instance = PatchedResultRequestStatus.from_json(json)\n# print the JSON string representation of the object\nprint PatchedResultRequestStatus.to_json()\n\n# convert the object into a dict\npatched_result_request_status_dict = patched_result_request_status_instance.to_dict()\n# create an instance of PatchedResultRequestStatus from a dict\npatched_result_request_status_form_dict = patched_result_request_status.from_dict(patched_result_request_status_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/Product/","title":"Product","text":""},{"location":"api/clients/python/avis_client/Product/#properties","title":"Properties","text":"Name Type Description Notes id int [readonly] team int category int [optional] inspections List[int] [optional] created_at datetime [readonly] updated_at datetime [readonly] identifier str display_name str [optional] description str [optional]"},{"location":"api/clients/python/avis_client/Product/#example","title":"Example","text":"<p><pre><code>from avis_client.models.product import Product\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of Product from a JSON string\nproduct_instance = Product.from_json(json)\n# print the JSON string representation of the object\nprint Product.to_json()\n\n# convert the object into a dict\nproduct_dict = product_instance.to_dict()\n# create an instance of Product from a dict\nproduct_form_dict = product.from_dict(product_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/ProductApi/","title":"avis_client.ProductApi","text":"<p>All URIs are relative to http://localhost:8000</p> Method HTTP request Description product_create POST /api/product/ product_destroy DELETE /api/product/{id}/ product_list GET /api/product/ product_partial_update PATCH /api/product/{id}/ product_retrieve GET /api/product/{id}/ product_update PUT /api/product/{id}/"},{"location":"api/clients/python/avis_client/ProductApi/#product_create","title":"product_create","text":"<p>Product product_create(product_request)</p> <p>A base viewset that allows reading, creating and updating objects. The following functionalities are added by the mixins:  * CreateModelMixin: allows creating objects * UpdateModelMixin: allows updating objects * DestroyModelMixin: allows deleting objects * OptimizedReadOnlyTracedViewSet: allows reading objects and adds tracing and optimized queryset fetching (with the use of the <code>fields</code> query parameter)</p>"},{"location":"api/clients/python/avis_client/ProductApi/#example","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.product import Product\nfrom avis_client.models.product_request import ProductRequest\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.ProductApi(api_client)\n    product_request = avis_client.ProductRequest() # ProductRequest | \n\n    try:\n        api_response = api_instance.product_create(product_request)\n        print(\"The response of ProductApi-&gt;product_create:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ProductApi-&gt;product_create: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/ProductApi/#parameters","title":"Parameters","text":"Name Type Description Notes product_request ProductRequest"},{"location":"api/clients/python/avis_client/ProductApi/#return-type","title":"Return type","text":"<p>Product</p>"},{"location":"api/clients/python/avis_client/ProductApi/#authorization","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/ProductApi/#http-request-headers","title":"HTTP request headers","text":"<ul> <li>Content-Type: application/json, application/x-www-form-urlencoded, multipart/form-data</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/ProductApi/#http-response-details","title":"HTTP response details","text":"Status code Description Response headers 201 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/ProductApi/#product_destroy","title":"product_destroy","text":"<p>product_destroy(id)</p> <p>A base viewset that allows reading, creating and updating objects. The following functionalities are added by the mixins:  * CreateModelMixin: allows creating objects * UpdateModelMixin: allows updating objects * DestroyModelMixin: allows deleting objects * OptimizedReadOnlyTracedViewSet: allows reading objects and adds tracing and optimized queryset fetching (with the use of the <code>fields</code> query parameter)</p>"},{"location":"api/clients/python/avis_client/ProductApi/#example_1","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.ProductApi(api_client)\n    id = 56 # int | A unique integer value identifying this product.\n\n    try:\n        api_instance.product_destroy(id)\n    except Exception as e:\n        print(\"Exception when calling ProductApi-&gt;product_destroy: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/ProductApi/#parameters_1","title":"Parameters","text":"Name Type Description Notes id int A unique integer value identifying this product."},{"location":"api/clients/python/avis_client/ProductApi/#return-type_1","title":"Return type","text":"<p>void (empty response body)</p>"},{"location":"api/clients/python/avis_client/ProductApi/#authorization_1","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/ProductApi/#http-request-headers_1","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: Not defined</li> </ul>"},{"location":"api/clients/python/avis_client/ProductApi/#http-response-details_1","title":"HTTP response details","text":"Status code Description Response headers 204 No response body - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/ProductApi/#product_list","title":"product_list","text":"<p>PaginatedProductList product_list(category=category, fields=fields, id=id, identifier=identifier, ordering=ordering, page=page, page_size=page_size)</p> <p>A base viewset that allows reading, creating and updating objects. The following functionalities are added by the mixins:  * CreateModelMixin: allows creating objects * UpdateModelMixin: allows updating objects * DestroyModelMixin: allows deleting objects * OptimizedReadOnlyTracedViewSet: allows reading objects and adds tracing and optimized queryset fetching (with the use of the <code>fields</code> query parameter)</p>"},{"location":"api/clients/python/avis_client/ProductApi/#example_2","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.paginated_product_list import PaginatedProductList\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.ProductApi(api_client)\n    category = [56] # List[int] | Multiple values may be separated by commas. (optional)\n    fields = 'fields_example' # str |  (optional)\n    id = [56] # List[int] | Multiple values may be separated by commas. (optional)\n    identifier = ['identifier_example'] # List[str] | Multiple values may be separated by commas. (optional)\n    ordering = 'ordering_example' # str | Which field to use when ordering the results. (optional)\n    page = 56 # int | A page number within the paginated result set. (optional)\n    page_size = 56 # int | Number of results to return per page. (optional)\n\n    try:\n        api_response = api_instance.product_list(category=category, fields=fields, id=id, identifier=identifier, ordering=ordering, page=page, page_size=page_size)\n        print(\"The response of ProductApi-&gt;product_list:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ProductApi-&gt;product_list: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/ProductApi/#parameters_2","title":"Parameters","text":"Name Type Description Notes category List[int] Multiple values may be separated by commas. [optional] fields str [optional] id List[int] Multiple values may be separated by commas. [optional] identifier List[str] Multiple values may be separated by commas. [optional] ordering str Which field to use when ordering the results. [optional] page int A page number within the paginated result set. [optional] page_size int Number of results to return per page. [optional]"},{"location":"api/clients/python/avis_client/ProductApi/#return-type_2","title":"Return type","text":"<p>PaginatedProductList</p>"},{"location":"api/clients/python/avis_client/ProductApi/#authorization_2","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/ProductApi/#http-request-headers_2","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/ProductApi/#http-response-details_2","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/ProductApi/#product_partial_update","title":"product_partial_update","text":"<p>Product product_partial_update(id, patched_product_request=patched_product_request)</p> <p>A base viewset that allows reading, creating and updating objects. The following functionalities are added by the mixins:  * CreateModelMixin: allows creating objects * UpdateModelMixin: allows updating objects * DestroyModelMixin: allows deleting objects * OptimizedReadOnlyTracedViewSet: allows reading objects and adds tracing and optimized queryset fetching (with the use of the <code>fields</code> query parameter)</p>"},{"location":"api/clients/python/avis_client/ProductApi/#example_3","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.patched_product_request import PatchedProductRequest\nfrom avis_client.models.product import Product\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.ProductApi(api_client)\n    id = 56 # int | A unique integer value identifying this product.\n    patched_product_request = avis_client.PatchedProductRequest() # PatchedProductRequest |  (optional)\n\n    try:\n        api_response = api_instance.product_partial_update(id, patched_product_request=patched_product_request)\n        print(\"The response of ProductApi-&gt;product_partial_update:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ProductApi-&gt;product_partial_update: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/ProductApi/#parameters_3","title":"Parameters","text":"Name Type Description Notes id int A unique integer value identifying this product. patched_product_request PatchedProductRequest [optional]"},{"location":"api/clients/python/avis_client/ProductApi/#return-type_3","title":"Return type","text":"<p>Product</p>"},{"location":"api/clients/python/avis_client/ProductApi/#authorization_3","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/ProductApi/#http-request-headers_3","title":"HTTP request headers","text":"<ul> <li>Content-Type: application/json, application/x-www-form-urlencoded, multipart/form-data</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/ProductApi/#http-response-details_3","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/ProductApi/#product_retrieve","title":"product_retrieve","text":"<p>Product product_retrieve(id, fields=fields)</p> <p>A base viewset that allows reading, creating and updating objects. The following functionalities are added by the mixins:  * CreateModelMixin: allows creating objects * UpdateModelMixin: allows updating objects * DestroyModelMixin: allows deleting objects * OptimizedReadOnlyTracedViewSet: allows reading objects and adds tracing and optimized queryset fetching (with the use of the <code>fields</code> query parameter)</p>"},{"location":"api/clients/python/avis_client/ProductApi/#example_4","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.product import Product\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.ProductApi(api_client)\n    id = 56 # int | A unique integer value identifying this product.\n    fields = 'fields_example' # str |  (optional)\n\n    try:\n        api_response = api_instance.product_retrieve(id, fields=fields)\n        print(\"The response of ProductApi-&gt;product_retrieve:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ProductApi-&gt;product_retrieve: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/ProductApi/#parameters_4","title":"Parameters","text":"Name Type Description Notes id int A unique integer value identifying this product. fields str [optional]"},{"location":"api/clients/python/avis_client/ProductApi/#return-type_4","title":"Return type","text":"<p>Product</p>"},{"location":"api/clients/python/avis_client/ProductApi/#authorization_4","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/ProductApi/#http-request-headers_4","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/ProductApi/#http-response-details_4","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/ProductApi/#product_update","title":"product_update","text":"<p>Product product_update(id, product_request)</p> <p>A base viewset that allows reading, creating and updating objects. The following functionalities are added by the mixins:  * CreateModelMixin: allows creating objects * UpdateModelMixin: allows updating objects * DestroyModelMixin: allows deleting objects * OptimizedReadOnlyTracedViewSet: allows reading objects and adds tracing and optimized queryset fetching (with the use of the <code>fields</code> query parameter)</p>"},{"location":"api/clients/python/avis_client/ProductApi/#example_5","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.product import Product\nfrom avis_client.models.product_request import ProductRequest\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.ProductApi(api_client)\n    id = 56 # int | A unique integer value identifying this product.\n    product_request = avis_client.ProductRequest() # ProductRequest | \n\n    try:\n        api_response = api_instance.product_update(id, product_request)\n        print(\"The response of ProductApi-&gt;product_update:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ProductApi-&gt;product_update: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/ProductApi/#parameters_5","title":"Parameters","text":"Name Type Description Notes id int A unique integer value identifying this product. product_request ProductRequest"},{"location":"api/clients/python/avis_client/ProductApi/#return-type_5","title":"Return type","text":"<p>Product</p>"},{"location":"api/clients/python/avis_client/ProductApi/#authorization_5","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/ProductApi/#http-request-headers_5","title":"HTTP request headers","text":"<ul> <li>Content-Type: application/json, application/x-www-form-urlencoded, multipart/form-data</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/ProductApi/#http-response-details_5","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/ProductCategory/","title":"ProductCategory","text":""},{"location":"api/clients/python/avis_client/ProductCategory/#properties","title":"Properties","text":"Name Type Description Notes id int [readonly] team int instances List[int] [optional] created_at datetime [readonly] updated_at datetime [readonly] name str [optional] display_name str [optional] description str [optional]"},{"location":"api/clients/python/avis_client/ProductCategory/#example","title":"Example","text":"<p><pre><code>from avis_client.models.product_category import ProductCategory\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ProductCategory from a JSON string\nproduct_category_instance = ProductCategory.from_json(json)\n# print the JSON string representation of the object\nprint ProductCategory.to_json()\n\n# convert the object into a dict\nproduct_category_dict = product_category_instance.to_dict()\n# create an instance of ProductCategory from a dict\nproduct_category_form_dict = product_category.from_dict(product_category_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/ProductCategoryApi/","title":"avis_client.ProductCategoryApi","text":"<p>All URIs are relative to http://localhost:8000</p> Method HTTP request Description product_category_create POST /api/product-category/ product_category_destroy DELETE /api/product-category/{id}/ product_category_list GET /api/product-category/ product_category_partial_update PATCH /api/product-category/{id}/ product_category_retrieve GET /api/product-category/{id}/ product_category_update PUT /api/product-category/{id}/"},{"location":"api/clients/python/avis_client/ProductCategoryApi/#product_category_create","title":"product_category_create","text":"<p>ProductCategory product_category_create(product_category_request)</p> <p>A base viewset that allows reading, creating and updating objects. The following functionalities are added by the mixins:  * CreateModelMixin: allows creating objects * UpdateModelMixin: allows updating objects * DestroyModelMixin: allows deleting objects * OptimizedReadOnlyTracedViewSet: allows reading objects and adds tracing and optimized queryset fetching (with the use of the <code>fields</code> query parameter)</p>"},{"location":"api/clients/python/avis_client/ProductCategoryApi/#example","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.product_category import ProductCategory\nfrom avis_client.models.product_category_request import ProductCategoryRequest\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.ProductCategoryApi(api_client)\n    product_category_request = avis_client.ProductCategoryRequest() # ProductCategoryRequest | \n\n    try:\n        api_response = api_instance.product_category_create(product_category_request)\n        print(\"The response of ProductCategoryApi-&gt;product_category_create:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ProductCategoryApi-&gt;product_category_create: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/ProductCategoryApi/#parameters","title":"Parameters","text":"Name Type Description Notes product_category_request ProductCategoryRequest"},{"location":"api/clients/python/avis_client/ProductCategoryApi/#return-type","title":"Return type","text":"<p>ProductCategory</p>"},{"location":"api/clients/python/avis_client/ProductCategoryApi/#authorization","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/ProductCategoryApi/#http-request-headers","title":"HTTP request headers","text":"<ul> <li>Content-Type: application/json, application/x-www-form-urlencoded, multipart/form-data</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/ProductCategoryApi/#http-response-details","title":"HTTP response details","text":"Status code Description Response headers 201 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/ProductCategoryApi/#product_category_destroy","title":"product_category_destroy","text":"<p>product_category_destroy(id)</p> <p>A base viewset that allows reading, creating and updating objects. The following functionalities are added by the mixins:  * CreateModelMixin: allows creating objects * UpdateModelMixin: allows updating objects * DestroyModelMixin: allows deleting objects * OptimizedReadOnlyTracedViewSet: allows reading objects and adds tracing and optimized queryset fetching (with the use of the <code>fields</code> query parameter)</p>"},{"location":"api/clients/python/avis_client/ProductCategoryApi/#example_1","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.ProductCategoryApi(api_client)\n    id = 56 # int | A unique integer value identifying this product category.\n\n    try:\n        api_instance.product_category_destroy(id)\n    except Exception as e:\n        print(\"Exception when calling ProductCategoryApi-&gt;product_category_destroy: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/ProductCategoryApi/#parameters_1","title":"Parameters","text":"Name Type Description Notes id int A unique integer value identifying this product category."},{"location":"api/clients/python/avis_client/ProductCategoryApi/#return-type_1","title":"Return type","text":"<p>void (empty response body)</p>"},{"location":"api/clients/python/avis_client/ProductCategoryApi/#authorization_1","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/ProductCategoryApi/#http-request-headers_1","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: Not defined</li> </ul>"},{"location":"api/clients/python/avis_client/ProductCategoryApi/#http-response-details_1","title":"HTTP response details","text":"Status code Description Response headers 204 No response body - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/ProductCategoryApi/#product_category_list","title":"product_category_list","text":"<p>PaginatedProductCategoryList product_category_list(fields=fields, id=id, ordering=ordering, page=page, page_size=page_size)</p> <p>A base viewset that allows reading, creating and updating objects. The following functionalities are added by the mixins:  * CreateModelMixin: allows creating objects * UpdateModelMixin: allows updating objects * DestroyModelMixin: allows deleting objects * OptimizedReadOnlyTracedViewSet: allows reading objects and adds tracing and optimized queryset fetching (with the use of the <code>fields</code> query parameter)</p>"},{"location":"api/clients/python/avis_client/ProductCategoryApi/#example_2","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.paginated_product_category_list import PaginatedProductCategoryList\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.ProductCategoryApi(api_client)\n    fields = 'fields_example' # str |  (optional)\n    id = [56] # List[int] | Multiple values may be separated by commas. (optional)\n    ordering = 'ordering_example' # str | Which field to use when ordering the results. (optional)\n    page = 56 # int | A page number within the paginated result set. (optional)\n    page_size = 56 # int | Number of results to return per page. (optional)\n\n    try:\n        api_response = api_instance.product_category_list(fields=fields, id=id, ordering=ordering, page=page, page_size=page_size)\n        print(\"The response of ProductCategoryApi-&gt;product_category_list:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ProductCategoryApi-&gt;product_category_list: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/ProductCategoryApi/#parameters_2","title":"Parameters","text":"Name Type Description Notes fields str [optional] id List[int] Multiple values may be separated by commas. [optional] ordering str Which field to use when ordering the results. [optional] page int A page number within the paginated result set. [optional] page_size int Number of results to return per page. [optional]"},{"location":"api/clients/python/avis_client/ProductCategoryApi/#return-type_2","title":"Return type","text":"<p>PaginatedProductCategoryList</p>"},{"location":"api/clients/python/avis_client/ProductCategoryApi/#authorization_2","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/ProductCategoryApi/#http-request-headers_2","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/ProductCategoryApi/#http-response-details_2","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/ProductCategoryApi/#product_category_partial_update","title":"product_category_partial_update","text":"<p>ProductCategory product_category_partial_update(id, patched_product_category_request=patched_product_category_request)</p> <p>A base viewset that allows reading, creating and updating objects. The following functionalities are added by the mixins:  * CreateModelMixin: allows creating objects * UpdateModelMixin: allows updating objects * DestroyModelMixin: allows deleting objects * OptimizedReadOnlyTracedViewSet: allows reading objects and adds tracing and optimized queryset fetching (with the use of the <code>fields</code> query parameter)</p>"},{"location":"api/clients/python/avis_client/ProductCategoryApi/#example_3","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.patched_product_category_request import PatchedProductCategoryRequest\nfrom avis_client.models.product_category import ProductCategory\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.ProductCategoryApi(api_client)\n    id = 56 # int | A unique integer value identifying this product category.\n    patched_product_category_request = avis_client.PatchedProductCategoryRequest() # PatchedProductCategoryRequest |  (optional)\n\n    try:\n        api_response = api_instance.product_category_partial_update(id, patched_product_category_request=patched_product_category_request)\n        print(\"The response of ProductCategoryApi-&gt;product_category_partial_update:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ProductCategoryApi-&gt;product_category_partial_update: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/ProductCategoryApi/#parameters_3","title":"Parameters","text":"Name Type Description Notes id int A unique integer value identifying this product category. patched_product_category_request PatchedProductCategoryRequest [optional]"},{"location":"api/clients/python/avis_client/ProductCategoryApi/#return-type_3","title":"Return type","text":"<p>ProductCategory</p>"},{"location":"api/clients/python/avis_client/ProductCategoryApi/#authorization_3","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/ProductCategoryApi/#http-request-headers_3","title":"HTTP request headers","text":"<ul> <li>Content-Type: application/json, application/x-www-form-urlencoded, multipart/form-data</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/ProductCategoryApi/#http-response-details_3","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/ProductCategoryApi/#product_category_retrieve","title":"product_category_retrieve","text":"<p>ProductCategory product_category_retrieve(id, fields=fields)</p> <p>A base viewset that allows reading, creating and updating objects. The following functionalities are added by the mixins:  * CreateModelMixin: allows creating objects * UpdateModelMixin: allows updating objects * DestroyModelMixin: allows deleting objects * OptimizedReadOnlyTracedViewSet: allows reading objects and adds tracing and optimized queryset fetching (with the use of the <code>fields</code> query parameter)</p>"},{"location":"api/clients/python/avis_client/ProductCategoryApi/#example_4","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.product_category import ProductCategory\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.ProductCategoryApi(api_client)\n    id = 56 # int | A unique integer value identifying this product category.\n    fields = 'fields_example' # str |  (optional)\n\n    try:\n        api_response = api_instance.product_category_retrieve(id, fields=fields)\n        print(\"The response of ProductCategoryApi-&gt;product_category_retrieve:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ProductCategoryApi-&gt;product_category_retrieve: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/ProductCategoryApi/#parameters_4","title":"Parameters","text":"Name Type Description Notes id int A unique integer value identifying this product category. fields str [optional]"},{"location":"api/clients/python/avis_client/ProductCategoryApi/#return-type_4","title":"Return type","text":"<p>ProductCategory</p>"},{"location":"api/clients/python/avis_client/ProductCategoryApi/#authorization_4","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/ProductCategoryApi/#http-request-headers_4","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/ProductCategoryApi/#http-response-details_4","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/ProductCategoryApi/#product_category_update","title":"product_category_update","text":"<p>ProductCategory product_category_update(id, product_category_request)</p> <p>A base viewset that allows reading, creating and updating objects. The following functionalities are added by the mixins:  * CreateModelMixin: allows creating objects * UpdateModelMixin: allows updating objects * DestroyModelMixin: allows deleting objects * OptimizedReadOnlyTracedViewSet: allows reading objects and adds tracing and optimized queryset fetching (with the use of the <code>fields</code> query parameter)</p>"},{"location":"api/clients/python/avis_client/ProductCategoryApi/#example_5","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.product_category import ProductCategory\nfrom avis_client.models.product_category_request import ProductCategoryRequest\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.ProductCategoryApi(api_client)\n    id = 56 # int | A unique integer value identifying this product category.\n    product_category_request = avis_client.ProductCategoryRequest() # ProductCategoryRequest | \n\n    try:\n        api_response = api_instance.product_category_update(id, product_category_request)\n        print(\"The response of ProductCategoryApi-&gt;product_category_update:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ProductCategoryApi-&gt;product_category_update: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/ProductCategoryApi/#parameters_5","title":"Parameters","text":"Name Type Description Notes id int A unique integer value identifying this product category. product_category_request ProductCategoryRequest"},{"location":"api/clients/python/avis_client/ProductCategoryApi/#return-type_5","title":"Return type","text":"<p>ProductCategory</p>"},{"location":"api/clients/python/avis_client/ProductCategoryApi/#authorization_5","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/ProductCategoryApi/#http-request-headers_5","title":"HTTP request headers","text":"<ul> <li>Content-Type: application/json, application/x-www-form-urlencoded, multipart/form-data</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/ProductCategoryApi/#http-response-details_5","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/ProductCategoryRequest/","title":"ProductCategoryRequest","text":""},{"location":"api/clients/python/avis_client/ProductCategoryRequest/#properties","title":"Properties","text":"Name Type Description Notes team int instances List[int] [optional] name str [optional] display_name str [optional] description str [optional]"},{"location":"api/clients/python/avis_client/ProductCategoryRequest/#example","title":"Example","text":"<p><pre><code>from avis_client.models.product_category_request import ProductCategoryRequest\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ProductCategoryRequest from a JSON string\nproduct_category_request_instance = ProductCategoryRequest.from_json(json)\n# print the JSON string representation of the object\nprint ProductCategoryRequest.to_json()\n\n# convert the object into a dict\nproduct_category_request_dict = product_category_request_instance.to_dict()\n# create an instance of ProductCategoryRequest from a dict\nproduct_category_request_form_dict = product_category_request.from_dict(product_category_request_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/ProductRequest/","title":"ProductRequest","text":""},{"location":"api/clients/python/avis_client/ProductRequest/#properties","title":"Properties","text":"Name Type Description Notes team int category int [optional] inspections List[int] [optional] identifier str display_name str [optional] description str [optional]"},{"location":"api/clients/python/avis_client/ProductRequest/#example","title":"Example","text":"<p><pre><code>from avis_client.models.product_request import ProductRequest\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ProductRequest from a JSON string\nproduct_request_instance = ProductRequest.from_json(json)\n# print the JSON string representation of the object\nprint ProductRequest.to_json()\n\n# convert the object into a dict\nproduct_request_dict = product_request_instance.to_dict()\n# create an instance of ProductRequest from a dict\nproduct_request_form_dict = product_request.from_dict(product_request_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/QualityCriteria/","title":"QualityCriteria","text":""},{"location":"api/clients/python/avis_client/QualityCriteria/#properties","title":"Properties","text":"Name Type Description Notes id int [readonly] team int configurations List[int] [optional] good_quality_classes List[str] uncertain_quality_classes List[str] bad_quality_classes List[str] created_at datetime [readonly] updated_at datetime [readonly]"},{"location":"api/clients/python/avis_client/QualityCriteria/#example","title":"Example","text":"<p><pre><code>from avis_client.models.quality_criteria import QualityCriteria\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of QualityCriteria from a JSON string\nquality_criteria_instance = QualityCriteria.from_json(json)\n# print the JSON string representation of the object\nprint QualityCriteria.to_json()\n\n# convert the object into a dict\nquality_criteria_dict = quality_criteria_instance.to_dict()\n# create an instance of QualityCriteria from a dict\nquality_criteria_form_dict = quality_criteria.from_dict(quality_criteria_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/QualityCriteriaApi/","title":"avis_client.QualityCriteriaApi","text":"<p>All URIs are relative to http://localhost:8000</p> Method HTTP request Description quality_criteria_create POST /api/quality-criteria/ quality_criteria_destroy DELETE /api/quality-criteria/{id}/ quality_criteria_list GET /api/quality-criteria/ quality_criteria_partial_update PATCH /api/quality-criteria/{id}/ quality_criteria_retrieve GET /api/quality-criteria/{id}/ quality_criteria_update PUT /api/quality-criteria/{id}/"},{"location":"api/clients/python/avis_client/QualityCriteriaApi/#quality_criteria_create","title":"quality_criteria_create","text":"<p>QualityCriteria quality_criteria_create(quality_criteria_request)</p> <p>A base viewset that allows reading, creating and updating objects. The following functionalities are added by the mixins:  * CreateModelMixin: allows creating objects * UpdateModelMixin: allows updating objects * DestroyModelMixin: allows deleting objects * OptimizedReadOnlyTracedViewSet: allows reading objects and adds tracing and optimized queryset fetching (with the use of the <code>fields</code> query parameter)</p>"},{"location":"api/clients/python/avis_client/QualityCriteriaApi/#example","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.quality_criteria import QualityCriteria\nfrom avis_client.models.quality_criteria_request import QualityCriteriaRequest\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.QualityCriteriaApi(api_client)\n    quality_criteria_request = avis_client.QualityCriteriaRequest() # QualityCriteriaRequest | \n\n    try:\n        api_response = api_instance.quality_criteria_create(quality_criteria_request)\n        print(\"The response of QualityCriteriaApi-&gt;quality_criteria_create:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling QualityCriteriaApi-&gt;quality_criteria_create: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/QualityCriteriaApi/#parameters","title":"Parameters","text":"Name Type Description Notes quality_criteria_request QualityCriteriaRequest"},{"location":"api/clients/python/avis_client/QualityCriteriaApi/#return-type","title":"Return type","text":"<p>QualityCriteria</p>"},{"location":"api/clients/python/avis_client/QualityCriteriaApi/#authorization","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/QualityCriteriaApi/#http-request-headers","title":"HTTP request headers","text":"<ul> <li>Content-Type: application/json, application/x-www-form-urlencoded, multipart/form-data</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/QualityCriteriaApi/#http-response-details","title":"HTTP response details","text":"Status code Description Response headers 201 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/QualityCriteriaApi/#quality_criteria_destroy","title":"quality_criteria_destroy","text":"<p>quality_criteria_destroy(id)</p> <p>A base viewset that allows reading, creating and updating objects. The following functionalities are added by the mixins:  * CreateModelMixin: allows creating objects * UpdateModelMixin: allows updating objects * DestroyModelMixin: allows deleting objects * OptimizedReadOnlyTracedViewSet: allows reading objects and adds tracing and optimized queryset fetching (with the use of the <code>fields</code> query parameter)</p>"},{"location":"api/clients/python/avis_client/QualityCriteriaApi/#example_1","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.QualityCriteriaApi(api_client)\n    id = 56 # int | A unique integer value identifying this quality criteria.\n\n    try:\n        api_instance.quality_criteria_destroy(id)\n    except Exception as e:\n        print(\"Exception when calling QualityCriteriaApi-&gt;quality_criteria_destroy: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/QualityCriteriaApi/#parameters_1","title":"Parameters","text":"Name Type Description Notes id int A unique integer value identifying this quality criteria."},{"location":"api/clients/python/avis_client/QualityCriteriaApi/#return-type_1","title":"Return type","text":"<p>void (empty response body)</p>"},{"location":"api/clients/python/avis_client/QualityCriteriaApi/#authorization_1","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/QualityCriteriaApi/#http-request-headers_1","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: Not defined</li> </ul>"},{"location":"api/clients/python/avis_client/QualityCriteriaApi/#http-response-details_1","title":"HTTP response details","text":"Status code Description Response headers 204 No response body - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/QualityCriteriaApi/#quality_criteria_list","title":"quality_criteria_list","text":"<p>PaginatedQualityCriteriaList quality_criteria_list(fields=fields, id=id, ordering=ordering, page=page, page_size=page_size)</p> <p>A base viewset that allows reading, creating and updating objects. The following functionalities are added by the mixins:  * CreateModelMixin: allows creating objects * UpdateModelMixin: allows updating objects * DestroyModelMixin: allows deleting objects * OptimizedReadOnlyTracedViewSet: allows reading objects and adds tracing and optimized queryset fetching (with the use of the <code>fields</code> query parameter)</p>"},{"location":"api/clients/python/avis_client/QualityCriteriaApi/#example_2","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.paginated_quality_criteria_list import PaginatedQualityCriteriaList\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.QualityCriteriaApi(api_client)\n    fields = 'fields_example' # str |  (optional)\n    id = [56] # List[int] | Multiple values may be separated by commas. (optional)\n    ordering = 'ordering_example' # str | Which field to use when ordering the results. (optional)\n    page = 56 # int | A page number within the paginated result set. (optional)\n    page_size = 56 # int | Number of results to return per page. (optional)\n\n    try:\n        api_response = api_instance.quality_criteria_list(fields=fields, id=id, ordering=ordering, page=page, page_size=page_size)\n        print(\"The response of QualityCriteriaApi-&gt;quality_criteria_list:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling QualityCriteriaApi-&gt;quality_criteria_list: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/QualityCriteriaApi/#parameters_2","title":"Parameters","text":"Name Type Description Notes fields str [optional] id List[int] Multiple values may be separated by commas. [optional] ordering str Which field to use when ordering the results. [optional] page int A page number within the paginated result set. [optional] page_size int Number of results to return per page. [optional]"},{"location":"api/clients/python/avis_client/QualityCriteriaApi/#return-type_2","title":"Return type","text":"<p>PaginatedQualityCriteriaList</p>"},{"location":"api/clients/python/avis_client/QualityCriteriaApi/#authorization_2","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/QualityCriteriaApi/#http-request-headers_2","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/QualityCriteriaApi/#http-response-details_2","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/QualityCriteriaApi/#quality_criteria_partial_update","title":"quality_criteria_partial_update","text":"<p>QualityCriteria quality_criteria_partial_update(id, patched_quality_criteria_request=patched_quality_criteria_request)</p> <p>A base viewset that allows reading, creating and updating objects. The following functionalities are added by the mixins:  * CreateModelMixin: allows creating objects * UpdateModelMixin: allows updating objects * DestroyModelMixin: allows deleting objects * OptimizedReadOnlyTracedViewSet: allows reading objects and adds tracing and optimized queryset fetching (with the use of the <code>fields</code> query parameter)</p>"},{"location":"api/clients/python/avis_client/QualityCriteriaApi/#example_3","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.patched_quality_criteria_request import PatchedQualityCriteriaRequest\nfrom avis_client.models.quality_criteria import QualityCriteria\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.QualityCriteriaApi(api_client)\n    id = 56 # int | A unique integer value identifying this quality criteria.\n    patched_quality_criteria_request = avis_client.PatchedQualityCriteriaRequest() # PatchedQualityCriteriaRequest |  (optional)\n\n    try:\n        api_response = api_instance.quality_criteria_partial_update(id, patched_quality_criteria_request=patched_quality_criteria_request)\n        print(\"The response of QualityCriteriaApi-&gt;quality_criteria_partial_update:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling QualityCriteriaApi-&gt;quality_criteria_partial_update: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/QualityCriteriaApi/#parameters_3","title":"Parameters","text":"Name Type Description Notes id int A unique integer value identifying this quality criteria. patched_quality_criteria_request PatchedQualityCriteriaRequest [optional]"},{"location":"api/clients/python/avis_client/QualityCriteriaApi/#return-type_3","title":"Return type","text":"<p>QualityCriteria</p>"},{"location":"api/clients/python/avis_client/QualityCriteriaApi/#authorization_3","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/QualityCriteriaApi/#http-request-headers_3","title":"HTTP request headers","text":"<ul> <li>Content-Type: application/json, application/x-www-form-urlencoded, multipart/form-data</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/QualityCriteriaApi/#http-response-details_3","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/QualityCriteriaApi/#quality_criteria_retrieve","title":"quality_criteria_retrieve","text":"<p>QualityCriteria quality_criteria_retrieve(id, fields=fields)</p> <p>A base viewset that allows reading, creating and updating objects. The following functionalities are added by the mixins:  * CreateModelMixin: allows creating objects * UpdateModelMixin: allows updating objects * DestroyModelMixin: allows deleting objects * OptimizedReadOnlyTracedViewSet: allows reading objects and adds tracing and optimized queryset fetching (with the use of the <code>fields</code> query parameter)</p>"},{"location":"api/clients/python/avis_client/QualityCriteriaApi/#example_4","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.quality_criteria import QualityCriteria\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.QualityCriteriaApi(api_client)\n    id = 56 # int | A unique integer value identifying this quality criteria.\n    fields = 'fields_example' # str |  (optional)\n\n    try:\n        api_response = api_instance.quality_criteria_retrieve(id, fields=fields)\n        print(\"The response of QualityCriteriaApi-&gt;quality_criteria_retrieve:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling QualityCriteriaApi-&gt;quality_criteria_retrieve: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/QualityCriteriaApi/#parameters_4","title":"Parameters","text":"Name Type Description Notes id int A unique integer value identifying this quality criteria. fields str [optional]"},{"location":"api/clients/python/avis_client/QualityCriteriaApi/#return-type_4","title":"Return type","text":"<p>QualityCriteria</p>"},{"location":"api/clients/python/avis_client/QualityCriteriaApi/#authorization_4","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/QualityCriteriaApi/#http-request-headers_4","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/QualityCriteriaApi/#http-response-details_4","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/QualityCriteriaApi/#quality_criteria_update","title":"quality_criteria_update","text":"<p>QualityCriteria quality_criteria_update(id, quality_criteria_request)</p> <p>A base viewset that allows reading, creating and updating objects. The following functionalities are added by the mixins:  * CreateModelMixin: allows creating objects * UpdateModelMixin: allows updating objects * DestroyModelMixin: allows deleting objects * OptimizedReadOnlyTracedViewSet: allows reading objects and adds tracing and optimized queryset fetching (with the use of the <code>fields</code> query parameter)</p>"},{"location":"api/clients/python/avis_client/QualityCriteriaApi/#example_5","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.quality_criteria import QualityCriteria\nfrom avis_client.models.quality_criteria_request import QualityCriteriaRequest\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.QualityCriteriaApi(api_client)\n    id = 56 # int | A unique integer value identifying this quality criteria.\n    quality_criteria_request = avis_client.QualityCriteriaRequest() # QualityCriteriaRequest | \n\n    try:\n        api_response = api_instance.quality_criteria_update(id, quality_criteria_request)\n        print(\"The response of QualityCriteriaApi-&gt;quality_criteria_update:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling QualityCriteriaApi-&gt;quality_criteria_update: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/QualityCriteriaApi/#parameters_5","title":"Parameters","text":"Name Type Description Notes id int A unique integer value identifying this quality criteria. quality_criteria_request QualityCriteriaRequest"},{"location":"api/clients/python/avis_client/QualityCriteriaApi/#return-type_5","title":"Return type","text":"<p>QualityCriteria</p>"},{"location":"api/clients/python/avis_client/QualityCriteriaApi/#authorization_5","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/QualityCriteriaApi/#http-request-headers_5","title":"HTTP request headers","text":"<ul> <li>Content-Type: application/json, application/x-www-form-urlencoded, multipart/form-data</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/QualityCriteriaApi/#http-response-details_5","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/QualityCriteriaRequest/","title":"QualityCriteriaRequest","text":""},{"location":"api/clients/python/avis_client/QualityCriteriaRequest/#properties","title":"Properties","text":"Name Type Description Notes team int configurations List[int] [optional] good_quality_classes List[str] uncertain_quality_classes List[str] bad_quality_classes List[str]"},{"location":"api/clients/python/avis_client/QualityCriteriaRequest/#example","title":"Example","text":"<p><pre><code>from avis_client.models.quality_criteria_request import QualityCriteriaRequest\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of QualityCriteriaRequest from a JSON string\nquality_criteria_request_instance = QualityCriteriaRequest.from_json(json)\n# print the JSON string representation of the object\nprint QualityCriteriaRequest.to_json()\n\n# convert the object into a dict\nquality_criteria_request_dict = quality_criteria_request_instance.to_dict()\n# create an instance of QualityCriteriaRequest from a dict\nquality_criteria_request_form_dict = quality_criteria_request.from_dict(quality_criteria_request_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/QualityCriteriaResult/","title":"QualityCriteriaResult","text":""},{"location":"api/clients/python/avis_client/QualityCriteriaResult/#properties","title":"Properties","text":"Name Type Description Notes id int quality QualityEnum quality_criteria int"},{"location":"api/clients/python/avis_client/QualityCriteriaResult/#example","title":"Example","text":"<p><pre><code>from avis_client.models.quality_criteria_result import QualityCriteriaResult\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of QualityCriteriaResult from a JSON string\nquality_criteria_result_instance = QualityCriteriaResult.from_json(json)\n# print the JSON string representation of the object\nprint QualityCriteriaResult.to_json()\n\n# convert the object into a dict\nquality_criteria_result_dict = quality_criteria_result_instance.to_dict()\n# create an instance of QualityCriteriaResult from a dict\nquality_criteria_result_form_dict = quality_criteria_result.from_dict(quality_criteria_result_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/QualityEnum/","title":"QualityEnum","text":"<ul> <li><code>GOOD</code> - GOOD * <code>UNCERTAIN</code> - UNCERTAIN * <code>BAD</code> - BAD</li> </ul>"},{"location":"api/clients/python/avis_client/QualityEnum/#properties","title":"Properties","text":"Name Type Description Notes <p>[Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/Result/","title":"Result","text":""},{"location":"api/clients/python/avis_client/Result/#properties","title":"Properties","text":"Name Type Description Notes id int [readonly] team int reported_by int [optional] inferred_by int [optional] image int [optional] image_attributes List[int] [optional] created_at datetime [readonly] updated_at datetime [readonly] status PatchedResultRequestStatus [optional] failure_reason str [optional] comment str [optional]"},{"location":"api/clients/python/avis_client/Result/#example","title":"Example","text":"<p><pre><code>from avis_client.models.result import Result\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of Result from a JSON string\nresult_instance = Result.from_json(json)\n# print the JSON string representation of the object\nprint Result.to_json()\n\n# convert the object into a dict\nresult_dict = result_instance.to_dict()\n# create an instance of Result from a dict\nresult_form_dict = result.from_dict(result_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/ResultApi/","title":"avis_client.ResultApi","text":"<p>All URIs are relative to http://localhost:8000</p> Method HTTP request Description result_create POST /api/result/ result_destroy DELETE /api/result/{id}/ result_list GET /api/result/ result_partial_update PATCH /api/result/{id}/ result_retrieve GET /api/result/{id}/ result_update PUT /api/result/{id}/"},{"location":"api/clients/python/avis_client/ResultApi/#result_create","title":"result_create","text":"<p>Result result_create(result_request)</p> <p>A base viewset that allows reading, creating and updating objects. The following functionalities are added by the mixins:  * CreateModelMixin: allows creating objects * UpdateModelMixin: allows updating objects * DestroyModelMixin: allows deleting objects * OptimizedReadOnlyTracedViewSet: allows reading objects and adds tracing and optimized queryset fetching (with the use of the <code>fields</code> query parameter)</p>"},{"location":"api/clients/python/avis_client/ResultApi/#example","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.result import Result\nfrom avis_client.models.result_request import ResultRequest\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.ResultApi(api_client)\n    result_request = avis_client.ResultRequest() # ResultRequest | \n\n    try:\n        api_response = api_instance.result_create(result_request)\n        print(\"The response of ResultApi-&gt;result_create:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ResultApi-&gt;result_create: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/ResultApi/#parameters","title":"Parameters","text":"Name Type Description Notes result_request ResultRequest"},{"location":"api/clients/python/avis_client/ResultApi/#return-type","title":"Return type","text":"<p>Result</p>"},{"location":"api/clients/python/avis_client/ResultApi/#authorization","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/ResultApi/#http-request-headers","title":"HTTP request headers","text":"<ul> <li>Content-Type: application/json, application/x-www-form-urlencoded, multipart/form-data</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/ResultApi/#http-response-details","title":"HTTP response details","text":"Status code Description Response headers 201 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/ResultApi/#result_destroy","title":"result_destroy","text":"<p>result_destroy(id)</p> <p>A base viewset that allows reading, creating and updating objects. The following functionalities are added by the mixins:  * CreateModelMixin: allows creating objects * UpdateModelMixin: allows updating objects * DestroyModelMixin: allows deleting objects * OptimizedReadOnlyTracedViewSet: allows reading objects and adds tracing and optimized queryset fetching (with the use of the <code>fields</code> query parameter)</p>"},{"location":"api/clients/python/avis_client/ResultApi/#example_1","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.ResultApi(api_client)\n    id = 56 # int | A unique integer value identifying this result.\n\n    try:\n        api_instance.result_destroy(id)\n    except Exception as e:\n        print(\"Exception when calling ResultApi-&gt;result_destroy: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/ResultApi/#parameters_1","title":"Parameters","text":"Name Type Description Notes id int A unique integer value identifying this result."},{"location":"api/clients/python/avis_client/ResultApi/#return-type_1","title":"Return type","text":"<p>void (empty response body)</p>"},{"location":"api/clients/python/avis_client/ResultApi/#authorization_1","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/ResultApi/#http-request-headers_1","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: Not defined</li> </ul>"},{"location":"api/clients/python/avis_client/ResultApi/#http-response-details_1","title":"HTTP response details","text":"Status code Description Response headers 204 No response body - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/ResultApi/#result_list","title":"result_list","text":"<p>PaginatedResultList result_list(fields=fields, id=id, ordering=ordering, page=page, page_size=page_size)</p> <p>A base viewset that allows reading, creating and updating objects. The following functionalities are added by the mixins:  * CreateModelMixin: allows creating objects * UpdateModelMixin: allows updating objects * DestroyModelMixin: allows deleting objects * OptimizedReadOnlyTracedViewSet: allows reading objects and adds tracing and optimized queryset fetching (with the use of the <code>fields</code> query parameter)</p>"},{"location":"api/clients/python/avis_client/ResultApi/#example_2","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.paginated_result_list import PaginatedResultList\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.ResultApi(api_client)\n    fields = 'fields_example' # str |  (optional)\n    id = [56] # List[int] | Multiple values may be separated by commas. (optional)\n    ordering = 'ordering_example' # str | Which field to use when ordering the results. (optional)\n    page = 56 # int | A page number within the paginated result set. (optional)\n    page_size = 56 # int | Number of results to return per page. (optional)\n\n    try:\n        api_response = api_instance.result_list(fields=fields, id=id, ordering=ordering, page=page, page_size=page_size)\n        print(\"The response of ResultApi-&gt;result_list:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ResultApi-&gt;result_list: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/ResultApi/#parameters_2","title":"Parameters","text":"Name Type Description Notes fields str [optional] id List[int] Multiple values may be separated by commas. [optional] ordering str Which field to use when ordering the results. [optional] page int A page number within the paginated result set. [optional] page_size int Number of results to return per page. [optional]"},{"location":"api/clients/python/avis_client/ResultApi/#return-type_2","title":"Return type","text":"<p>PaginatedResultList</p>"},{"location":"api/clients/python/avis_client/ResultApi/#authorization_2","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/ResultApi/#http-request-headers_2","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/ResultApi/#http-response-details_2","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/ResultApi/#result_partial_update","title":"result_partial_update","text":"<p>Result result_partial_update(id, patched_result_request=patched_result_request)</p> <p>A base viewset that allows reading, creating and updating objects. The following functionalities are added by the mixins:  * CreateModelMixin: allows creating objects * UpdateModelMixin: allows updating objects * DestroyModelMixin: allows deleting objects * OptimizedReadOnlyTracedViewSet: allows reading objects and adds tracing and optimized queryset fetching (with the use of the <code>fields</code> query parameter)</p>"},{"location":"api/clients/python/avis_client/ResultApi/#example_3","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.patched_result_request import PatchedResultRequest\nfrom avis_client.models.result import Result\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.ResultApi(api_client)\n    id = 56 # int | A unique integer value identifying this result.\n    patched_result_request = avis_client.PatchedResultRequest() # PatchedResultRequest |  (optional)\n\n    try:\n        api_response = api_instance.result_partial_update(id, patched_result_request=patched_result_request)\n        print(\"The response of ResultApi-&gt;result_partial_update:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ResultApi-&gt;result_partial_update: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/ResultApi/#parameters_3","title":"Parameters","text":"Name Type Description Notes id int A unique integer value identifying this result. patched_result_request PatchedResultRequest [optional]"},{"location":"api/clients/python/avis_client/ResultApi/#return-type_3","title":"Return type","text":"<p>Result</p>"},{"location":"api/clients/python/avis_client/ResultApi/#authorization_3","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/ResultApi/#http-request-headers_3","title":"HTTP request headers","text":"<ul> <li>Content-Type: application/json, application/x-www-form-urlencoded, multipart/form-data</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/ResultApi/#http-response-details_3","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/ResultApi/#result_retrieve","title":"result_retrieve","text":"<p>Result result_retrieve(id, fields=fields)</p> <p>A base viewset that allows reading, creating and updating objects. The following functionalities are added by the mixins:  * CreateModelMixin: allows creating objects * UpdateModelMixin: allows updating objects * DestroyModelMixin: allows deleting objects * OptimizedReadOnlyTracedViewSet: allows reading objects and adds tracing and optimized queryset fetching (with the use of the <code>fields</code> query parameter)</p>"},{"location":"api/clients/python/avis_client/ResultApi/#example_4","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.result import Result\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.ResultApi(api_client)\n    id = 56 # int | A unique integer value identifying this result.\n    fields = 'fields_example' # str |  (optional)\n\n    try:\n        api_response = api_instance.result_retrieve(id, fields=fields)\n        print(\"The response of ResultApi-&gt;result_retrieve:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ResultApi-&gt;result_retrieve: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/ResultApi/#parameters_4","title":"Parameters","text":"Name Type Description Notes id int A unique integer value identifying this result. fields str [optional]"},{"location":"api/clients/python/avis_client/ResultApi/#return-type_4","title":"Return type","text":"<p>Result</p>"},{"location":"api/clients/python/avis_client/ResultApi/#authorization_4","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/ResultApi/#http-request-headers_4","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/ResultApi/#http-response-details_4","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/ResultApi/#result_update","title":"result_update","text":"<p>Result result_update(id, result_request)</p> <p>A base viewset that allows reading, creating and updating objects. The following functionalities are added by the mixins:  * CreateModelMixin: allows creating objects * UpdateModelMixin: allows updating objects * DestroyModelMixin: allows deleting objects * OptimizedReadOnlyTracedViewSet: allows reading objects and adds tracing and optimized queryset fetching (with the use of the <code>fields</code> query parameter)</p>"},{"location":"api/clients/python/avis_client/ResultApi/#example_5","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.result import Result\nfrom avis_client.models.result_request import ResultRequest\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.ResultApi(api_client)\n    id = 56 # int | A unique integer value identifying this result.\n    result_request = avis_client.ResultRequest() # ResultRequest | \n\n    try:\n        api_response = api_instance.result_update(id, result_request)\n        print(\"The response of ResultApi-&gt;result_update:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ResultApi-&gt;result_update: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/ResultApi/#parameters_5","title":"Parameters","text":"Name Type Description Notes id int A unique integer value identifying this result. result_request ResultRequest"},{"location":"api/clients/python/avis_client/ResultApi/#return-type_5","title":"Return type","text":"<p>Result</p>"},{"location":"api/clients/python/avis_client/ResultApi/#authorization_5","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/ResultApi/#http-request-headers_5","title":"HTTP request headers","text":"<ul> <li>Content-Type: application/json, application/x-www-form-urlencoded, multipart/form-data</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/ResultApi/#http-response-details_5","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/ResultRequest/","title":"ResultRequest","text":""},{"location":"api/clients/python/avis_client/ResultRequest/#properties","title":"Properties","text":"Name Type Description Notes team int reported_by int [optional] inferred_by int [optional] image int [optional] image_attributes List[int] [optional] status PatchedResultRequestStatus [optional] failure_reason str [optional] comment str [optional]"},{"location":"api/clients/python/avis_client/ResultRequest/#example","title":"Example","text":"<p><pre><code>from avis_client.models.result_request import ResultRequest\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ResultRequest from a JSON string\nresult_request_instance = ResultRequest.from_json(json)\n# print the JSON string representation of the object\nprint ResultRequest.to_json()\n\n# convert the object into a dict\nresult_request_dict = result_request_instance.to_dict()\n# create an instance of ResultRequest from a dict\nresult_request_form_dict = result_request.from_dict(result_request_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/StatisticsApi/","title":"avis_client.StatisticsApi","text":"<p>All URIs are relative to http://localhost:8000</p> Method HTTP request Description statistics_configuration_create POST /api/statistics/configuration/ statistics_configuration_destroy DELETE /api/statistics/configuration/{id}/ statistics_configuration_list GET /api/statistics/configuration/ statistics_configuration_retrieve GET /api/statistics/configuration/{id}/ statistics_configuration_update PUT /api/statistics/configuration/{id}/ statistics_inspection_create POST /api/statistics/inspection/ statistics_inspection_destroy DELETE /api/statistics/inspection/{id}/ statistics_inspection_list GET /api/statistics/inspection/ statistics_inspection_retrieve GET /api/statistics/inspection/{id}/ statistics_inspection_update PUT /api/statistics/inspection/{id}/ statistics_team_create POST /api/statistics/team/ statistics_team_destroy DELETE /api/statistics/team/{id}/ statistics_team_list GET /api/statistics/team/ statistics_team_retrieve GET /api/statistics/team/{id}/ statistics_team_update PUT /api/statistics/team/{id}/"},{"location":"api/clients/python/avis_client/StatisticsApi/#statistics_configuration_create","title":"statistics_configuration_create","text":"<p>ConfigurationStatistics statistics_configuration_create(configuration_statistics_request)</p> <p>A mixin that allows reading entities (listing and retrieving by id).</p>"},{"location":"api/clients/python/avis_client/StatisticsApi/#example","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.configuration_statistics import ConfigurationStatistics\nfrom avis_client.models.configuration_statistics_request import ConfigurationStatisticsRequest\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.StatisticsApi(api_client)\n    configuration_statistics_request = avis_client.ConfigurationStatisticsRequest() # ConfigurationStatisticsRequest | \n\n    try:\n        api_response = api_instance.statistics_configuration_create(configuration_statistics_request)\n        print(\"The response of StatisticsApi-&gt;statistics_configuration_create:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling StatisticsApi-&gt;statistics_configuration_create: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/StatisticsApi/#parameters","title":"Parameters","text":"Name Type Description Notes configuration_statistics_request ConfigurationStatisticsRequest"},{"location":"api/clients/python/avis_client/StatisticsApi/#return-type","title":"Return type","text":"<p>ConfigurationStatistics</p>"},{"location":"api/clients/python/avis_client/StatisticsApi/#authorization","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/StatisticsApi/#http-request-headers","title":"HTTP request headers","text":"<ul> <li>Content-Type: application/json, application/x-www-form-urlencoded, multipart/form-data</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/StatisticsApi/#http-response-details","title":"HTTP response details","text":"Status code Description Response headers 201 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/StatisticsApi/#statistics_configuration_destroy","title":"statistics_configuration_destroy","text":"<p>statistics_configuration_destroy(id)</p> <p>A mixin that allows reading entities (listing and retrieving by id).</p>"},{"location":"api/clients/python/avis_client/StatisticsApi/#example_1","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.StatisticsApi(api_client)\n    id = 56 # int | A unique integer value identifying this configuration.\n\n    try:\n        api_instance.statistics_configuration_destroy(id)\n    except Exception as e:\n        print(\"Exception when calling StatisticsApi-&gt;statistics_configuration_destroy: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/StatisticsApi/#parameters_1","title":"Parameters","text":"Name Type Description Notes id int A unique integer value identifying this configuration."},{"location":"api/clients/python/avis_client/StatisticsApi/#return-type_1","title":"Return type","text":"<p>void (empty response body)</p>"},{"location":"api/clients/python/avis_client/StatisticsApi/#authorization_1","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/StatisticsApi/#http-request-headers_1","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: Not defined</li> </ul>"},{"location":"api/clients/python/avis_client/StatisticsApi/#http-response-details_1","title":"HTTP response details","text":"Status code Description Response headers 204 No response body - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/StatisticsApi/#statistics_configuration_list","title":"statistics_configuration_list","text":"<p>PaginatedConfigurationStatisticsList statistics_configuration_list(id=id, ordering=ordering, page=page, page_size=page_size)</p> <p>A mixin that allows reading entities (listing and retrieving by id).</p>"},{"location":"api/clients/python/avis_client/StatisticsApi/#example_2","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.paginated_configuration_statistics_list import PaginatedConfigurationStatisticsList\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.StatisticsApi(api_client)\n    id = [56] # List[int] | Multiple values may be separated by commas. (optional)\n    ordering = 'ordering_example' # str | Which field to use when ordering the results. (optional)\n    page = 56 # int | A page number within the paginated result set. (optional)\n    page_size = 56 # int | Number of results to return per page. (optional)\n\n    try:\n        api_response = api_instance.statistics_configuration_list(id=id, ordering=ordering, page=page, page_size=page_size)\n        print(\"The response of StatisticsApi-&gt;statistics_configuration_list:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling StatisticsApi-&gt;statistics_configuration_list: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/StatisticsApi/#parameters_2","title":"Parameters","text":"Name Type Description Notes id List[int] Multiple values may be separated by commas. [optional] ordering str Which field to use when ordering the results. [optional] page int A page number within the paginated result set. [optional] page_size int Number of results to return per page. [optional]"},{"location":"api/clients/python/avis_client/StatisticsApi/#return-type_2","title":"Return type","text":"<p>PaginatedConfigurationStatisticsList</p>"},{"location":"api/clients/python/avis_client/StatisticsApi/#authorization_2","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/StatisticsApi/#http-request-headers_2","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/StatisticsApi/#http-response-details_2","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/StatisticsApi/#statistics_configuration_retrieve","title":"statistics_configuration_retrieve","text":"<p>ConfigurationStatistics statistics_configuration_retrieve(id)</p> <p>A mixin that allows reading entities (listing and retrieving by id).</p>"},{"location":"api/clients/python/avis_client/StatisticsApi/#example_3","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.configuration_statistics import ConfigurationStatistics\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.StatisticsApi(api_client)\n    id = 56 # int | A unique integer value identifying this configuration.\n\n    try:\n        api_response = api_instance.statistics_configuration_retrieve(id)\n        print(\"The response of StatisticsApi-&gt;statistics_configuration_retrieve:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling StatisticsApi-&gt;statistics_configuration_retrieve: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/StatisticsApi/#parameters_3","title":"Parameters","text":"Name Type Description Notes id int A unique integer value identifying this configuration."},{"location":"api/clients/python/avis_client/StatisticsApi/#return-type_3","title":"Return type","text":"<p>ConfigurationStatistics</p>"},{"location":"api/clients/python/avis_client/StatisticsApi/#authorization_3","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/StatisticsApi/#http-request-headers_3","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/StatisticsApi/#http-response-details_3","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/StatisticsApi/#statistics_configuration_update","title":"statistics_configuration_update","text":"<p>ConfigurationStatistics statistics_configuration_update(id, configuration_statistics_request)</p> <p>A mixin that allows reading entities (listing and retrieving by id).</p>"},{"location":"api/clients/python/avis_client/StatisticsApi/#example_4","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.configuration_statistics import ConfigurationStatistics\nfrom avis_client.models.configuration_statistics_request import ConfigurationStatisticsRequest\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.StatisticsApi(api_client)\n    id = 56 # int | A unique integer value identifying this configuration.\n    configuration_statistics_request = avis_client.ConfigurationStatisticsRequest() # ConfigurationStatisticsRequest | \n\n    try:\n        api_response = api_instance.statistics_configuration_update(id, configuration_statistics_request)\n        print(\"The response of StatisticsApi-&gt;statistics_configuration_update:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling StatisticsApi-&gt;statistics_configuration_update: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/StatisticsApi/#parameters_4","title":"Parameters","text":"Name Type Description Notes id int A unique integer value identifying this configuration. configuration_statistics_request ConfigurationStatisticsRequest"},{"location":"api/clients/python/avis_client/StatisticsApi/#return-type_4","title":"Return type","text":"<p>ConfigurationStatistics</p>"},{"location":"api/clients/python/avis_client/StatisticsApi/#authorization_4","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/StatisticsApi/#http-request-headers_4","title":"HTTP request headers","text":"<ul> <li>Content-Type: application/json, application/x-www-form-urlencoded, multipart/form-data</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/StatisticsApi/#http-response-details_4","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/StatisticsApi/#statistics_inspection_create","title":"statistics_inspection_create","text":"<p>InspectionImagesStatistics statistics_inspection_create(inspection_images_statistics_request)</p> <p>A mixin that only allows retrieving entities by id.</p>"},{"location":"api/clients/python/avis_client/StatisticsApi/#example_5","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.inspection_images_statistics import InspectionImagesStatistics\nfrom avis_client.models.inspection_images_statistics_request import InspectionImagesStatisticsRequest\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.StatisticsApi(api_client)\n    inspection_images_statistics_request = avis_client.InspectionImagesStatisticsRequest() # InspectionImagesStatisticsRequest | \n\n    try:\n        api_response = api_instance.statistics_inspection_create(inspection_images_statistics_request)\n        print(\"The response of StatisticsApi-&gt;statistics_inspection_create:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling StatisticsApi-&gt;statistics_inspection_create: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/StatisticsApi/#parameters_5","title":"Parameters","text":"Name Type Description Notes inspection_images_statistics_request InspectionImagesStatisticsRequest"},{"location":"api/clients/python/avis_client/StatisticsApi/#return-type_5","title":"Return type","text":"<p>InspectionImagesStatistics</p>"},{"location":"api/clients/python/avis_client/StatisticsApi/#authorization_5","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/StatisticsApi/#http-request-headers_5","title":"HTTP request headers","text":"<ul> <li>Content-Type: application/json, application/x-www-form-urlencoded, multipart/form-data</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/StatisticsApi/#http-response-details_5","title":"HTTP response details","text":"Status code Description Response headers 201 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/StatisticsApi/#statistics_inspection_destroy","title":"statistics_inspection_destroy","text":"<p>statistics_inspection_destroy(id)</p> <p>A mixin that only allows retrieving entities by id.</p>"},{"location":"api/clients/python/avis_client/StatisticsApi/#example_6","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.StatisticsApi(api_client)\n    id = 56 # int | A unique integer value identifying this image.\n\n    try:\n        api_instance.statistics_inspection_destroy(id)\n    except Exception as e:\n        print(\"Exception when calling StatisticsApi-&gt;statistics_inspection_destroy: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/StatisticsApi/#parameters_6","title":"Parameters","text":"Name Type Description Notes id int A unique integer value identifying this image."},{"location":"api/clients/python/avis_client/StatisticsApi/#return-type_6","title":"Return type","text":"<p>void (empty response body)</p>"},{"location":"api/clients/python/avis_client/StatisticsApi/#authorization_6","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/StatisticsApi/#http-request-headers_6","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: Not defined</li> </ul>"},{"location":"api/clients/python/avis_client/StatisticsApi/#http-response-details_6","title":"HTTP response details","text":"Status code Description Response headers 204 No response body - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/StatisticsApi/#statistics_inspection_list","title":"statistics_inspection_list","text":"<p>PaginatedInspectionImagesStatisticsList statistics_inspection_list(page=page, page_size=page_size)</p> <p>A mixin that only allows retrieving entities by id.</p>"},{"location":"api/clients/python/avis_client/StatisticsApi/#example_7","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.paginated_inspection_images_statistics_list import PaginatedInspectionImagesStatisticsList\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.StatisticsApi(api_client)\n    page = 56 # int | A page number within the paginated result set. (optional)\n    page_size = 56 # int | Number of results to return per page. (optional)\n\n    try:\n        api_response = api_instance.statistics_inspection_list(page=page, page_size=page_size)\n        print(\"The response of StatisticsApi-&gt;statistics_inspection_list:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling StatisticsApi-&gt;statistics_inspection_list: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/StatisticsApi/#parameters_7","title":"Parameters","text":"Name Type Description Notes page int A page number within the paginated result set. [optional] page_size int Number of results to return per page. [optional]"},{"location":"api/clients/python/avis_client/StatisticsApi/#return-type_7","title":"Return type","text":"<p>PaginatedInspectionImagesStatisticsList</p>"},{"location":"api/clients/python/avis_client/StatisticsApi/#authorization_7","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/StatisticsApi/#http-request-headers_7","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/StatisticsApi/#http-response-details_7","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/StatisticsApi/#statistics_inspection_retrieve","title":"statistics_inspection_retrieve","text":"<p>InspectionImagesStatistics statistics_inspection_retrieve(id)</p> <p>A mixin that only allows retrieving entities by id.</p>"},{"location":"api/clients/python/avis_client/StatisticsApi/#example_8","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.inspection_images_statistics import InspectionImagesStatistics\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.StatisticsApi(api_client)\n    id = 56 # int | A unique integer value identifying this image.\n\n    try:\n        api_response = api_instance.statistics_inspection_retrieve(id)\n        print(\"The response of StatisticsApi-&gt;statistics_inspection_retrieve:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling StatisticsApi-&gt;statistics_inspection_retrieve: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/StatisticsApi/#parameters_8","title":"Parameters","text":"Name Type Description Notes id int A unique integer value identifying this image."},{"location":"api/clients/python/avis_client/StatisticsApi/#return-type_8","title":"Return type","text":"<p>InspectionImagesStatistics</p>"},{"location":"api/clients/python/avis_client/StatisticsApi/#authorization_8","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/StatisticsApi/#http-request-headers_8","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/StatisticsApi/#http-response-details_8","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/StatisticsApi/#statistics_inspection_update","title":"statistics_inspection_update","text":"<p>InspectionImagesStatistics statistics_inspection_update(id, inspection_images_statistics_request)</p> <p>A mixin that only allows retrieving entities by id.</p>"},{"location":"api/clients/python/avis_client/StatisticsApi/#example_9","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.inspection_images_statistics import InspectionImagesStatistics\nfrom avis_client.models.inspection_images_statistics_request import InspectionImagesStatisticsRequest\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.StatisticsApi(api_client)\n    id = 56 # int | A unique integer value identifying this image.\n    inspection_images_statistics_request = avis_client.InspectionImagesStatisticsRequest() # InspectionImagesStatisticsRequest | \n\n    try:\n        api_response = api_instance.statistics_inspection_update(id, inspection_images_statistics_request)\n        print(\"The response of StatisticsApi-&gt;statistics_inspection_update:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling StatisticsApi-&gt;statistics_inspection_update: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/StatisticsApi/#parameters_9","title":"Parameters","text":"Name Type Description Notes id int A unique integer value identifying this image. inspection_images_statistics_request InspectionImagesStatisticsRequest"},{"location":"api/clients/python/avis_client/StatisticsApi/#return-type_9","title":"Return type","text":"<p>InspectionImagesStatistics</p>"},{"location":"api/clients/python/avis_client/StatisticsApi/#authorization_9","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/StatisticsApi/#http-request-headers_9","title":"HTTP request headers","text":"<ul> <li>Content-Type: application/json, application/x-www-form-urlencoded, multipart/form-data</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/StatisticsApi/#http-response-details_9","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/StatisticsApi/#statistics_team_create","title":"statistics_team_create","text":"<p>InspectionStatistics statistics_team_create(inspection_statistics_request)</p> <p>A mixin that only allows retrieving entities by id.</p>"},{"location":"api/clients/python/avis_client/StatisticsApi/#example_10","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.inspection_statistics import InspectionStatistics\nfrom avis_client.models.inspection_statistics_request import InspectionStatisticsRequest\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.StatisticsApi(api_client)\n    inspection_statistics_request = avis_client.InspectionStatisticsRequest() # InspectionStatisticsRequest | \n\n    try:\n        api_response = api_instance.statistics_team_create(inspection_statistics_request)\n        print(\"The response of StatisticsApi-&gt;statistics_team_create:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling StatisticsApi-&gt;statistics_team_create: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/StatisticsApi/#parameters_10","title":"Parameters","text":"Name Type Description Notes inspection_statistics_request InspectionStatisticsRequest"},{"location":"api/clients/python/avis_client/StatisticsApi/#return-type_10","title":"Return type","text":"<p>InspectionStatistics</p>"},{"location":"api/clients/python/avis_client/StatisticsApi/#authorization_10","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/StatisticsApi/#http-request-headers_10","title":"HTTP request headers","text":"<ul> <li>Content-Type: application/json, application/x-www-form-urlencoded, multipart/form-data</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/StatisticsApi/#http-response-details_10","title":"HTTP response details","text":"Status code Description Response headers 201 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/StatisticsApi/#statistics_team_destroy","title":"statistics_team_destroy","text":"<p>statistics_team_destroy(id)</p> <p>A mixin that only allows retrieving entities by id.</p>"},{"location":"api/clients/python/avis_client/StatisticsApi/#example_11","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.StatisticsApi(api_client)\n    id = 56 # int | A unique integer value identifying this inspection.\n\n    try:\n        api_instance.statistics_team_destroy(id)\n    except Exception as e:\n        print(\"Exception when calling StatisticsApi-&gt;statistics_team_destroy: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/StatisticsApi/#parameters_11","title":"Parameters","text":"Name Type Description Notes id int A unique integer value identifying this inspection."},{"location":"api/clients/python/avis_client/StatisticsApi/#return-type_11","title":"Return type","text":"<p>void (empty response body)</p>"},{"location":"api/clients/python/avis_client/StatisticsApi/#authorization_11","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/StatisticsApi/#http-request-headers_11","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: Not defined</li> </ul>"},{"location":"api/clients/python/avis_client/StatisticsApi/#http-response-details_11","title":"HTTP response details","text":"Status code Description Response headers 204 No response body - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/StatisticsApi/#statistics_team_list","title":"statistics_team_list","text":"<p>PaginatedInspectionStatisticsList statistics_team_list(page=page, page_size=page_size)</p> <p>A mixin that only allows retrieving entities by id.</p>"},{"location":"api/clients/python/avis_client/StatisticsApi/#example_12","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.paginated_inspection_statistics_list import PaginatedInspectionStatisticsList\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.StatisticsApi(api_client)\n    page = 56 # int | A page number within the paginated result set. (optional)\n    page_size = 56 # int | Number of results to return per page. (optional)\n\n    try:\n        api_response = api_instance.statistics_team_list(page=page, page_size=page_size)\n        print(\"The response of StatisticsApi-&gt;statistics_team_list:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling StatisticsApi-&gt;statistics_team_list: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/StatisticsApi/#parameters_12","title":"Parameters","text":"Name Type Description Notes page int A page number within the paginated result set. [optional] page_size int Number of results to return per page. [optional]"},{"location":"api/clients/python/avis_client/StatisticsApi/#return-type_12","title":"Return type","text":"<p>PaginatedInspectionStatisticsList</p>"},{"location":"api/clients/python/avis_client/StatisticsApi/#authorization_12","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/StatisticsApi/#http-request-headers_12","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/StatisticsApi/#http-response-details_12","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/StatisticsApi/#statistics_team_retrieve","title":"statistics_team_retrieve","text":"<p>InspectionStatistics statistics_team_retrieve(id)</p> <p>A mixin that only allows retrieving entities by id.</p>"},{"location":"api/clients/python/avis_client/StatisticsApi/#example_13","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.inspection_statistics import InspectionStatistics\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.StatisticsApi(api_client)\n    id = 56 # int | A unique integer value identifying this inspection.\n\n    try:\n        api_response = api_instance.statistics_team_retrieve(id)\n        print(\"The response of StatisticsApi-&gt;statistics_team_retrieve:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling StatisticsApi-&gt;statistics_team_retrieve: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/StatisticsApi/#parameters_13","title":"Parameters","text":"Name Type Description Notes id int A unique integer value identifying this inspection."},{"location":"api/clients/python/avis_client/StatisticsApi/#return-type_13","title":"Return type","text":"<p>InspectionStatistics</p>"},{"location":"api/clients/python/avis_client/StatisticsApi/#authorization_13","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/StatisticsApi/#http-request-headers_13","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/StatisticsApi/#http-response-details_13","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/StatisticsApi/#statistics_team_update","title":"statistics_team_update","text":"<p>InspectionStatistics statistics_team_update(id, inspection_statistics_request)</p> <p>A mixin that only allows retrieving entities by id.</p>"},{"location":"api/clients/python/avis_client/StatisticsApi/#example_14","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.inspection_statistics import InspectionStatistics\nfrom avis_client.models.inspection_statistics_request import InspectionStatisticsRequest\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.StatisticsApi(api_client)\n    id = 56 # int | A unique integer value identifying this inspection.\n    inspection_statistics_request = avis_client.InspectionStatisticsRequest() # InspectionStatisticsRequest | \n\n    try:\n        api_response = api_instance.statistics_team_update(id, inspection_statistics_request)\n        print(\"The response of StatisticsApi-&gt;statistics_team_update:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling StatisticsApi-&gt;statistics_team_update: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/StatisticsApi/#parameters_14","title":"Parameters","text":"Name Type Description Notes id int A unique integer value identifying this inspection. inspection_statistics_request InspectionStatisticsRequest"},{"location":"api/clients/python/avis_client/StatisticsApi/#return-type_14","title":"Return type","text":"<p>InspectionStatistics</p>"},{"location":"api/clients/python/avis_client/StatisticsApi/#authorization_14","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/StatisticsApi/#http-request-headers_14","title":"HTTP request headers","text":"<ul> <li>Content-Type: application/json, application/x-www-form-urlencoded, multipart/form-data</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/StatisticsApi/#http-response-details_14","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/StatusEnum/","title":"StatusEnum","text":"<ul> <li><code>PENDING</code> - Pending * <code>FAILED</code> - Failed * <code>SUCCESS</code> - Success</li> </ul>"},{"location":"api/clients/python/avis_client/StatusEnum/#properties","title":"Properties","text":"Name Type Description Notes <p>[Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/Team/","title":"Team","text":""},{"location":"api/clients/python/avis_client/Team/#properties","title":"Properties","text":"Name Type Description Notes id int [readonly] created_at datetime [readonly] updated_at datetime [readonly] name str slug str customer int [optional] subscription int [optional] members List[int] [readonly]"},{"location":"api/clients/python/avis_client/Team/#example","title":"Example","text":"<p><pre><code>from avis_client.models.team import Team\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of Team from a JSON string\nteam_instance = Team.from_json(json)\n# print the JSON string representation of the object\nprint Team.to_json()\n\n# convert the object into a dict\nteam_dict = team_instance.to_dict()\n# create an instance of Team from a dict\nteam_form_dict = team.from_dict(team_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/TeamRequest/","title":"TeamRequest","text":""},{"location":"api/clients/python/avis_client/TeamRequest/#properties","title":"Properties","text":"Name Type Description Notes name str slug str customer int [optional] subscription int [optional]"},{"location":"api/clients/python/avis_client/TeamRequest/#example","title":"Example","text":"<p><pre><code>from avis_client.models.team_request import TeamRequest\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of TeamRequest from a JSON string\nteam_request_instance = TeamRequest.from_json(json)\n# print the JSON string representation of the object\nprint TeamRequest.to_json()\n\n# convert the object into a dict\nteam_request_dict = team_request_instance.to_dict()\n# create an instance of TeamRequest from a dict\nteam_request_form_dict = team_request.from_dict(team_request_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/TeamsApi/","title":"avis_client.TeamsApi","text":"<p>All URIs are relative to http://localhost:8000</p> Method HTTP request Description teams_create POST /api/teams/ teams_destroy DELETE /api/teams/{id}/ teams_list GET /api/teams/ teams_retrieve GET /api/teams/{id}/ teams_update PUT /api/teams/{id}/"},{"location":"api/clients/python/avis_client/TeamsApi/#teams_create","title":"teams_create","text":"<p>Team teams_create(team_request)</p> <p>A mixin that allows reading entities (listing and retrieving by id).</p>"},{"location":"api/clients/python/avis_client/TeamsApi/#example","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.team import Team\nfrom avis_client.models.team_request import TeamRequest\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.TeamsApi(api_client)\n    team_request = avis_client.TeamRequest() # TeamRequest | \n\n    try:\n        api_response = api_instance.teams_create(team_request)\n        print(\"The response of TeamsApi-&gt;teams_create:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling TeamsApi-&gt;teams_create: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/TeamsApi/#parameters","title":"Parameters","text":"Name Type Description Notes team_request TeamRequest"},{"location":"api/clients/python/avis_client/TeamsApi/#return-type","title":"Return type","text":"<p>Team</p>"},{"location":"api/clients/python/avis_client/TeamsApi/#authorization","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/TeamsApi/#http-request-headers","title":"HTTP request headers","text":"<ul> <li>Content-Type: application/json, application/x-www-form-urlencoded, multipart/form-data</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/TeamsApi/#http-response-details","title":"HTTP response details","text":"Status code Description Response headers 201 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/TeamsApi/#teams_destroy","title":"teams_destroy","text":"<p>teams_destroy(id)</p> <p>A mixin that allows reading entities (listing and retrieving by id).</p>"},{"location":"api/clients/python/avis_client/TeamsApi/#example_1","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.TeamsApi(api_client)\n    id = 56 # int | A unique integer value identifying this team.\n\n    try:\n        api_instance.teams_destroy(id)\n    except Exception as e:\n        print(\"Exception when calling TeamsApi-&gt;teams_destroy: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/TeamsApi/#parameters_1","title":"Parameters","text":"Name Type Description Notes id int A unique integer value identifying this team."},{"location":"api/clients/python/avis_client/TeamsApi/#return-type_1","title":"Return type","text":"<p>void (empty response body)</p>"},{"location":"api/clients/python/avis_client/TeamsApi/#authorization_1","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/TeamsApi/#http-request-headers_1","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: Not defined</li> </ul>"},{"location":"api/clients/python/avis_client/TeamsApi/#http-response-details_1","title":"HTTP response details","text":"Status code Description Response headers 204 No response body - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/TeamsApi/#teams_list","title":"teams_list","text":"<p>PaginatedTeamList teams_list(page=page, page_size=page_size)</p> <p>A mixin that allows reading entities (listing and retrieving by id).</p>"},{"location":"api/clients/python/avis_client/TeamsApi/#example_2","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.paginated_team_list import PaginatedTeamList\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.TeamsApi(api_client)\n    page = 56 # int | A page number within the paginated result set. (optional)\n    page_size = 56 # int | Number of results to return per page. (optional)\n\n    try:\n        api_response = api_instance.teams_list(page=page, page_size=page_size)\n        print(\"The response of TeamsApi-&gt;teams_list:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling TeamsApi-&gt;teams_list: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/TeamsApi/#parameters_2","title":"Parameters","text":"Name Type Description Notes page int A page number within the paginated result set. [optional] page_size int Number of results to return per page. [optional]"},{"location":"api/clients/python/avis_client/TeamsApi/#return-type_2","title":"Return type","text":"<p>PaginatedTeamList</p>"},{"location":"api/clients/python/avis_client/TeamsApi/#authorization_2","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/TeamsApi/#http-request-headers_2","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/TeamsApi/#http-response-details_2","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/TeamsApi/#teams_retrieve","title":"teams_retrieve","text":"<p>Team teams_retrieve(id)</p> <p>A mixin that allows reading entities (listing and retrieving by id).</p>"},{"location":"api/clients/python/avis_client/TeamsApi/#example_3","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.team import Team\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.TeamsApi(api_client)\n    id = 56 # int | A unique integer value identifying this team.\n\n    try:\n        api_response = api_instance.teams_retrieve(id)\n        print(\"The response of TeamsApi-&gt;teams_retrieve:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling TeamsApi-&gt;teams_retrieve: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/TeamsApi/#parameters_3","title":"Parameters","text":"Name Type Description Notes id int A unique integer value identifying this team."},{"location":"api/clients/python/avis_client/TeamsApi/#return-type_3","title":"Return type","text":"<p>Team</p>"},{"location":"api/clients/python/avis_client/TeamsApi/#authorization_3","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/TeamsApi/#http-request-headers_3","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/TeamsApi/#http-response-details_3","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/TeamsApi/#teams_update","title":"teams_update","text":"<p>Team teams_update(id, team_request)</p> <p>A mixin that allows reading entities (listing and retrieving by id).</p>"},{"location":"api/clients/python/avis_client/TeamsApi/#example_4","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.team import Team\nfrom avis_client.models.team_request import TeamRequest\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.TeamsApi(api_client)\n    id = 56 # int | A unique integer value identifying this team.\n    team_request = avis_client.TeamRequest() # TeamRequest | \n\n    try:\n        api_response = api_instance.teams_update(id, team_request)\n        print(\"The response of TeamsApi-&gt;teams_update:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling TeamsApi-&gt;teams_update: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/TeamsApi/#parameters_4","title":"Parameters","text":"Name Type Description Notes id int A unique integer value identifying this team. team_request TeamRequest"},{"location":"api/clients/python/avis_client/TeamsApi/#return-type_4","title":"Return type","text":"<p>Team</p>"},{"location":"api/clients/python/avis_client/TeamsApi/#authorization_4","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/TeamsApi/#http-request-headers_4","title":"HTTP request headers","text":"<ul> <li>Content-Type: application/json, application/x-www-form-urlencoded, multipart/form-data</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/TeamsApi/#http-response-details_4","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/UserAPIKeyCreate/","title":"UserAPIKeyCreate","text":""},{"location":"api/clients/python/avis_client/UserAPIKeyCreate/#properties","title":"Properties","text":"Name Type Description Notes key str [readonly] created datetime [readonly] name str A free-form name for the API key. Need not be unique. 50 characters max. [optional] expiry_date datetime Once API key expires, clients cannot use it anymore. [readonly] revoked bool [readonly] message str [readonly]"},{"location":"api/clients/python/avis_client/UserAPIKeyCreate/#example","title":"Example","text":"<p><pre><code>from avis_client.models.user_api_key_create import UserAPIKeyCreate\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of UserAPIKeyCreate from a JSON string\nuser_api_key_create_instance = UserAPIKeyCreate.from_json(json)\n# print the JSON string representation of the object\nprint UserAPIKeyCreate.to_json()\n\n# convert the object into a dict\nuser_api_key_create_dict = user_api_key_create_instance.to_dict()\n# create an instance of UserAPIKeyCreate from a dict\nuser_api_key_create_form_dict = user_api_key_create.from_dict(user_api_key_create_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/UserAPIKeyCreateRequest/","title":"UserAPIKeyCreateRequest","text":""},{"location":"api/clients/python/avis_client/UserAPIKeyCreateRequest/#properties","title":"Properties","text":"Name Type Description Notes name str A free-form name for the API key. Need not be unique. 50 characters max. [optional]"},{"location":"api/clients/python/avis_client/UserAPIKeyCreateRequest/#example","title":"Example","text":"<p><pre><code>from avis_client.models.user_api_key_create_request import UserAPIKeyCreateRequest\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of UserAPIKeyCreateRequest from a JSON string\nuser_api_key_create_request_instance = UserAPIKeyCreateRequest.from_json(json)\n# print the JSON string representation of the object\nprint UserAPIKeyCreateRequest.to_json()\n\n# convert the object into a dict\nuser_api_key_create_request_dict = user_api_key_create_request_instance.to_dict()\n# create an instance of UserAPIKeyCreateRequest from a dict\nuser_api_key_create_request_form_dict = user_api_key_create_request.from_dict(user_api_key_create_request_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/UserApi/","title":"avis_client.UserApi","text":"<p>All URIs are relative to http://localhost:8000</p> Method HTTP request Description user_email_list GET /api/user/email/ user_whoami_retrieve GET /api/user/whoami/"},{"location":"api/clients/python/avis_client/UserApi/#user_email_list","title":"user_email_list","text":"<p>List[EmailAddress] user_email_list()</p> <p>Get all email addresses associated with the current user.</p>"},{"location":"api/clients/python/avis_client/UserApi/#example","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.email_address import EmailAddress\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.UserApi(api_client)\n\n    try:\n        api_response = api_instance.user_email_list()\n        print(\"The response of UserApi-&gt;user_email_list:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling UserApi-&gt;user_email_list: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/UserApi/#parameters","title":"Parameters","text":"<p>This endpoint does not need any parameter.</p>"},{"location":"api/clients/python/avis_client/UserApi/#return-type","title":"Return type","text":"<p>List[EmailAddress]</p>"},{"location":"api/clients/python/avis_client/UserApi/#authorization","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/UserApi/#http-request-headers","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/UserApi/#http-response-details","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/UserApi/#user_whoami_retrieve","title":"user_whoami_retrieve","text":"<p>CustomUser user_whoami_retrieve()</p> <p>Get the current user's information.</p>"},{"location":"api/clients/python/avis_client/UserApi/#example_1","title":"Example","text":"<ul> <li>Api Key Authentication (cookieAuth):</li> <li>Api Key Authentication (ApiKeyAuth):</li> </ul> <pre><code>import time\nimport os\nimport avis_client\nfrom avis_client.models.custom_user import CustomUser\nfrom avis_client.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost:8000\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = avis_client.Configuration(\n    host = \"http://localhost:8000\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: cookieAuth\nconfiguration.api_key['cookieAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['cookieAuth'] = 'Bearer'\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration.api_key['ApiKeyAuth'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith avis_client.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = avis_client.UserApi(api_client)\n\n    try:\n        api_response = api_instance.user_whoami_retrieve()\n        print(\"The response of UserApi-&gt;user_whoami_retrieve:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling UserApi-&gt;user_whoami_retrieve: %s\\n\" % e)\n</code></pre>"},{"location":"api/clients/python/avis_client/UserApi/#parameters_1","title":"Parameters","text":"<p>This endpoint does not need any parameter.</p>"},{"location":"api/clients/python/avis_client/UserApi/#return-type_1","title":"Return type","text":"<p>CustomUser</p>"},{"location":"api/clients/python/avis_client/UserApi/#authorization_1","title":"Authorization","text":"<p>cookieAuth, ApiKeyAuth</p>"},{"location":"api/clients/python/avis_client/UserApi/#http-request-headers_1","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"api/clients/python/avis_client/UserApi/#http-response-details_1","title":"HTTP response details","text":"Status code Description Response headers 200 - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"api/clients/python/avis_client/ValidationStatusEnum/","title":"ValidationStatusEnum","text":"<ul> <li><code>NONE</code> - None * <code>REQUESTED</code> - Validation Requested * <code>VALIDATED</code> - Validated</li> </ul>"},{"location":"api/clients/python/avis_client/ValidationStatusEnum/#properties","title":"Properties","text":"Name Type Description Notes <p>[Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"api/rest/","title":"AVIS RESTful API","text":""},{"location":"api/rest/#introduction","title":"Introduction","text":"<p>The AVIS API is RESTful. Our API has predictable resource-oriented URLs, accepts JSON-encoded request bodies, returns JSON-encoded responses, and uses standard HTTP response codes, authentication, and verbs.</p> <p>The API is organized around resources. A non-exhaustive list of the main resources are:</p> <ul> <li>Case</li> <li>Image</li> <li>Inspection object</li> <li>Inspection result</li> <li>User, Team and Membership</li> </ul> <p>See the Swagger UI for a complete list of resources and their endpoints.</p>"},{"location":"api/rest/#api-conventions","title":"API conventions","text":""},{"location":"api/rest/#resources","title":"Resources","text":"<p>Resources names are lowercase, singular with no spaces in the API. For example, an Inspection Object will be named as <code>inspectionobject</code>.</p>"},{"location":"api/rest/#relationships","title":"Relationships","text":"<p>Resources are related to each other using foreign keys. For example, a <code>Case</code> resource has a foreign key to the <code>InspectionObject</code> resource. This relationship is represented in the API's requests and responses as the ID of the related resource.</p> <p>For example to create a new case linked to the inspection object with ID 5, you would make a POST request to the <code>/api/case/</code> endpoint with the following request body:</p> <pre><code>{\n  ...\n  \"inspection_object\": 5,\n  ...\n}\n</code></pre> <p>Some resources support multiple relationships. For example, a <code>Case</code> resource can have multiple images. In this case,</p> <pre><code>{\n  ...\n  \"images\": [\n    1,\n    2,\n    3\n  ],\n  ...\n}\n</code></pre>"},{"location":"api/rest/#http-verbs-and-actions","title":"HTTP Verbs and actions","text":"<p>Each resource supports the following actions:</p> Action Method Endpoint Description list GET /api/{resource}/ List all resources of a given type retrieve GET /api/{resource}/{id}/ Retrieve a single resource  by id create POST /api/{resource}/ Create a new resource update PUT /api/{resource}/{id}/ Update a resource by id partial update PATCH /api/{resource}/{id}/ Partially update a resource by id delete DELETE /api/{resource}/{id}/ Delete a resource by id"},{"location":"api/rest/#listing-all-existing-resources","title":"Listing all existing resources","text":"<p>To list all existing resources of a given type, make a GET request to the resource's endpoint.</p> List all cases<pre><code>curl -X 'GET' 'http://localhost:8000/api/case/' \\\n  -H 'accept: application/json' \\\n  -H 'X-Api-Key: &lt;redacted&gt;'\n</code></pre>"},{"location":"api/rest/#retrieving-a-single-resource","title":"Retrieving a single resource","text":"<p>To retrieve a single resource, make a GET request to the resource's endpoint with the resource's ID.</p> Retrieve a case<pre><code>curl -X 'GET' 'http://localhost:8000/api/case/1/' \\\n  -H 'accept: application/json' \\\n  -H 'X-Api-Key: &lt;redacted&gt;'\n</code></pre>"},{"location":"api/rest/#creating-a-new-resource","title":"Creating a new resource","text":"<p>To create a new resource, make a POST request to the resource's endpoint with the resource's data required in the request body.</p> Create a new case<pre><code>curl -X 'POST' 'http://localhost:8000/api/case/' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'X-Api-Key: &lt;redacted&gt;' \\\n  -d '{\n        \"inspection_object\": 5\n        \"opened_by\": 45,\n        \"images\": [],\n        \"team\": 3\n}'\n</code></pre>"},{"location":"api/rest/#updating-a-resource","title":"Updating a resource","text":"<p>To update a resource, make a PUT request to the resource's endpoint with the resource's data required in the request</p> Update a case<pre><code>curl -X 'PUT' 'http://localhost:8000/api/case/1/' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'X-Api-Key: &lt;redacted&gt;' \\\n  -d '{\n        \"inspection_object\": 5\n        \"opened_by\": 45,\n        \"images\": [],\n        \"team\": 3\n}'\n</code></pre> <p>Please note that all the resource's required fields are required in the request body when updating a resource.</p>"},{"location":"api/rest/#partially-updating-a-resource","title":"Partially updating a resource","text":"<p>To partially update a resource, make a PATCH request to the resource's endpoint with the resource's data required in the request body.</p> Partially update a case<pre><code>curl -X 'PATCH' 'http://localhost:8000/api/case/1/' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'X-Api-Key: &lt;redacted&gt;' \\\n  -d '{\n        \"inspection_object\": 5\n}'\n</code></pre> <p>In this case, only the fields that are required to be updated are passed in the request body.</p>"},{"location":"api/rest/#deleting-a-resource","title":"Deleting a resource","text":"<p>To delete a resource, make a DELETE request to the resource's endpoint.</p> Delete a case<pre><code>curl -X 'DELETE' 'http://localhost:8000/api/case/1/' \\\n  -H 'X-Api-Key: &lt;redacted&gt;' \\\n  -H 'accept: application/json'\n</code></pre>"},{"location":"api/rest/#http-codes","title":"HTTP codes","text":"<p>The API uses standard HTTP response codes to indicate the success or failure of an API request. In general, codes in the 2xx range indicate success, codes in the 4xx range indicate an error that failed given the information provided, and codes in the 5xx range indicate an error with AVIS's servers.</p>"},{"location":"api/rest/#error-codes","title":"Error codes","text":"<p>Most common error codes:</p> <ul> <li>400 Bad Request: The request was invalid or cannot be otherwise served. An accompanying error message will explain   further.</li> <li>401 Unauthorized: The request requires user authentication.</li> <li>403 Forbidden: The server understood the request, but is refusing to fulfill it. You might not have enough permissions   to access the resource.</li> <li>404 Not Found: The requested resource could not be found or does not exist.</li> </ul>"},{"location":"api/rest/#authentication","title":"Authentication","text":"<p>The API supports two authentication methods:</p> <ul> <li>API keys: for authenticating requests programmatically from your application</li> <li>Session cookies: for authenticating requests from your browser when you're logged in to the AVIS   web UI</li> </ul>"},{"location":"api/rest/#api-keys","title":"API Keys","text":""},{"location":"api/rest/#create","title":"Create","text":"<p>Info</p> <p>The preferred way to create an API key is to use the AVIS web interface. The following instructions are for the rare case where you need to create a new API key programmatically using an existing API key.</p> <p>API keys are used to authenticate requests made by your application to the AVIS API. To create an API key make a POST request to the <code>/api/api-keys</code> endpoint:</p> Create an API key<pre><code>curl -X 'POST' 'http://localhost:8000/api/keys/' \\\n        -H 'accept: */*' \\\n        -H 'Content-Type: application/json' \\\n        -H 'Cookie: sessionid=...; csrftoken=...'\n</code></pre> <p>This will return a JSON response containing your API key:</p> <pre><code>{\n  \"key\": \"&lt;redacted&gt;\",\n  \"created\": \"2024-01-24T05:16:31.894775Z\",\n  \"name\": \"Zygz3GsXnBSHBr6nDkb4Fh\",\n  \"expiry_date\": \"2024-01-31T05:16:31.887783Z\",\n  \"revoked\": false,\n  \"message\": \"Save this key somewhere safe - you will only see it once!\"\n}\n</code></pre> <p>You can use this key to authenticate your requests using the <code>X-Api-Key</code> header:</p> Use the API key to query the API<pre><code>curl -X 'GET' 'http://localhost:8000/api/case/' \\\n  -H 'accept: application/json' \\\n  -H 'X-Api-Key: &lt;redacted&gt;'\n</code></pre>"},{"location":"api/rest/#revoke","title":"Revoke","text":"<p>To revoke an API key make a POST request to the <code>/api/api-keys/{name}/revoke</code> endpoint where <code>{name}</code> is the name of the API key you want to revoke:</p> Revoke an API key<pre><code>curl -X 'POST' 'http://localhost:8000/api/api-keys/Zygz3GsXnBSHBr6nDkb4Fh/revoke' \\\n        -H 'accept: */*' \\\n        -H 'Content-Type: application/json' \\\n        -H 'Cookie: sessionid=...; csrftoken=...'\n</code></pre>"},{"location":"api/rest/#session-cookies","title":"Session Cookies","text":"<p>Warning</p> <p>This authentication method is used for the AVIS web interface. It is not recommended to use it for programmatic access to the API.</p> <p>This requires the user to authenticate with username and password using the <code>/accounts/login/</code> endpoint in their browser. The browser will store the session id in a cookie called <code>sessionid</code>.</p> <p>A CSRF token needs be passed as well to protect against cross-site request forgery attacks. This is the default authentication mechanism used for the AVIS web interface.</p> <p>You can get the <code>csrftoken</code> cookie by making a unauthenticated request to any <code>/accounts</code> endpoint:</p> Get the csrftoken cookie<pre><code>curl -c cookies.txt -s -X 'GET' 'http://localhost:8000/accounts/login/' \\\n  -H 'accept: */*' &gt; /dev/null\n</code></pre> <p>The sessionid will be in the cookies.txt file:</p> Get the sessionid cookie<pre><code>cat cookies.txt\n</code></pre> <p>The REST API can also be used with this authentication mechanism: just pass the <code>sessionid</code> and <code>csrftoken</code> cookies with the request:</p> Use the sessionid and csrftoken cookies to authenticate<pre><code>curl -X GET 'http://localhost:8000/api/cases/' \\\n  -H 'accept: application/json' \\\n  -H 'Cookie: sessionid=...; csrftoken=...'\n</code></pre> <p>The swagger UI can also be used with this authentication mechanism: just login normally with the <code>/accounts/login/</code> endpoint in your browser and then use the swagger UI to make requests to the API.</p>"},{"location":"api/rest/swagger/","title":"Swagger UI","text":""},{"location":"examples/","title":"Example","text":""},{"location":"examples/#integration","title":"Integration","text":"<p>There are several examples of integration of the AVIS API with real-world, productive manufacturing environments and setups.</p> <ol> <li>Capture pictures with a Luxonis    camera: examples/take-picture-luxonis-camera</li> <li>Interact with the AVIS API using the python client (open an inspection, add pictures, get inspection results,    etc...): examples/use-avis-client</li> <li>Example of a full inspection cycle using the two examples above: examples/full-cycle</li> </ol>"},{"location":"faq/","title":"Coming soon!","text":""},{"location":"getting-started/","title":"Coming soon!","text":""},{"location":"platform/","title":"Coming soon!","text":""}]}